//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.CATFORN_EAN in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CATALOG
    /// LNCAT
    /// ITAM
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="CATFORN_EAN")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATFORN_EAN : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new CATFORN_EAN object.
        /// </summary>
        /// <param name="cATALOG">Initial value of CATALOG.</param>
        /// <param name="lNCAT">Initial value of LNCAT.</param>
        /// <param name="iTAM">Initial value of ITAM.</param>
        public static CATFORN_EAN CreateCATFORN_EAN(string cATALOG, int lNCAT, int iTAM)
        {
            CATFORN_EAN cATFORN_EAN = new CATFORN_EAN();
            cATFORN_EAN.CATALOG = cATALOG;
            cATFORN_EAN.LNCAT = lNCAT;
            cATFORN_EAN.ITAM = iTAM;
            return cATFORN_EAN;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CATALOG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CATALOG
        {
            get
            {
                string value = _CATALOG;
                OnGetCATALOG(ref value);
                return value;
            }
            set
            {
                if (_CATALOG != value)
                {
                  OnCATALOGChanging(ref value);
                  ReportPropertyChanging("CATALOG");
                  _CATALOG = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CATALOG");
                  OnCATALOGChanged();
              }
            }
        }
        private string _CATALOG;
        partial void OnGetCATALOG(ref string value);
        partial void OnCATALOGChanging(ref string value);
        partial void OnCATALOGChanged();
    
        /// <summary>
        /// There are no comments for LNCAT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int LNCAT
        {
            get
            {
                int value = _LNCAT;
                OnGetLNCAT(ref value);
                return value;
            }
            set
            {
                if (_LNCAT != value)
                {
                  OnLNCATChanging(ref value);
                  ReportPropertyChanging("LNCAT");
                  _LNCAT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LNCAT");
                  OnLNCATChanged();
              }
            }
        }
        private int _LNCAT;
        partial void OnGetLNCAT(ref int value);
        partial void OnLNCATChanging(ref int value);
        partial void OnLNCATChanged();
    
        /// <summary>
        /// There are no comments for ITAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int ITAM
        {
            get
            {
                int value = _ITAM;
                OnGetITAM(ref value);
                return value;
            }
            set
            {
                if (_ITAM != value)
                {
                  OnITAMChanging(ref value);
                  ReportPropertyChanging("ITAM");
                  _ITAM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ITAM");
                  OnITAMChanged();
              }
            }
        }
        private int _ITAM;
        partial void OnGetITAM(ref int value);
        partial void OnITAMChanging(ref int value);
        partial void OnITAMChanged();
    
        /// <summary>
        /// There are no comments for TAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string TAM
        {
            get
            {
                string value = _TAM;
                OnGetTAM(ref value);
                return value;
            }
            set
            {
                if (_TAM != value)
                {
                  OnTAMChanging(ref value);
                  ReportPropertyChanging("TAM");
                  _TAM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TAM");
                  OnTAMChanged();
              }
            }
        }
        private string _TAM;
        partial void OnGetTAM(ref string value);
        partial void OnTAMChanging(ref string value);
        partial void OnTAMChanged();
    
        /// <summary>
        /// There are no comments for TIPOCOD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string TIPOCOD
        {
            get
            {
                string value = _TIPOCOD;
                OnGetTIPOCOD(ref value);
                return value;
            }
            set
            {
                if (_TIPOCOD != value)
                {
                  OnTIPOCODChanging(ref value);
                  ReportPropertyChanging("TIPOCOD");
                  _TIPOCOD = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TIPOCOD");
                  OnTIPOCODChanged();
              }
            }
        }
        private string _TIPOCOD;
        partial void OnGetTIPOCOD(ref string value);
        partial void OnTIPOCODChanging(ref string value);
        partial void OnTIPOCODChanged();
    
        /// <summary>
        /// There are no comments for EAN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string EAN
        {
            get
            {
                string value = _EAN;
                OnGetEAN(ref value);
                return value;
            }
            set
            {
                if (_EAN != value)
                {
                  OnEANChanging(ref value);
                  ReportPropertyChanging("EAN");
                  _EAN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EAN");
                  OnEANChanged();
              }
            }
        }
        private string _EAN;
        partial void OnGetEAN(ref string value);
        partial void OnEANChanging(ref string value);
        partial void OnEANChanged();
    
        /// <summary>
        /// There are no comments for NTAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string NTAM
        {
            get
            {
                string value = _NTAM;
                OnGetNTAM(ref value);
                return value;
            }
            set
            {
                if (_NTAM != value)
                {
                  OnNTAMChanging(ref value);
                  ReportPropertyChanging("NTAM");
                  _NTAM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NTAM");
                  OnNTAMChanged();
              }
            }
        }
        private string _NTAM;
        partial void OnGetNTAM(ref string value);
        partial void OnNTAMChanging(ref string value);
        partial void OnNTAMChanged();
    
        /// <summary>
        /// There are no comments for NITAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> NITAM
        {
            get
            {
                global::System.Nullable<int> value = _NITAM;
                OnGetNITAM(ref value);
                return value;
            }
            set
            {
                if (_NITAM != value)
                {
                  OnNITAMChanging(ref value);
                  ReportPropertyChanging("NITAM");
                  _NITAM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NITAM");
                  OnNITAMChanged();
              }
            }
        }
        private global::System.Nullable<int> _NITAM;
        partial void OnGetNITAM(ref global::System.Nullable<int> value);
        partial void OnNITAMChanging(ref global::System.Nullable<int> value);
        partial void OnNITAMChanged();
    
        /// <summary>
        /// There are no comments for SEL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> SEL
        {
            get
            {
                global::System.Nullable<bool> value = _SEL;
                OnGetSEL(ref value);
                return value;
            }
            set
            {
                if (_SEL != value)
                {
                  OnSELChanging(ref value);
                  ReportPropertyChanging("SEL");
                  _SEL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEL");
                  OnSELChanged();
              }
            }
        }
        private global::System.Nullable<bool> _SEL;
        partial void OnGetSEL(ref global::System.Nullable<bool> value);
        partial void OnSELChanging(ref global::System.Nullable<bool> value);
        partial void OnSELChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            CATFORN_EAN obj = new CATFORN_EAN();
            obj.CATALOG = CATALOG;
            obj.LNCAT = LNCAT;
            obj.ITAM = ITAM;
            obj.TAM = TAM;
            obj.TIPOCOD = TIPOCOD;
            obj.EAN = EAN;
            obj.NTAM = NTAM;
            obj.NITAM = NITAM;
            obj.SEL = SEL;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          CATFORN_EAN toCompare = obj as CATFORN_EAN;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.CATALOG, toCompare.CATALOG))
            return false;
          if (!Object.Equals(this.LNCAT, toCompare.LNCAT))
            return false;
          if (!Object.Equals(this.ITAM, toCompare.ITAM))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + CATALOG.GetHashCode();
          hashCode = (hashCode * 7) + LNCAT.GetHashCode();
          hashCode = (hashCode * 7) + ITAM.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
