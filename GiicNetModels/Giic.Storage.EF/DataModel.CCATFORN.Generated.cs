//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.CCATFORN in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CATALOGO
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="CCATFORN")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CCATFORN : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new CCATFORN object.
        /// </summary>
        /// <param name="cATALOGO">Initial value of CATALOGO.</param>
        public static CCATFORN CreateCCATFORN(string cATALOGO)
        {
            CCATFORN cCATFORN = new CCATFORN();
            cCATFORN.CATALOGO = cATALOGO;
            return cCATFORN;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CATALOGO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CATALOGO
        {
            get
            {
                string value = _CATALOGO;
                OnGetCATALOGO(ref value);
                return value;
            }
            set
            {
                if (_CATALOGO != value)
                {
                  OnCATALOGOChanging(ref value);
                  ReportPropertyChanging("CATALOGO");
                  _CATALOGO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CATALOGO");
                  OnCATALOGOChanged();
              }
            }
        }
        private string _CATALOGO;
        partial void OnGetCATALOGO(ref string value);
        partial void OnCATALOGOChanging(ref string value);
        partial void OnCATALOGOChanged();
    
        /// <summary>
        /// There are no comments for TIPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string TIPO
        {
            get
            {
                string value = _TIPO;
                OnGetTIPO(ref value);
                return value;
            }
            set
            {
                if (_TIPO != value)
                {
                  OnTIPOChanging(ref value);
                  ReportPropertyChanging("TIPO");
                  _TIPO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TIPO");
                  OnTIPOChanged();
              }
            }
        }
        private string _TIPO;
        partial void OnGetTIPO(ref string value);
        partial void OnTIPOChanging(ref string value);
        partial void OnTIPOChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for ESTACAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string ESTACAO
        {
            get
            {
                string value = _ESTACAO;
                OnGetESTACAO(ref value);
                return value;
            }
            set
            {
                if (_ESTACAO != value)
                {
                  OnESTACAOChanging(ref value);
                  ReportPropertyChanging("ESTACAO");
                  _ESTACAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ESTACAO");
                  OnESTACAOChanged();
              }
            }
        }
        private string _ESTACAO;
        partial void OnGetESTACAO(ref string value);
        partial void OnESTACAOChanging(ref string value);
        partial void OnESTACAOChanged();
    
        /// <summary>
        /// There are no comments for DATA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DATA
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DATA;
                OnGetDATA(ref value);
                return value;
            }
            set
            {
                if (_DATA != value)
                {
                  OnDATAChanging(ref value);
                  ReportPropertyChanging("DATA");
                  _DATA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATA");
                  OnDATAChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DATA;
        partial void OnGetDATA(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAChanged();
    
        /// <summary>
        /// There are no comments for CDFORN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string CDFORN
        {
            get
            {
                string value = _CDFORN;
                OnGetCDFORN(ref value);
                return value;
            }
            set
            {
                if (_CDFORN != value)
                {
                  OnCDFORNChanging(ref value);
                  ReportPropertyChanging("CDFORN");
                  _CDFORN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CDFORN");
                  OnCDFORNChanged();
              }
            }
        }
        private string _CDFORN;
        partial void OnGetCDFORN(ref string value);
        partial void OnCDFORNChanging(ref string value);
        partial void OnCDFORNChanged();
    
        /// <summary>
        /// There are no comments for COMENT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string COMENT
        {
            get
            {
                string value = _COMENT;
                OnGetCOMENT(ref value);
                return value;
            }
            set
            {
                if (_COMENT != value)
                {
                  OnCOMENTChanging(ref value);
                  ReportPropertyChanging("COMENT");
                  _COMENT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("COMENT");
                  OnCOMENTChanged();
              }
            }
        }
        private string _COMENT;
        partial void OnGetCOMENT(ref string value);
        partial void OnCOMENTChanging(ref string value);
        partial void OnCOMENTChanged();
    
        /// <summary>
        /// There are no comments for MOEDA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string MOEDA
        {
            get
            {
                string value = _MOEDA;
                OnGetMOEDA(ref value);
                return value;
            }
            set
            {
                if (_MOEDA != value)
                {
                  OnMOEDAChanging(ref value);
                  ReportPropertyChanging("MOEDA");
                  _MOEDA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MOEDA");
                  OnMOEDAChanged();
              }
            }
        }
        private string _MOEDA;
        partial void OnGetMOEDA(ref string value);
        partial void OnMOEDAChanging(ref string value);
        partial void OnMOEDAChanged();
    
        /// <summary>
        /// There are no comments for ID_MSG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string ID_MSG
        {
            get
            {
                string value = _ID_MSG;
                OnGetID_MSG(ref value);
                return value;
            }
            set
            {
                if (_ID_MSG != value)
                {
                  OnID_MSGChanging(ref value);
                  ReportPropertyChanging("ID_MSG");
                  _ID_MSG = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ID_MSG");
                  OnID_MSGChanged();
              }
            }
        }
        private string _ID_MSG;
        partial void OnGetID_MSG(ref string value);
        partial void OnID_MSGChanging(ref string value);
        partial void OnID_MSGChanged();
    
        /// <summary>
        /// There are no comments for PASTA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string PASTA
        {
            get
            {
                string value = _PASTA;
                OnGetPASTA(ref value);
                return value;
            }
            set
            {
                if (_PASTA != value)
                {
                  OnPASTAChanging(ref value);
                  ReportPropertyChanging("PASTA");
                  _PASTA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PASTA");
                  OnPASTAChanged();
              }
            }
        }
        private string _PASTA;
        partial void OnGetPASTA(ref string value);
        partial void OnPASTAChanging(ref string value);
        partial void OnPASTAChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            CCATFORN obj = new CCATFORN();
            obj.CATALOGO = CATALOGO;
            obj.TIPO = TIPO;
            obj.DESCRICAO = DESCRICAO;
            obj.ESTACAO = ESTACAO;
            obj.DATA = DATA;
            obj.CDFORN = CDFORN;
            obj.COMENT = COMENT;
            obj.MOEDA = MOEDA;
            obj.ID_MSG = ID_MSG;
            obj.PASTA = PASTA;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          CCATFORN toCompare = obj as CCATFORN;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.CATALOGO, toCompare.CATALOGO))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + CATALOGO.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
