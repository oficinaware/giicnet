//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.CMPSORT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NRENCO
    /// LNENCO
    /// pos
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="CMPSORT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CMPSORT : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new CMPSORT object.
        /// </summary>
        /// <param name="nRENCO">Initial value of NRENCO.</param>
        /// <param name="lNENCO">Initial value of LNENCO.</param>
        /// <param name="pos">Initial value of pos.</param>
        public static CMPSORT CreateCMPSORT(string nRENCO, int lNENCO, int pos)
        {
            CMPSORT cMPSORT = new CMPSORT();
            cMPSORT.NRENCO = nRENCO;
            cMPSORT.LNENCO = lNENCO;
            cMPSORT.pos = pos;
            return cMPSORT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NRENCO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string NRENCO
        {
            get
            {
                string value = _NRENCO;
                OnGetNRENCO(ref value);
                return value;
            }
            set
            {
                if (_NRENCO != value)
                {
                  OnNRENCOChanging(ref value);
                  ReportPropertyChanging("NRENCO");
                  _NRENCO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NRENCO");
                  OnNRENCOChanged();
              }
            }
        }
        private string _NRENCO;
        partial void OnGetNRENCO(ref string value);
        partial void OnNRENCOChanging(ref string value);
        partial void OnNRENCOChanged();
    
        /// <summary>
        /// There are no comments for LNENCO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int LNENCO
        {
            get
            {
                int value = _LNENCO;
                OnGetLNENCO(ref value);
                return value;
            }
            set
            {
                if (_LNENCO != value)
                {
                  OnLNENCOChanging(ref value);
                  ReportPropertyChanging("LNENCO");
                  _LNENCO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LNENCO");
                  OnLNENCOChanged();
              }
            }
        }
        private int _LNENCO;
        partial void OnGetLNENCO(ref int value);
        partial void OnLNENCOChanging(ref int value);
        partial void OnLNENCOChanged();
    
        /// <summary>
        /// There are no comments for pos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int pos
        {
            get
            {
                int value = _pos;
                OnGetpos(ref value);
                return value;
            }
            set
            {
                if (_pos != value)
                {
                  OnposChanging(ref value);
                  ReportPropertyChanging("pos");
                  _pos = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("pos");
                  OnposChanged();
              }
            }
        }
        private int _pos;
        partial void OnGetpos(ref int value);
        partial void OnposChanging(ref int value);
        partial void OnposChanged();
    
        /// <summary>
        /// There are no comments for TIPSORT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string TIPSORT
        {
            get
            {
                string value = _TIPSORT;
                OnGetTIPSORT(ref value);
                return value;
            }
            set
            {
                if (_TIPSORT != value)
                {
                  OnTIPSORTChanging(ref value);
                  ReportPropertyChanging("TIPSORT");
                  _TIPSORT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TIPSORT");
                  OnTIPSORTChanged();
              }
            }
        }
        private string _TIPSORT;
        partial void OnGetTIPSORT(ref string value);
        partial void OnTIPSORTChanging(ref string value);
        partial void OnTIPSORTChanged();
    
        /// <summary>
        /// There are no comments for QTSORT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> QTSORT
        {
            get
            {
                global::System.Nullable<int> value = _QTSORT;
                OnGetQTSORT(ref value);
                return value;
            }
            set
            {
                if (_QTSORT != value)
                {
                  OnQTSORTChanging(ref value);
                  ReportPropertyChanging("QTSORT");
                  _QTSORT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QTSORT");
                  OnQTSORTChanged();
              }
            }
        }
        private global::System.Nullable<int> _QTSORT;
        partial void OnGetQTSORT(ref global::System.Nullable<int> value);
        partial void OnQTSORTChanging(ref global::System.Nullable<int> value);
        partial void OnQTSORTChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            CMPSORT obj = new CMPSORT();
            obj.NRENCO = NRENCO;
            obj.LNENCO = LNENCO;
            obj.pos = pos;
            obj.TIPSORT = TIPSORT;
            obj.QTSORT = QTSORT;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          CMPSORT toCompare = obj as CMPSORT;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.NRENCO, toCompare.NRENCO))
            return false;
          if (!Object.Equals(this.LNENCO, toCompare.LNENCO))
            return false;
          if (!Object.Equals(this.pos, toCompare.pos))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + NRENCO.GetHashCode();
          hashCode = (hashCode * 7) + LNENCO.GetHashCode();
          hashCode = (hashCode * 7) + pos.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
