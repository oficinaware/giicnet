//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.CTB_TOKEN in the schema.
    /// </summary>
    /// <KeyProperties>
    /// tpdoc
    /// serie
    /// nrfact
    /// ln
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="CTB_TOKEN")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CTB_TOKEN : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new CTB_TOKEN object.
        /// </summary>
        /// <param name="tpdoc">Initial value of tpdoc.</param>
        /// <param name="serie">Initial value of serie.</param>
        /// <param name="nrfact">Initial value of nrfact.</param>
        /// <param name="ln">Initial value of ln.</param>
        public static CTB_TOKEN CreateCTB_TOKEN(string tpdoc, string serie, int nrfact, int ln)
        {
            CTB_TOKEN cTB_TOKEN = new CTB_TOKEN();
            cTB_TOKEN.tpdoc = tpdoc;
            cTB_TOKEN.serie = serie;
            cTB_TOKEN.nrfact = nrfact;
            cTB_TOKEN.ln = ln;
            return cTB_TOKEN;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for tpdoc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string tpdoc
        {
            get
            {
                string value = _tpdoc;
                OnGettpdoc(ref value);
                return value;
            }
            set
            {
                if (_tpdoc != value)
                {
                  OntpdocChanging(ref value);
                  ReportPropertyChanging("tpdoc");
                  _tpdoc = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("tpdoc");
                  OntpdocChanged();
              }
            }
        }
        private string _tpdoc;
        partial void OnGettpdoc(ref string value);
        partial void OntpdocChanging(ref string value);
        partial void OntpdocChanged();
    
        /// <summary>
        /// There are no comments for serie in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string serie
        {
            get
            {
                string value = _serie;
                OnGetserie(ref value);
                return value;
            }
            set
            {
                if (_serie != value)
                {
                  OnserieChanging(ref value);
                  ReportPropertyChanging("serie");
                  _serie = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("serie");
                  OnserieChanged();
              }
            }
        }
        private string _serie;
        partial void OnGetserie(ref string value);
        partial void OnserieChanging(ref string value);
        partial void OnserieChanged();
    
        /// <summary>
        /// There are no comments for nrfact in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int nrfact
        {
            get
            {
                int value = _nrfact;
                OnGetnrfact(ref value);
                return value;
            }
            set
            {
                if (_nrfact != value)
                {
                  OnnrfactChanging(ref value);
                  ReportPropertyChanging("nrfact");
                  _nrfact = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("nrfact");
                  OnnrfactChanged();
              }
            }
        }
        private int _nrfact;
        partial void OnGetnrfact(ref int value);
        partial void OnnrfactChanging(ref int value);
        partial void OnnrfactChanged();
    
        /// <summary>
        /// There are no comments for ln in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int ln
        {
            get
            {
                int value = _ln;
                OnGetln(ref value);
                return value;
            }
            set
            {
                if (_ln != value)
                {
                  OnlnChanging(ref value);
                  ReportPropertyChanging("ln");
                  _ln = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ln");
                  OnlnChanged();
              }
            }
        }
        private int _ln;
        partial void OnGetln(ref int value);
        partial void OnlnChanging(ref int value);
        partial void OnlnChanged();
    
        /// <summary>
        /// There are no comments for conta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string conta
        {
            get
            {
                string value = _conta;
                OnGetconta(ref value);
                return value;
            }
            set
            {
                if (_conta != value)
                {
                  OncontaChanging(ref value);
                  ReportPropertyChanging("conta");
                  _conta = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("conta");
                  OncontaChanged();
              }
            }
        }
        private string _conta;
        partial void OnGetconta(ref string value);
        partial void OncontaChanging(ref string value);
        partial void OncontaChanged();
    
        /// <summary>
        /// There are no comments for valor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> valor
        {
            get
            {
                global::System.Nullable<decimal> value = _valor;
                OnGetvalor(ref value);
                return value;
            }
            set
            {
                if (_valor != value)
                {
                  OnvalorChanging(ref value);
                  ReportPropertyChanging("valor");
                  _valor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("valor");
                  OnvalorChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _valor;
        partial void OnGetvalor(ref global::System.Nullable<decimal> value);
        partial void OnvalorChanging(ref global::System.Nullable<decimal> value);
        partial void OnvalorChanged();
    
        /// <summary>
        /// There are no comments for sinal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public string sinal
        {
            get
            {
                string value = _sinal;
                OnGetsinal(ref value);
                return value;
            }
            set
            {
                if (_sinal != value)
                {
                  OnsinalChanging(ref value);
                  ReportPropertyChanging("sinal");
                  _sinal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("sinal");
                  OnsinalChanged();
              }
            }
        }
        private string _sinal;
        partial void OnGetsinal(ref string value);
        partial void OnsinalChanging(ref string value);
        partial void OnsinalChanged();
    
        /// <summary>
        /// There are no comments for Fich in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string Fich
        {
            get
            {
                string value = _Fich;
                OnGetFich(ref value);
                return value;
            }
            set
            {
                if (_Fich != value)
                {
                  OnFichChanging(ref value);
                  ReportPropertyChanging("Fich");
                  _Fich = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Fich");
                  OnFichChanged();
              }
            }
        }
        private string _Fich;
        partial void OnGetFich(ref string value);
        partial void OnFichChanging(ref string value);
        partial void OnFichChanged();
    
        /// <summary>
        /// There are no comments for Data_Int in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Data_Int
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Data_Int;
                OnGetData_Int(ref value);
                return value;
            }
            set
            {
                if (_Data_Int != value)
                {
                  OnData_IntChanging(ref value);
                  ReportPropertyChanging("Data_Int");
                  _Data_Int = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Data_Int");
                  OnData_IntChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Data_Int;
        partial void OnGetData_Int(ref global::System.Nullable<System.DateTime> value);
        partial void OnData_IntChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnData_IntChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            CTB_TOKEN obj = new CTB_TOKEN();
            obj.tpdoc = tpdoc;
            obj.serie = serie;
            obj.nrfact = nrfact;
            obj.ln = ln;
            obj.conta = conta;
            obj.valor = valor;
            obj.sinal = sinal;
            obj.Fich = Fich;
            obj.Data_Int = Data_Int;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          CTB_TOKEN toCompare = obj as CTB_TOKEN;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.tpdoc, toCompare.tpdoc))
            return false;
          if (!Object.Equals(this.serie, toCompare.serie))
            return false;
          if (!Object.Equals(this.nrfact, toCompare.nrfact))
            return false;
          if (!Object.Equals(this.ln, toCompare.ln))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + tpdoc.GetHashCode();
          hashCode = (hashCode * 7) + serie.GetHashCode();
          hashCode = (hashCode * 7) + nrfact.GetHashCode();
          hashCode = (hashCode * 7) + ln.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
