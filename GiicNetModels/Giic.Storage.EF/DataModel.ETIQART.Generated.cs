//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.ETIQART in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NRREG
    /// SPID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="ETIQART")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ETIQART : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new ETIQART object.
        /// </summary>
        /// <param name="nRREG">Initial value of NRREG.</param>
        /// <param name="sPID">Initial value of SPID.</param>
        public static ETIQART CreateETIQART(global::System.Guid nRREG, int sPID)
        {
            ETIQART eTIQART = new ETIQART();
            eTIQART.NRREG = nRREG;
            eTIQART.SPID = sPID;
            return eTIQART;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NRREG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.Guid NRREG
        {
            get
            {
                global::System.Guid value = _NRREG;
                OnGetNRREG(ref value);
                return value;
            }
            set
            {
                if (_NRREG != value)
                {
                  OnNRREGChanging(ref value);
                  ReportPropertyChanging("NRREG");
                  _NRREG = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRREG");
                  OnNRREGChanged();
              }
            }
        }
        private global::System.Guid _NRREG;
        partial void OnGetNRREG(ref global::System.Guid value);
        partial void OnNRREGChanging(ref global::System.Guid value);
        partial void OnNRREGChanged();
    
        /// <summary>
        /// There are no comments for SPID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SPID
        {
            get
            {
                int value = _SPID;
                OnGetSPID(ref value);
                return value;
            }
            set
            {
                if (_SPID != value)
                {
                  OnSPIDChanging(ref value);
                  ReportPropertyChanging("SPID");
                  _SPID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SPID");
                  OnSPIDChanged();
              }
            }
        }
        private int _SPID;
        partial void OnGetSPID(ref int value);
        partial void OnSPIDChanging(ref int value);
        partial void OnSPIDChanged();
    
        /// <summary>
        /// There are no comments for ARTIGO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string ARTIGO
        {
            get
            {
                string value = _ARTIGO;
                OnGetARTIGO(ref value);
                return value;
            }
            set
            {
                if (_ARTIGO != value)
                {
                  OnARTIGOChanging(ref value);
                  ReportPropertyChanging("ARTIGO");
                  _ARTIGO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ARTIGO");
                  OnARTIGOChanged();
              }
            }
        }
        private string _ARTIGO;
        partial void OnGetARTIGO(ref string value);
        partial void OnARTIGOChanging(ref string value);
        partial void OnARTIGOChanged();
    
        /// <summary>
        /// There are no comments for CODBARRAS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string CODBARRAS
        {
            get
            {
                string value = _CODBARRAS;
                OnGetCODBARRAS(ref value);
                return value;
            }
            set
            {
                if (_CODBARRAS != value)
                {
                  OnCODBARRASChanging(ref value);
                  ReportPropertyChanging("CODBARRAS");
                  _CODBARRAS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CODBARRAS");
                  OnCODBARRASChanged();
              }
            }
        }
        private string _CODBARRAS;
        partial void OnGetCODBARRAS(ref string value);
        partial void OnCODBARRASChanging(ref string value);
        partial void OnCODBARRASChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for CARTAZ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string CARTAZ
        {
            get
            {
                string value = _CARTAZ;
                OnGetCARTAZ(ref value);
                return value;
            }
            set
            {
                if (_CARTAZ != value)
                {
                  OnCARTAZChanging(ref value);
                  ReportPropertyChanging("CARTAZ");
                  _CARTAZ = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CARTAZ");
                  OnCARTAZChanged();
              }
            }
        }
        private string _CARTAZ = @"space(5)";
        partial void OnGetCARTAZ(ref string value);
        partial void OnCARTAZChanging(ref string value);
        partial void OnCARTAZChanged();
    
        /// <summary>
        /// There are no comments for CODCOR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string CODCOR
        {
            get
            {
                string value = _CODCOR;
                OnGetCODCOR(ref value);
                return value;
            }
            set
            {
                if (_CODCOR != value)
                {
                  OnCODCORChanging(ref value);
                  ReportPropertyChanging("CODCOR");
                  _CODCOR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CODCOR");
                  OnCODCORChanged();
              }
            }
        }
        private string _CODCOR = @"space(3)";
        partial void OnGetCODCOR(ref string value);
        partial void OnCODCORChanging(ref string value);
        partial void OnCODCORChanged();
    
        /// <summary>
        /// There are no comments for UNMED in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string UNMED
        {
            get
            {
                string value = _UNMED;
                OnGetUNMED(ref value);
                return value;
            }
            set
            {
                if (_UNMED != value)
                {
                  OnUNMEDChanging(ref value);
                  ReportPropertyChanging("UNMED");
                  _UNMED = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UNMED");
                  OnUNMEDChanged();
              }
            }
        }
        private string _UNMED;
        partial void OnGetUNMED(ref string value);
        partial void OnUNMEDChanging(ref string value);
        partial void OnUNMEDChanged();
    
        /// <summary>
        /// There are no comments for FORN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string FORN
        {
            get
            {
                string value = _FORN;
                OnGetFORN(ref value);
                return value;
            }
            set
            {
                if (_FORN != value)
                {
                  OnFORNChanging(ref value);
                  ReportPropertyChanging("FORN");
                  _FORN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FORN");
                  OnFORNChanged();
              }
            }
        }
        private string _FORN;
        partial void OnGetFORN(ref string value);
        partial void OnFORNChanging(ref string value);
        partial void OnFORNChanged();
    
        /// <summary>
        /// There are no comments for IMAGEM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(150)]
        public string IMAGEM
        {
            get
            {
                string value = _IMAGEM;
                OnGetIMAGEM(ref value);
                return value;
            }
            set
            {
                if (_IMAGEM != value)
                {
                  OnIMAGEMChanging(ref value);
                  ReportPropertyChanging("IMAGEM");
                  _IMAGEM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IMAGEM");
                  OnIMAGEMChanged();
              }
            }
        }
        private string _IMAGEM;
        partial void OnGetIMAGEM(ref string value);
        partial void OnIMAGEMChanging(ref string value);
        partial void OnIMAGEMChanged();
    
        /// <summary>
        /// There are no comments for TAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string TAM
        {
            get
            {
                string value = _TAM;
                OnGetTAM(ref value);
                return value;
            }
            set
            {
                if (_TAM != value)
                {
                  OnTAMChanging(ref value);
                  ReportPropertyChanging("TAM");
                  _TAM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TAM");
                  OnTAMChanged();
              }
            }
        }
        private string _TAM;
        partial void OnGetTAM(ref string value);
        partial void OnTAMChanging(ref string value);
        partial void OnTAMChanged();
    
        /// <summary>
        /// There are no comments for ITAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<short> ITAM
        {
            get
            {
                global::System.Nullable<short> value = _ITAM;
                OnGetITAM(ref value);
                return value;
            }
            set
            {
                if (_ITAM != value)
                {
                  OnITAMChanging(ref value);
                  ReportPropertyChanging("ITAM");
                  _ITAM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ITAM");
                  OnITAMChanged();
              }
            }
        }
        private global::System.Nullable<short> _ITAM;
        partial void OnGetITAM(ref global::System.Nullable<short> value);
        partial void OnITAMChanging(ref global::System.Nullable<short> value);
        partial void OnITAMChanged();
    
        /// <summary>
        /// There are no comments for PRCCUST in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> PRCCUST
        {
            get
            {
                global::System.Nullable<decimal> value = _PRCCUST;
                OnGetPRCCUST(ref value);
                return value;
            }
            set
            {
                if (_PRCCUST != value)
                {
                  OnPRCCUSTChanging(ref value);
                  ReportPropertyChanging("PRCCUST");
                  _PRCCUST = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRCCUST");
                  OnPRCCUSTChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _PRCCUST = 0m;
        partial void OnGetPRCCUST(ref global::System.Nullable<decimal> value);
        partial void OnPRCCUSTChanging(ref global::System.Nullable<decimal> value);
        partial void OnPRCCUSTChanged();
    
        /// <summary>
        /// There are no comments for PRCVND in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> PRCVND
        {
            get
            {
                global::System.Nullable<decimal> value = _PRCVND;
                OnGetPRCVND(ref value);
                return value;
            }
            set
            {
                if (_PRCVND != value)
                {
                  OnPRCVNDChanging(ref value);
                  ReportPropertyChanging("PRCVND");
                  _PRCVND = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRCVND");
                  OnPRCVNDChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _PRCVND = 0m;
        partial void OnGetPRCVND(ref global::System.Nullable<decimal> value);
        partial void OnPRCVNDChanging(ref global::System.Nullable<decimal> value);
        partial void OnPRCVNDChanged();
    
        /// <summary>
        /// There are no comments for QT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> QT
        {
            get
            {
                global::System.Nullable<int> value = _QT;
                OnGetQT(ref value);
                return value;
            }
            set
            {
                if (_QT != value)
                {
                  OnQTChanging(ref value);
                  ReportPropertyChanging("QT");
                  _QT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QT");
                  OnQTChanged();
              }
            }
        }
        private global::System.Nullable<int> _QT;
        partial void OnGetQT(ref global::System.Nullable<int> value);
        partial void OnQTChanging(ref global::System.Nullable<int> value);
        partial void OnQTChanged();
    
        /// <summary>
        /// There are no comments for QUANT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> QUANT
        {
            get
            {
                global::System.Nullable<decimal> value = _QUANT;
                OnGetQUANT(ref value);
                return value;
            }
            set
            {
                if (_QUANT != value)
                {
                  OnQUANTChanging(ref value);
                  ReportPropertyChanging("QUANT");
                  _QUANT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QUANT");
                  OnQUANTChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _QUANT = 0m;
        partial void OnGetQUANT(ref global::System.Nullable<decimal> value);
        partial void OnQUANTChanging(ref global::System.Nullable<decimal> value);
        partial void OnQUANTChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            ETIQART obj = new ETIQART();
            obj.NRREG = NRREG;
            obj.SPID = SPID;
            obj.ARTIGO = ARTIGO;
            obj.CODBARRAS = CODBARRAS;
            obj.DESCRICAO = DESCRICAO;
            obj.CARTAZ = CARTAZ;
            obj.CODCOR = CODCOR;
            obj.UNMED = UNMED;
            obj.FORN = FORN;
            obj.IMAGEM = IMAGEM;
            obj.TAM = TAM;
            obj.ITAM = ITAM;
            obj.PRCCUST = PRCCUST;
            obj.PRCVND = PRCVND;
            obj.QT = QT;
            obj.QUANT = QUANT;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          ETIQART toCompare = obj as ETIQART;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.NRREG, toCompare.NRREG))
            return false;
          if (!Object.Equals(this.SPID, toCompare.SPID))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + NRREG.GetHashCode();
          hashCode = (hashCode * 7) + SPID.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
