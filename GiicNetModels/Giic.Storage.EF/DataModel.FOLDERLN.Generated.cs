//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.FOLDERLN in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NR_FOLDER
    /// COD
    /// NRENCO
    /// LNENCO
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="FOLDERLN")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FOLDERLN : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new FOLDERLN object.
        /// </summary>
        /// <param name="nR_FOLDER">Initial value of NR_FOLDER.</param>
        /// <param name="cOD">Initial value of COD.</param>
        /// <param name="nRENCO">Initial value of NRENCO.</param>
        /// <param name="lNENCO">Initial value of LNENCO.</param>
        public static FOLDERLN CreateFOLDERLN(string nR_FOLDER, string cOD, string nRENCO, int lNENCO)
        {
            FOLDERLN fOLDERLN = new FOLDERLN();
            fOLDERLN.NR_FOLDER = nR_FOLDER;
            fOLDERLN.COD = cOD;
            fOLDERLN.NRENCO = nRENCO;
            fOLDERLN.LNENCO = lNENCO;
            return fOLDERLN;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NR_FOLDER in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string NR_FOLDER
        {
            get
            {
                string value = _NR_FOLDER;
                OnGetNR_FOLDER(ref value);
                return value;
            }
            set
            {
                if (_NR_FOLDER != value)
                {
                  OnNR_FOLDERChanging(ref value);
                  ReportPropertyChanging("NR_FOLDER");
                  _NR_FOLDER = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NR_FOLDER");
                  OnNR_FOLDERChanged();
              }
            }
        }
        private string _NR_FOLDER;
        partial void OnGetNR_FOLDER(ref string value);
        partial void OnNR_FOLDERChanging(ref string value);
        partial void OnNR_FOLDERChanged();
    
        /// <summary>
        /// There are no comments for COD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string COD
        {
            get
            {
                string value = _COD;
                OnGetCOD(ref value);
                return value;
            }
            set
            {
                if (_COD != value)
                {
                  OnCODChanging(ref value);
                  ReportPropertyChanging("COD");
                  _COD = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("COD");
                  OnCODChanged();
              }
            }
        }
        private string _COD;
        partial void OnGetCOD(ref string value);
        partial void OnCODChanging(ref string value);
        partial void OnCODChanged();
    
        /// <summary>
        /// There are no comments for NRENCO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string NRENCO
        {
            get
            {
                string value = _NRENCO;
                OnGetNRENCO(ref value);
                return value;
            }
            set
            {
                if (_NRENCO != value)
                {
                  OnNRENCOChanging(ref value);
                  ReportPropertyChanging("NRENCO");
                  _NRENCO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NRENCO");
                  OnNRENCOChanged();
              }
            }
        }
        private string _NRENCO;
        partial void OnGetNRENCO(ref string value);
        partial void OnNRENCOChanging(ref string value);
        partial void OnNRENCOChanged();
    
        /// <summary>
        /// There are no comments for LNENCO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int LNENCO
        {
            get
            {
                int value = _LNENCO;
                OnGetLNENCO(ref value);
                return value;
            }
            set
            {
                if (_LNENCO != value)
                {
                  OnLNENCOChanging(ref value);
                  ReportPropertyChanging("LNENCO");
                  _LNENCO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LNENCO");
                  OnLNENCOChanged();
              }
            }
        }
        private int _LNENCO;
        partial void OnGetLNENCO(ref int value);
        partial void OnLNENCOChanging(ref int value);
        partial void OnLNENCOChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            FOLDERLN obj = new FOLDERLN();
            obj.NR_FOLDER = NR_FOLDER;
            obj.COD = COD;
            obj.NRENCO = NRENCO;
            obj.LNENCO = LNENCO;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          FOLDERLN toCompare = obj as FOLDERLN;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.NR_FOLDER, toCompare.NR_FOLDER))
            return false;
          if (!Object.Equals(this.COD, toCompare.COD))
            return false;
          if (!Object.Equals(this.NRENCO, toCompare.NRENCO))
            return false;
          if (!Object.Equals(this.LNENCO, toCompare.LNENCO))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + NR_FOLDER.GetHashCode();
          hashCode = (hashCode * 7) + COD.GetHashCode();
          hashCode = (hashCode * 7) + NRENCO.GetHashCode();
          hashCode = (hashCode * 7) + LNENCO.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
