//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.LNCONSERTOS in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ARM
    /// TPDOC
    /// NRFACT
    /// LNFACT
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="LNCONSERTOS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LNCONSERTOS : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new LNCONSERTOS object.
        /// </summary>
        /// <param name="aRM">Initial value of ARM.</param>
        /// <param name="tPDOC">Initial value of TPDOC.</param>
        /// <param name="nRFACT">Initial value of NRFACT.</param>
        /// <param name="lNFACT">Initial value of LNFACT.</param>
        public static LNCONSERTOS CreateLNCONSERTOS(string aRM, string tPDOC, int nRFACT, int lNFACT)
        {
            LNCONSERTOS lNCONSERTOS = new LNCONSERTOS();
            lNCONSERTOS.ARM = aRM;
            lNCONSERTOS.TPDOC = tPDOC;
            lNCONSERTOS.NRFACT = nRFACT;
            lNCONSERTOS.LNFACT = lNFACT;
            return lNCONSERTOS;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ARM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ARM
        {
            get
            {
                string value = _ARM;
                OnGetARM(ref value);
                return value;
            }
            set
            {
                if (_ARM != value)
                {
                  OnARMChanging(ref value);
                  ReportPropertyChanging("ARM");
                  _ARM = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ARM");
                  OnARMChanged();
              }
            }
        }
        private string _ARM;
        partial void OnGetARM(ref string value);
        partial void OnARMChanging(ref string value);
        partial void OnARMChanged();
    
        /// <summary>
        /// There are no comments for TPDOC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string TPDOC
        {
            get
            {
                string value = _TPDOC;
                OnGetTPDOC(ref value);
                return value;
            }
            set
            {
                if (_TPDOC != value)
                {
                  OnTPDOCChanging(ref value);
                  ReportPropertyChanging("TPDOC");
                  _TPDOC = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TPDOC");
                  OnTPDOCChanged();
              }
            }
        }
        private string _TPDOC;
        partial void OnGetTPDOC(ref string value);
        partial void OnTPDOCChanging(ref string value);
        partial void OnTPDOCChanged();
    
        /// <summary>
        /// There are no comments for NRFACT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int NRFACT
        {
            get
            {
                int value = _NRFACT;
                OnGetNRFACT(ref value);
                return value;
            }
            set
            {
                if (_NRFACT != value)
                {
                  OnNRFACTChanging(ref value);
                  ReportPropertyChanging("NRFACT");
                  _NRFACT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRFACT");
                  OnNRFACTChanged();
              }
            }
        }
        private int _NRFACT;
        partial void OnGetNRFACT(ref int value);
        partial void OnNRFACTChanging(ref int value);
        partial void OnNRFACTChanged();
    
        /// <summary>
        /// There are no comments for LNFACT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int LNFACT
        {
            get
            {
                int value = _LNFACT;
                OnGetLNFACT(ref value);
                return value;
            }
            set
            {
                if (_LNFACT != value)
                {
                  OnLNFACTChanging(ref value);
                  ReportPropertyChanging("LNFACT");
                  _LNFACT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LNFACT");
                  OnLNFACTChanged();
              }
            }
        }
        private int _LNFACT;
        partial void OnGetLNFACT(ref int value);
        partial void OnLNFACTChanging(ref int value);
        partial void OnLNFACTChanged();
    
        /// <summary>
        /// There are no comments for TIPODOC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string TIPODOC
        {
            get
            {
                string value = _TIPODOC;
                OnGetTIPODOC(ref value);
                return value;
            }
            set
            {
                if (_TIPODOC != value)
                {
                  OnTIPODOCChanging(ref value);
                  ReportPropertyChanging("TIPODOC");
                  _TIPODOC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TIPODOC");
                  OnTIPODOCChanged();
              }
            }
        }
        private string _TIPODOC;
        partial void OnGetTIPODOC(ref string value);
        partial void OnTIPODOCChanging(ref string value);
        partial void OnTIPODOCChanged();
    
        /// <summary>
        /// There are no comments for NRDOC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> NRDOC
        {
            get
            {
                global::System.Nullable<int> value = _NRDOC;
                OnGetNRDOC(ref value);
                return value;
            }
            set
            {
                if (_NRDOC != value)
                {
                  OnNRDOCChanging(ref value);
                  ReportPropertyChanging("NRDOC");
                  _NRDOC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRDOC");
                  OnNRDOCChanged();
              }
            }
        }
        private global::System.Nullable<int> _NRDOC;
        partial void OnGetNRDOC(ref global::System.Nullable<int> value);
        partial void OnNRDOCChanging(ref global::System.Nullable<int> value);
        partial void OnNRDOCChanged();
    
        /// <summary>
        /// There are no comments for ARMD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string ARMD
        {
            get
            {
                string value = _ARMD;
                OnGetARMD(ref value);
                return value;
            }
            set
            {
                if (_ARMD != value)
                {
                  OnARMDChanging(ref value);
                  ReportPropertyChanging("ARMD");
                  _ARMD = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ARMD");
                  OnARMDChanged();
              }
            }
        }
        private string _ARMD;
        partial void OnGetARMD(ref string value);
        partial void OnARMDChanging(ref string value);
        partial void OnARMDChanged();
    
        /// <summary>
        /// There are no comments for FORN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string FORN
        {
            get
            {
                string value = _FORN;
                OnGetFORN(ref value);
                return value;
            }
            set
            {
                if (_FORN != value)
                {
                  OnFORNChanging(ref value);
                  ReportPropertyChanging("FORN");
                  _FORN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FORN");
                  OnFORNChanged();
              }
            }
        }
        private string _FORN;
        partial void OnGetFORN(ref string value);
        partial void OnFORNChanging(ref string value);
        partial void OnFORNChanged();
    
        /// <summary>
        /// There are no comments for CODCONSERTO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> CODCONSERTO
        {
            get
            {
                global::System.Nullable<int> value = _CODCONSERTO;
                OnGetCODCONSERTO(ref value);
                return value;
            }
            set
            {
                if (_CODCONSERTO != value)
                {
                  OnCODCONSERTOChanging(ref value);
                  ReportPropertyChanging("CODCONSERTO");
                  _CODCONSERTO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CODCONSERTO");
                  OnCODCONSERTOChanged();
              }
            }
        }
        private global::System.Nullable<int> _CODCONSERTO;
        partial void OnGetCODCONSERTO(ref global::System.Nullable<int> value);
        partial void OnCODCONSERTOChanging(ref global::System.Nullable<int> value);
        partial void OnCODCONSERTOChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO_ARTIGO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string DESCRICAO_ARTIGO
        {
            get
            {
                string value = _DESCRICAO_ARTIGO;
                OnGetDESCRICAO_ARTIGO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO_ARTIGO != value)
                {
                  OnDESCRICAO_ARTIGOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO_ARTIGO");
                  _DESCRICAO_ARTIGO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO_ARTIGO");
                  OnDESCRICAO_ARTIGOChanged();
              }
            }
        }
        private string _DESCRICAO_ARTIGO;
        partial void OnGetDESCRICAO_ARTIGO(ref string value);
        partial void OnDESCRICAO_ARTIGOChanging(ref string value);
        partial void OnDESCRICAO_ARTIGOChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO_CONSERTO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DESCRICAO_CONSERTO
        {
            get
            {
                string value = _DESCRICAO_CONSERTO;
                OnGetDESCRICAO_CONSERTO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO_CONSERTO != value)
                {
                  OnDESCRICAO_CONSERTOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO_CONSERTO");
                  _DESCRICAO_CONSERTO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO_CONSERTO");
                  OnDESCRICAO_CONSERTOChanged();
              }
            }
        }
        private string _DESCRICAO_CONSERTO;
        partial void OnGetDESCRICAO_CONSERTO(ref string value);
        partial void OnDESCRICAO_CONSERTOChanging(ref string value);
        partial void OnDESCRICAO_CONSERTOChanged();
    
        /// <summary>
        /// There are no comments for REF in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string REF
        {
            get
            {
                string value = _REF;
                OnGetREF(ref value);
                return value;
            }
            set
            {
                if (_REF != value)
                {
                  OnREFChanging(ref value);
                  ReportPropertyChanging("REF");
                  _REF = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("REF");
                  OnREFChanged();
              }
            }
        }
        private string _REF;
        partial void OnGetREF(ref string value);
        partial void OnREFChanging(ref string value);
        partial void OnREFChanged();
    
        /// <summary>
        /// There are no comments for COR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string COR
        {
            get
            {
                string value = _COR;
                OnGetCOR(ref value);
                return value;
            }
            set
            {
                if (_COR != value)
                {
                  OnCORChanging(ref value);
                  ReportPropertyChanging("COR");
                  _COR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("COR");
                  OnCORChanged();
              }
            }
        }
        private string _COR;
        partial void OnGetCOR(ref string value);
        partial void OnCORChanging(ref string value);
        partial void OnCORChanged();
    
        /// <summary>
        /// There are no comments for TAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string TAM
        {
            get
            {
                string value = _TAM;
                OnGetTAM(ref value);
                return value;
            }
            set
            {
                if (_TAM != value)
                {
                  OnTAMChanging(ref value);
                  ReportPropertyChanging("TAM");
                  _TAM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TAM");
                  OnTAMChanged();
              }
            }
        }
        private string _TAM;
        partial void OnGetTAM(ref string value);
        partial void OnTAMChanging(ref string value);
        partial void OnTAMChanged();
    
        /// <summary>
        /// There are no comments for QT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> QT
        {
            get
            {
                global::System.Nullable<decimal> value = _QT;
                OnGetQT(ref value);
                return value;
            }
            set
            {
                if (_QT != value)
                {
                  OnQTChanging(ref value);
                  ReportPropertyChanging("QT");
                  _QT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QT");
                  OnQTChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _QT;
        partial void OnGetQT(ref global::System.Nullable<decimal> value);
        partial void OnQTChanging(ref global::System.Nullable<decimal> value);
        partial void OnQTChanged();
    
        /// <summary>
        /// There are no comments for UNMED in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string UNMED
        {
            get
            {
                string value = _UNMED;
                OnGetUNMED(ref value);
                return value;
            }
            set
            {
                if (_UNMED != value)
                {
                  OnUNMEDChanging(ref value);
                  ReportPropertyChanging("UNMED");
                  _UNMED = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UNMED");
                  OnUNMEDChanged();
              }
            }
        }
        private string _UNMED;
        partial void OnGetUNMED(ref string value);
        partial void OnUNMEDChanging(ref string value);
        partial void OnUNMEDChanged();
    
        /// <summary>
        /// There are no comments for PRECO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> PRECO
        {
            get
            {
                global::System.Nullable<decimal> value = _PRECO;
                OnGetPRECO(ref value);
                return value;
            }
            set
            {
                if (_PRECO != value)
                {
                  OnPRECOChanging(ref value);
                  ReportPropertyChanging("PRECO");
                  _PRECO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRECO");
                  OnPRECOChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _PRECO;
        partial void OnGetPRECO(ref global::System.Nullable<decimal> value);
        partial void OnPRECOChanging(ref global::System.Nullable<decimal> value);
        partial void OnPRECOChanged();
    
        /// <summary>
        /// There are no comments for VALORL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> VALORL
        {
            get
            {
                global::System.Nullable<decimal> value = _VALORL;
                OnGetVALORL(ref value);
                return value;
            }
            set
            {
                if (_VALORL != value)
                {
                  OnVALORLChanging(ref value);
                  ReportPropertyChanging("VALORL");
                  _VALORL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VALORL");
                  OnVALORLChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _VALORL;
        partial void OnGetVALORL(ref global::System.Nullable<decimal> value);
        partial void OnVALORLChanging(ref global::System.Nullable<decimal> value);
        partial void OnVALORLChanged();
    
        /// <summary>
        /// There are no comments for prccust in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> prccust
        {
            get
            {
                global::System.Nullable<decimal> value = _prccust;
                OnGetprccust(ref value);
                return value;
            }
            set
            {
                if (_prccust != value)
                {
                  OnprccustChanging(ref value);
                  ReportPropertyChanging("prccust");
                  _prccust = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("prccust");
                  OnprccustChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _prccust;
        partial void OnGetprccust(ref global::System.Nullable<decimal> value);
        partial void OnprccustChanging(ref global::System.Nullable<decimal> value);
        partial void OnprccustChanged();
    
        /// <summary>
        /// There are no comments for DESCL1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> DESCL1
        {
            get
            {
                global::System.Nullable<decimal> value = _DESCL1;
                OnGetDESCL1(ref value);
                return value;
            }
            set
            {
                if (_DESCL1 != value)
                {
                  OnDESCL1Changing(ref value);
                  ReportPropertyChanging("DESCL1");
                  _DESCL1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DESCL1");
                  OnDESCL1Changed();
              }
            }
        }
        private global::System.Nullable<decimal> _DESCL1;
        partial void OnGetDESCL1(ref global::System.Nullable<decimal> value);
        partial void OnDESCL1Changing(ref global::System.Nullable<decimal> value);
        partial void OnDESCL1Changed();
    
        /// <summary>
        /// There are no comments for DESCL2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> DESCL2
        {
            get
            {
                global::System.Nullable<decimal> value = _DESCL2;
                OnGetDESCL2(ref value);
                return value;
            }
            set
            {
                if (_DESCL2 != value)
                {
                  OnDESCL2Changing(ref value);
                  ReportPropertyChanging("DESCL2");
                  _DESCL2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DESCL2");
                  OnDESCL2Changed();
              }
            }
        }
        private global::System.Nullable<decimal> _DESCL2;
        partial void OnGetDESCL2(ref global::System.Nullable<decimal> value);
        partial void OnDESCL2Changing(ref global::System.Nullable<decimal> value);
        partial void OnDESCL2Changed();
    
        /// <summary>
        /// There are no comments for DESCL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> DESCL
        {
            get
            {
                global::System.Nullable<decimal> value = _DESCL;
                OnGetDESCL(ref value);
                return value;
            }
            set
            {
                if (_DESCL != value)
                {
                  OnDESCLChanging(ref value);
                  ReportPropertyChanging("DESCL");
                  _DESCL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DESCL");
                  OnDESCLChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _DESCL;
        partial void OnGetDESCL(ref global::System.Nullable<decimal> value);
        partial void OnDESCLChanging(ref global::System.Nullable<decimal> value);
        partial void OnDESCLChanged();
    
        /// <summary>
        /// There are no comments for CIVA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public string CIVA
        {
            get
            {
                string value = _CIVA;
                OnGetCIVA(ref value);
                return value;
            }
            set
            {
                if (_CIVA != value)
                {
                  OnCIVAChanging(ref value);
                  ReportPropertyChanging("CIVA");
                  _CIVA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CIVA");
                  OnCIVAChanged();
              }
            }
        }
        private string _CIVA;
        partial void OnGetCIVA(ref string value);
        partial void OnCIVAChanging(ref string value);
        partial void OnCIVAChanged();
    
        /// <summary>
        /// There are no comments for TXIVA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> TXIVA
        {
            get
            {
                global::System.Nullable<decimal> value = _TXIVA;
                OnGetTXIVA(ref value);
                return value;
            }
            set
            {
                if (_TXIVA != value)
                {
                  OnTXIVAChanging(ref value);
                  ReportPropertyChanging("TXIVA");
                  _TXIVA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TXIVA");
                  OnTXIVAChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _TXIVA;
        partial void OnGetTXIVA(ref global::System.Nullable<decimal> value);
        partial void OnTXIVAChanging(ref global::System.Nullable<decimal> value);
        partial void OnTXIVAChanged();
    
        /// <summary>
        /// There are no comments for ID_ACTIV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ID_ACTIV
        {
            get
            {
                global::System.Nullable<int> value = _ID_ACTIV;
                OnGetID_ACTIV(ref value);
                return value;
            }
            set
            {
                if (_ID_ACTIV != value)
                {
                  OnID_ACTIVChanging(ref value);
                  ReportPropertyChanging("ID_ACTIV");
                  _ID_ACTIV = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID_ACTIV");
                  OnID_ACTIVChanged();
              }
            }
        }
        private global::System.Nullable<int> _ID_ACTIV = 0;
        partial void OnGetID_ACTIV(ref global::System.Nullable<int> value);
        partial void OnID_ACTIVChanging(ref global::System.Nullable<int> value);
        partial void OnID_ACTIVChanged();
    
        /// <summary>
        /// There are no comments for DATA_ACTIV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DATA_ACTIV
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DATA_ACTIV;
                OnGetDATA_ACTIV(ref value);
                return value;
            }
            set
            {
                if (_DATA_ACTIV != value)
                {
                  OnDATA_ACTIVChanging(ref value);
                  ReportPropertyChanging("DATA_ACTIV");
                  _DATA_ACTIV = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATA_ACTIV");
                  OnDATA_ACTIVChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DATA_ACTIV;
        partial void OnGetDATA_ACTIV(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATA_ACTIVChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATA_ACTIVChanged();
    
        /// <summary>
        /// There are no comments for SINAL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public string SINAL
        {
            get
            {
                string value = _SINAL;
                OnGetSINAL(ref value);
                return value;
            }
            set
            {
                if (_SINAL != value)
                {
                  OnSINALChanging(ref value);
                  ReportPropertyChanging("SINAL");
                  _SINAL = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SINAL");
                  OnSINALChanged();
              }
            }
        }
        private string _SINAL = @"N'E";
        partial void OnGetSINAL(ref string value);
        partial void OnSINALChanging(ref string value);
        partial void OnSINALChanged();
    
        /// <summary>
        /// There are no comments for POS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string POS
        {
            get
            {
                string value = _POS;
                OnGetPOS(ref value);
                return value;
            }
            set
            {
                if (_POS != value)
                {
                  OnPOSChanging(ref value);
                  ReportPropertyChanging("POS");
                  _POS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("POS");
                  OnPOSChanged();
              }
            }
        }
        private string _POS;
        partial void OnGetPOS(ref string value);
        partial void OnPOSChanging(ref string value);
        partial void OnPOSChanged();
    
        /// <summary>
        /// There are no comments for FECHO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> FECHO
        {
            get
            {
                global::System.Nullable<bool> value = _FECHO;
                OnGetFECHO(ref value);
                return value;
            }
            set
            {
                if (_FECHO != value)
                {
                  OnFECHOChanging(ref value);
                  ReportPropertyChanging("FECHO");
                  _FECHO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FECHO");
                  OnFECHOChanged();
              }
            }
        }
        private global::System.Nullable<bool> _FECHO;
        partial void OnGetFECHO(ref global::System.Nullable<bool> value);
        partial void OnFECHOChanging(ref global::System.Nullable<bool> value);
        partial void OnFECHOChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            LNCONSERTOS obj = new LNCONSERTOS();
            obj.ARM = ARM;
            obj.TPDOC = TPDOC;
            obj.NRFACT = NRFACT;
            obj.LNFACT = LNFACT;
            obj.TIPODOC = TIPODOC;
            obj.NRDOC = NRDOC;
            obj.ARMD = ARMD;
            obj.FORN = FORN;
            obj.CODCONSERTO = CODCONSERTO;
            obj.DESCRICAO_ARTIGO = DESCRICAO_ARTIGO;
            obj.DESCRICAO_CONSERTO = DESCRICAO_CONSERTO;
            obj.REF = REF;
            obj.COR = COR;
            obj.TAM = TAM;
            obj.QT = QT;
            obj.UNMED = UNMED;
            obj.PRECO = PRECO;
            obj.VALORL = VALORL;
            obj.prccust = prccust;
            obj.DESCL1 = DESCL1;
            obj.DESCL2 = DESCL2;
            obj.DESCL = DESCL;
            obj.CIVA = CIVA;
            obj.TXIVA = TXIVA;
            obj.ID_ACTIV = ID_ACTIV;
            obj.DATA_ACTIV = DATA_ACTIV;
            obj.SINAL = SINAL;
            obj.POS = POS;
            obj.FECHO = FECHO;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          LNCONSERTOS toCompare = obj as LNCONSERTOS;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.ARM, toCompare.ARM))
            return false;
          if (!Object.Equals(this.TPDOC, toCompare.TPDOC))
            return false;
          if (!Object.Equals(this.NRFACT, toCompare.NRFACT))
            return false;
          if (!Object.Equals(this.LNFACT, toCompare.LNFACT))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + ARM.GetHashCode();
          hashCode = (hashCode * 7) + TPDOC.GetHashCode();
          hashCode = (hashCode * 7) + NRFACT.GetHashCode();
          hashCode = (hashCode * 7) + LNFACT.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
