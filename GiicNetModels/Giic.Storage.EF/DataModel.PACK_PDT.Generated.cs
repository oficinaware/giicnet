//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.PACK_PDT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IDPACK
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="PACK_PDT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PACK_PDT : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new PACK_PDT object.
        /// </summary>
        /// <param name="iDPACK">Initial value of IDPACK.</param>
        /// <param name="eNTID">Initial value of ENTID.</param>
        /// <param name="dATAMOV">Initial value of DATAMOV.</param>
        /// <param name="tIPOMOV">Initial value of TIPOMOV.</param>
        public static PACK_PDT CreatePACK_PDT(string iDPACK, string eNTID, global::System.DateTime dATAMOV, string tIPOMOV)
        {
            PACK_PDT pACK_PDT = new PACK_PDT();
            pACK_PDT.IDPACK = iDPACK;
            pACK_PDT.ENTID = eNTID;
            pACK_PDT.DATAMOV = dATAMOV;
            pACK_PDT.TIPOMOV = tIPOMOV;
            return pACK_PDT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IDPACK in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string IDPACK
        {
            get
            {
                string value = _IDPACK;
                OnGetIDPACK(ref value);
                return value;
            }
            set
            {
                if (_IDPACK != value)
                {
                  OnIDPACKChanging(ref value);
                  ReportPropertyChanging("IDPACK");
                  _IDPACK = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IDPACK");
                  OnIDPACKChanged();
              }
            }
        }
        private string _IDPACK;
        partial void OnGetIDPACK(ref string value);
        partial void OnIDPACKChanging(ref string value);
        partial void OnIDPACKChanged();
    
        /// <summary>
        /// There are no comments for ENTID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ENTID
        {
            get
            {
                string value = _ENTID;
                OnGetENTID(ref value);
                return value;
            }
            set
            {
                if (_ENTID != value)
                {
                  OnENTIDChanging(ref value);
                  ReportPropertyChanging("ENTID");
                  _ENTID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ENTID");
                  OnENTIDChanged();
              }
            }
        }
        private string _ENTID;
        partial void OnGetENTID(ref string value);
        partial void OnENTIDChanging(ref string value);
        partial void OnENTIDChanged();
    
        /// <summary>
        /// There are no comments for DATAMOV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.DateTime DATAMOV
        {
            get
            {
                global::System.DateTime value = _DATAMOV;
                OnGetDATAMOV(ref value);
                return value;
            }
            set
            {
                if (_DATAMOV != value)
                {
                  OnDATAMOVChanging(ref value);
                  ReportPropertyChanging("DATAMOV");
                  _DATAMOV = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATAMOV");
                  OnDATAMOVChanged();
              }
            }
        }
        private global::System.DateTime _DATAMOV = DateTime.Now;
        partial void OnGetDATAMOV(ref global::System.DateTime value);
        partial void OnDATAMOVChanging(ref global::System.DateTime value);
        partial void OnDATAMOVChanged();
    
        /// <summary>
        /// There are no comments for TIPOMOV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string TIPOMOV
        {
            get
            {
                string value = _TIPOMOV;
                OnGetTIPOMOV(ref value);
                return value;
            }
            set
            {
                if (_TIPOMOV != value)
                {
                  OnTIPOMOVChanging(ref value);
                  ReportPropertyChanging("TIPOMOV");
                  _TIPOMOV = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TIPOMOV");
                  OnTIPOMOVChanged();
              }
            }
        }
        private string _TIPOMOV;
        partial void OnGetTIPOMOV(ref string value);
        partial void OnTIPOMOVChanging(ref string value);
        partial void OnTIPOMOVChanged();
    
        /// <summary>
        /// There are no comments for OBSV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string OBSV
        {
            get
            {
                string value = _OBSV;
                OnGetOBSV(ref value);
                return value;
            }
            set
            {
                if (_OBSV != value)
                {
                  OnOBSVChanging(ref value);
                  ReportPropertyChanging("OBSV");
                  _OBSV = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OBSV");
                  OnOBSVChanged();
              }
            }
        }
        private string _OBSV;
        partial void OnGetOBSV(ref string value);
        partial void OnOBSVChanging(ref string value);
        partial void OnOBSVChanged();
    
        /// <summary>
        /// There are no comments for CODEMB in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string CODEMB
        {
            get
            {
                string value = _CODEMB;
                OnGetCODEMB(ref value);
                return value;
            }
            set
            {
                if (_CODEMB != value)
                {
                  OnCODEMBChanging(ref value);
                  ReportPropertyChanging("CODEMB");
                  _CODEMB = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CODEMB");
                  OnCODEMBChanged();
              }
            }
        }
        private string _CODEMB;
        partial void OnGetCODEMB(ref string value);
        partial void OnCODEMBChanging(ref string value);
        partial void OnCODEMBChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            PACK_PDT obj = new PACK_PDT();
            obj.IDPACK = IDPACK;
            obj.ENTID = ENTID;
            obj.DATAMOV = DATAMOV;
            obj.TIPOMOV = TIPOMOV;
            obj.OBSV = OBSV;
            obj.CODEMB = CODEMB;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          PACK_PDT toCompare = obj as PACK_PDT;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.IDPACK, toCompare.IDPACK))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + IDPACK.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
