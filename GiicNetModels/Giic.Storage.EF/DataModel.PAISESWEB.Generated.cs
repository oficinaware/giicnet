//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.PAISESWEB in the schema.
    /// </summary>
    /// <KeyProperties>
    /// cod
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="PAISESWEB")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAISESWEB : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new PAISESWEB object.
        /// </summary>
        /// <param name="cod">Initial value of cod.</param>
        public static PAISESWEB CreatePAISESWEB(string cod)
        {
            PAISESWEB pAISESWEB = new PAISESWEB();
            pAISESWEB.cod = cod;
            return pAISESWEB;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for cod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string cod
        {
            get
            {
                string value = _cod;
                OnGetcod(ref value);
                return value;
            }
            set
            {
                if (_cod != value)
                {
                  OncodChanging(ref value);
                  ReportPropertyChanging("cod");
                  _cod = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("cod");
                  OncodChanged();
              }
            }
        }
        private string _cod;
        partial void OnGetcod(ref string value);
        partial void OncodChanging(ref string value);
        partial void OncodChanged();
    
        /// <summary>
        /// There are no comments for codtel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string codtel
        {
            get
            {
                string value = _codtel;
                OnGetcodtel(ref value);
                return value;
            }
            set
            {
                if (_codtel != value)
                {
                  OncodtelChanging(ref value);
                  ReportPropertyChanging("codtel");
                  _codtel = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("codtel");
                  OncodtelChanged();
              }
            }
        }
        private string _codtel;
        partial void OnGetcodtel(ref string value);
        partial void OncodtelChanging(ref string value);
        partial void OncodtelChanged();
    
        /// <summary>
        /// There are no comments for PT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PT
        {
            get
            {
                string value = _PT;
                OnGetPT(ref value);
                return value;
            }
            set
            {
                if (_PT != value)
                {
                  OnPTChanging(ref value);
                  ReportPropertyChanging("PT");
                  _PT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PT");
                  OnPTChanged();
              }
            }
        }
        private string _PT;
        partial void OnGetPT(ref string value);
        partial void OnPTChanging(ref string value);
        partial void OnPTChanged();
    
        /// <summary>
        /// There are no comments for EN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string EN
        {
            get
            {
                string value = _EN;
                OnGetEN(ref value);
                return value;
            }
            set
            {
                if (_EN != value)
                {
                  OnENChanging(ref value);
                  ReportPropertyChanging("EN");
                  _EN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EN");
                  OnENChanged();
              }
            }
        }
        private string _EN;
        partial void OnGetEN(ref string value);
        partial void OnENChanging(ref string value);
        partial void OnENChanged();
    
        /// <summary>
        /// There are no comments for ES in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ES
        {
            get
            {
                string value = _ES;
                OnGetES(ref value);
                return value;
            }
            set
            {
                if (_ES != value)
                {
                  OnESChanging(ref value);
                  ReportPropertyChanging("ES");
                  _ES = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ES");
                  OnESChanged();
              }
            }
        }
        private string _ES;
        partial void OnGetES(ref string value);
        partial void OnESChanging(ref string value);
        partial void OnESChanged();
    
        /// <summary>
        /// There are no comments for FR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FR
        {
            get
            {
                string value = _FR;
                OnGetFR(ref value);
                return value;
            }
            set
            {
                if (_FR != value)
                {
                  OnFRChanging(ref value);
                  ReportPropertyChanging("FR");
                  _FR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FR");
                  OnFRChanged();
              }
            }
        }
        private string _FR;
        partial void OnGetFR(ref string value);
        partial void OnFRChanging(ref string value);
        partial void OnFRChanged();
    
        /// <summary>
        /// There are no comments for DE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DE
        {
            get
            {
                string value = _DE;
                OnGetDE(ref value);
                return value;
            }
            set
            {
                if (_DE != value)
                {
                  OnDEChanging(ref value);
                  ReportPropertyChanging("DE");
                  _DE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DE");
                  OnDEChanged();
              }
            }
        }
        private string _DE;
        partial void OnGetDE(ref string value);
        partial void OnDEChanging(ref string value);
        partial void OnDEChanged();
    
        /// <summary>
        /// There are no comments for DK in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DK
        {
            get
            {
                string value = _DK;
                OnGetDK(ref value);
                return value;
            }
            set
            {
                if (_DK != value)
                {
                  OnDKChanging(ref value);
                  ReportPropertyChanging("DK");
                  _DK = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DK");
                  OnDKChanged();
              }
            }
        }
        private string _DK;
        partial void OnGetDK(ref string value);
        partial void OnDKChanging(ref string value);
        partial void OnDKChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            PAISESWEB obj = new PAISESWEB();
            obj.cod = cod;
            obj.codtel = codtel;
            obj.PT = PT;
            obj.EN = EN;
            obj.ES = ES;
            obj.FR = FR;
            obj.DE = DE;
            obj.DK = DK;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          PAISESWEB toCompare = obj as PAISESWEB;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.cod, toCompare.cod))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + cod.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
