//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.PARAM_SAFT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// TaxRegistrationNumber
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="PARAM_SAFT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PARAM_SAFT : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new PARAM_SAFT object.
        /// </summary>
        /// <param name="auditfileversion">Initial value of auditfileversion.</param>
        /// <param name="companyID">Initial value of companyID.</param>
        /// <param name="taxRegistrationNumber">Initial value of TaxRegistrationNumber.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <param name="companyAddress">Initial value of CompanyAddress.</param>
        /// <param name="addressDetail">Initial value of AddressDetail.</param>
        /// <param name="city">Initial value of City.</param>
        /// <param name="postalCode">Initial value of PostalCode.</param>
        /// <param name="country">Initial value of Country.</param>
        public static PARAM_SAFT CreatePARAM_SAFT(string auditfileversion, string companyID, string taxRegistrationNumber, string companyName, string companyAddress, string addressDetail, string city, string postalCode, string country)
        {
            PARAM_SAFT pARAM_SAFT = new PARAM_SAFT();
            pARAM_SAFT.auditfileversion = auditfileversion;
            pARAM_SAFT.companyID = companyID;
            pARAM_SAFT.TaxRegistrationNumber = taxRegistrationNumber;
            pARAM_SAFT.CompanyName = companyName;
            pARAM_SAFT.CompanyAddress = companyAddress;
            pARAM_SAFT.AddressDetail = addressDetail;
            pARAM_SAFT.City = city;
            pARAM_SAFT.PostalCode = postalCode;
            pARAM_SAFT.Country = country;
            return pARAM_SAFT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for auditfileversion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string auditfileversion
        {
            get
            {
                string value = _auditfileversion;
                OnGetauditfileversion(ref value);
                return value;
            }
            set
            {
                if (_auditfileversion != value)
                {
                  OnauditfileversionChanging(ref value);
                  ReportPropertyChanging("auditfileversion");
                  _auditfileversion = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("auditfileversion");
                  OnauditfileversionChanged();
              }
            }
        }
        private string _auditfileversion;
        partial void OnGetauditfileversion(ref string value);
        partial void OnauditfileversionChanging(ref string value);
        partial void OnauditfileversionChanged();
    
        /// <summary>
        /// conservatoria do registo comercial & "/" & NR do registo comercial
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string companyID
        {
            get
            {
                string value = _companyID;
                OnGetcompanyID(ref value);
                return value;
            }
            set
            {
                if (_companyID != value)
                {
                  OncompanyIDChanging(ref value);
                  ReportPropertyChanging("companyID");
                  _companyID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("companyID");
                  OncompanyIDChanged();
              }
            }
        }
        private string _companyID;
        partial void OnGetcompanyID(ref string value);
        partial void OncompanyIDChanging(ref string value);
        partial void OncompanyIDChanged();
    
        /// <summary>
        /// NIB
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string TaxRegistrationNumber
        {
            get
            {
                string value = _TaxRegistrationNumber;
                OnGetTaxRegistrationNumber(ref value);
                return value;
            }
            set
            {
                if (_TaxRegistrationNumber != value)
                {
                  OnTaxRegistrationNumberChanging(ref value);
                  ReportPropertyChanging("TaxRegistrationNumber");
                  _TaxRegistrationNumber = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TaxRegistrationNumber");
                  OnTaxRegistrationNumberChanged();
              }
            }
        }
        private string _TaxRegistrationNumber;
        partial void OnGetTaxRegistrationNumber(ref string value);
        partial void OnTaxRegistrationNumberChanging(ref string value);
        partial void OnTaxRegistrationNumberChanged();
    
        /// <summary>
        /// Facturação
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string TaxAccountingBasis
        {
            get
            {
                string value = _TaxAccountingBasis;
                OnGetTaxAccountingBasis(ref value);
                return value;
            }
            set
            {
                if (_TaxAccountingBasis != value)
                {
                  OnTaxAccountingBasisChanging(ref value);
                  ReportPropertyChanging("TaxAccountingBasis");
                  _TaxAccountingBasis = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TaxAccountingBasis");
                  OnTaxAccountingBasisChanged();
              }
            }
        }
        private string _TaxAccountingBasis;
        partial void OnGetTaxAccountingBasis(ref string value);
        partial void OnTaxAccountingBasisChanging(ref string value);
        partial void OnTaxAccountingBasisChanged();
    
        /// <summary>
        /// There are no comments for CompanyName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CompanyName
        {
            get
            {
                string value = _CompanyName;
                OnGetCompanyName(ref value);
                return value;
            }
            set
            {
                if (_CompanyName != value)
                {
                  OnCompanyNameChanging(ref value);
                  ReportPropertyChanging("CompanyName");
                  _CompanyName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyName");
                  OnCompanyNameChanged();
              }
            }
        }
        private string _CompanyName;
        partial void OnGetCompanyName(ref string value);
        partial void OnCompanyNameChanging(ref string value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// endereço postal da empresa
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CompanyAddress
        {
            get
            {
                string value = _CompanyAddress;
                OnGetCompanyAddress(ref value);
                return value;
            }
            set
            {
                if (_CompanyAddress != value)
                {
                  OnCompanyAddressChanging(ref value);
                  ReportPropertyChanging("CompanyAddress");
                  _CompanyAddress = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CompanyAddress");
                  OnCompanyAddressChanged();
              }
            }
        }
        private string _CompanyAddress;
        partial void OnGetCompanyAddress(ref string value);
        partial void OnCompanyAddressChanging(ref string value);
        partial void OnCompanyAddressChanged();
    
        /// <summary>
        /// rua + nr
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string AddressDetail
        {
            get
            {
                string value = _AddressDetail;
                OnGetAddressDetail(ref value);
                return value;
            }
            set
            {
                if (_AddressDetail != value)
                {
                  OnAddressDetailChanging(ref value);
                  ReportPropertyChanging("AddressDetail");
                  _AddressDetail = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AddressDetail");
                  OnAddressDetailChanged();
              }
            }
        }
        private string _AddressDetail;
        partial void OnGetAddressDetail(ref string value);
        partial void OnAddressDetailChanging(ref string value);
        partial void OnAddressDetailChanged();
    
        /// <summary>
        /// cidade
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string City
        {
            get
            {
                string value = _City;
                OnGetCity(ref value);
                return value;
            }
            set
            {
                if (_City != value)
                {
                  OnCityChanging(ref value);
                  ReportPropertyChanging("City");
                  _City = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("City");
                  OnCityChanged();
              }
            }
        }
        private string _City;
        partial void OnGetCity(ref string value);
        partial void OnCityChanging(ref string value);
        partial void OnCityChanged();
    
        /// <summary>
        /// Codigo Postal
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string PostalCode
        {
            get
            {
                string value = _PostalCode;
                OnGetPostalCode(ref value);
                return value;
            }
            set
            {
                if (_PostalCode != value)
                {
                  OnPostalCodeChanging(ref value);
                  ReportPropertyChanging("PostalCode");
                  _PostalCode = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PostalCode");
                  OnPostalCodeChanged();
              }
            }
        }
        private string _PostalCode;
        partial void OnGetPostalCode(ref string value);
        partial void OnPostalCodeChanging(ref string value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// Pais
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string Country
        {
            get
            {
                string value = _Country;
                OnGetCountry(ref value);
                return value;
            }
            set
            {
                if (_Country != value)
                {
                  OnCountryChanging(ref value);
                  ReportPropertyChanging("Country");
                  _Country = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Country");
                  OnCountryChanged();
              }
            }
        }
        private string _Country;
        partial void OnGetCountry(ref string value);
        partial void OnCountryChanging(ref string value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// There are no comments for FiscalYear in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> FiscalYear
        {
            get
            {
                global::System.Nullable<int> value = _FiscalYear;
                OnGetFiscalYear(ref value);
                return value;
            }
            set
            {
                if (_FiscalYear != value)
                {
                  OnFiscalYearChanging(ref value);
                  ReportPropertyChanging("FiscalYear");
                  _FiscalYear = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FiscalYear");
                  OnFiscalYearChanged();
              }
            }
        }
        private global::System.Nullable<int> _FiscalYear;
        partial void OnGetFiscalYear(ref global::System.Nullable<int> value);
        partial void OnFiscalYearChanging(ref global::System.Nullable<int> value);
        partial void OnFiscalYearChanged();
    
        /// <summary>
        /// There are no comments for StartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> StartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _StartDate;
                OnGetStartDate(ref value);
                return value;
            }
            set
            {
                if (_StartDate != value)
                {
                  OnStartDateChanging(ref value);
                  ReportPropertyChanging("StartDate");
                  _StartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StartDate");
                  OnStartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _StartDate;
        partial void OnGetStartDate(ref global::System.Nullable<System.DateTime> value);
        partial void OnStartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// There are no comments for EndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> EndDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _EndDate;
                OnGetEndDate(ref value);
                return value;
            }
            set
            {
                if (_EndDate != value)
                {
                  OnEndDateChanging(ref value);
                  ReportPropertyChanging("EndDate");
                  _EndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EndDate");
                  OnEndDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _EndDate;
        partial void OnGetEndDate(ref global::System.Nullable<System.DateTime> value);
        partial void OnEndDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// There are no comments for CurrencyCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string CurrencyCode
        {
            get
            {
                string value = _CurrencyCode;
                OnGetCurrencyCode(ref value);
                return value;
            }
            set
            {
                if (_CurrencyCode != value)
                {
                  OnCurrencyCodeChanging(ref value);
                  ReportPropertyChanging("CurrencyCode");
                  _CurrencyCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrencyCode");
                  OnCurrencyCodeChanged();
              }
            }
        }
        private string _CurrencyCode;
        partial void OnGetCurrencyCode(ref string value);
        partial void OnCurrencyCodeChanging(ref string value);
        partial void OnCurrencyCodeChanged();
    
        /// <summary>
        /// There are no comments for ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string ProductId
        {
            get
            {
                string value = _ProductId;
                OnGetProductId(ref value);
                return value;
            }
            set
            {
                if (_ProductId != value)
                {
                  OnProductIdChanging(ref value);
                  ReportPropertyChanging("ProductId");
                  _ProductId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProductId");
                  OnProductIdChanged();
              }
            }
        }
        private string _ProductId;
        partial void OnGetProductId(ref string value);
        partial void OnProductIdChanging(ref string value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// There are no comments for ProductVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string ProductVersion
        {
            get
            {
                string value = _ProductVersion;
                OnGetProductVersion(ref value);
                return value;
            }
            set
            {
                if (_ProductVersion != value)
                {
                  OnProductVersionChanging(ref value);
                  ReportPropertyChanging("ProductVersion");
                  _ProductVersion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProductVersion");
                  OnProductVersionChanged();
              }
            }
        }
        private string _ProductVersion;
        partial void OnGetProductVersion(ref string value);
        partial void OnProductVersionChanging(ref string value);
        partial void OnProductVersionChanged();
    
        /// <summary>
        /// There are no comments for dirsaft in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(150)]
        public string dirsaft
        {
            get
            {
                string value = _dirsaft;
                OnGetdirsaft(ref value);
                return value;
            }
            set
            {
                if (_dirsaft != value)
                {
                  OndirsaftChanging(ref value);
                  ReportPropertyChanging("dirsaft");
                  _dirsaft = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("dirsaft");
                  OndirsaftChanged();
              }
            }
        }
        private string _dirsaft;
        partial void OnGetdirsaft(ref string value);
        partial void OndirsaftChanging(ref string value);
        partial void OndirsaftChanged();
    
        /// <summary>
        /// There are no comments for ProductCertificationNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string ProductCertificationNumber
        {
            get
            {
                string value = _ProductCertificationNumber;
                OnGetProductCertificationNumber(ref value);
                return value;
            }
            set
            {
                if (_ProductCertificationNumber != value)
                {
                  OnProductCertificationNumberChanging(ref value);
                  ReportPropertyChanging("ProductCertificationNumber");
                  _ProductCertificationNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProductCertificationNumber");
                  OnProductCertificationNumberChanged();
              }
            }
        }
        private string _ProductCertificationNumber;
        partial void OnGetProductCertificationNumber(ref string value);
        partial void OnProductCertificationNumberChanging(ref string value);
        partial void OnProductCertificationNumberChanged();
    
        /// <summary>
        /// There are no comments for VerChave in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> VerChave
        {
            get
            {
                global::System.Nullable<int> value = _VerChave;
                OnGetVerChave(ref value);
                return value;
            }
            set
            {
                if (_VerChave != value)
                {
                  OnVerChaveChanging(ref value);
                  ReportPropertyChanging("VerChave");
                  _VerChave = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VerChave");
                  OnVerChaveChanged();
              }
            }
        }
        private global::System.Nullable<int> _VerChave;
        partial void OnGetVerChave(ref global::System.Nullable<int> value);
        partial void OnVerChaveChanging(ref global::System.Nullable<int> value);
        partial void OnVerChaveChanged();
    
        /// <summary>
        /// There are no comments for TaxRegion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string TaxRegion
        {
            get
            {
                string value = _TaxRegion;
                OnGetTaxRegion(ref value);
                return value;
            }
            set
            {
                if (_TaxRegion != value)
                {
                  OnTaxRegionChanging(ref value);
                  ReportPropertyChanging("TaxRegion");
                  _TaxRegion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TaxRegion");
                  OnTaxRegionChanged();
              }
            }
        }
        private string _TaxRegion;
        partial void OnGetTaxRegion(ref string value);
        partial void OnTaxRegionChanging(ref string value);
        partial void OnTaxRegionChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            PARAM_SAFT obj = new PARAM_SAFT();
            obj.auditfileversion = auditfileversion;
            obj.companyID = companyID;
            obj.TaxRegistrationNumber = TaxRegistrationNumber;
            obj.TaxAccountingBasis = TaxAccountingBasis;
            obj.CompanyName = CompanyName;
            obj.CompanyAddress = CompanyAddress;
            obj.AddressDetail = AddressDetail;
            obj.City = City;
            obj.PostalCode = PostalCode;
            obj.Country = Country;
            obj.FiscalYear = FiscalYear;
            obj.StartDate = StartDate;
            obj.EndDate = EndDate;
            obj.CurrencyCode = CurrencyCode;
            obj.ProductId = ProductId;
            obj.ProductVersion = ProductVersion;
            obj.dirsaft = dirsaft;
            obj.ProductCertificationNumber = ProductCertificationNumber;
            obj.VerChave = VerChave;
            obj.TaxRegion = TaxRegion;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          PARAM_SAFT toCompare = obj as PARAM_SAFT;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.TaxRegistrationNumber, toCompare.TaxRegistrationNumber))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + TaxRegistrationNumber.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
