//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.PRGCONFIGURATION in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PRGNUMBER
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="PRGCONFIGURATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PRGCONFIGURATION : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new PRGCONFIGURATION object.
        /// </summary>
        /// <param name="pRGNUMBER">Initial value of PRGNUMBER.</param>
        /// <param name="pRGDESCRIPTION">Initial value of PRGDESCRIPTION.</param>
        /// <param name="pRGCREATIONDT">Initial value of PRGCREATIONDT.</param>
        /// <param name="pRGHORIZONSTARTDT">Initial value of PRGHORIZONSTARTDT.</param>
        /// <param name="pRGHORIZONDAYS">Initial value of PRGHORIZONDAYS.</param>
        /// <param name="tURNOVERDAYS">Initial value of TURNOVERDAYS.</param>
        /// <param name="oPTCRITERIACODE">Initial value of OPTCRITERIACODE.</param>
        /// <param name="oVERLAPPREPOPTION">Initial value of OVERLAPPREPOPTION.</param>
        /// <param name="aGGRCAPACITYUNIT">Initial value of AGGRCAPACITYUNIT.</param>
        public static PRGCONFIGURATION CreatePRGCONFIGURATION(string pRGNUMBER, string pRGDESCRIPTION, global::System.DateTime pRGCREATIONDT, global::System.DateTime pRGHORIZONSTARTDT, int pRGHORIZONDAYS, int tURNOVERDAYS, int oPTCRITERIACODE, bool oVERLAPPREPOPTION, string aGGRCAPACITYUNIT)
        {
            PRGCONFIGURATION pRGCONFIGURATION = new PRGCONFIGURATION();
            pRGCONFIGURATION.PRGNUMBER = pRGNUMBER;
            pRGCONFIGURATION.PRGDESCRIPTION = pRGDESCRIPTION;
            pRGCONFIGURATION.PRGCREATIONDT = pRGCREATIONDT;
            pRGCONFIGURATION.PRGHORIZONSTARTDT = pRGHORIZONSTARTDT;
            pRGCONFIGURATION.PRGHORIZONDAYS = pRGHORIZONDAYS;
            pRGCONFIGURATION.TURNOVERDAYS = tURNOVERDAYS;
            pRGCONFIGURATION.OPTCRITERIACODE = oPTCRITERIACODE;
            pRGCONFIGURATION.OVERLAPPREPOPTION = oVERLAPPREPOPTION;
            pRGCONFIGURATION.AGGRCAPACITYUNIT = aGGRCAPACITYUNIT;
            return pRGCONFIGURATION;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PRGNUMBER in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string PRGNUMBER
        {
            get
            {
                string value = _PRGNUMBER;
                OnGetPRGNUMBER(ref value);
                return value;
            }
            set
            {
                if (_PRGNUMBER != value)
                {
                  OnPRGNUMBERChanging(ref value);
                  ReportPropertyChanging("PRGNUMBER");
                  _PRGNUMBER = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PRGNUMBER");
                  OnPRGNUMBERChanged();
              }
            }
        }
        private string _PRGNUMBER;
        partial void OnGetPRGNUMBER(ref string value);
        partial void OnPRGNUMBERChanging(ref string value);
        partial void OnPRGNUMBERChanged();
    
        /// <summary>
        /// There are no comments for PRGDESCRIPTION in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string PRGDESCRIPTION
        {
            get
            {
                string value = _PRGDESCRIPTION;
                OnGetPRGDESCRIPTION(ref value);
                return value;
            }
            set
            {
                if (_PRGDESCRIPTION != value)
                {
                  OnPRGDESCRIPTIONChanging(ref value);
                  ReportPropertyChanging("PRGDESCRIPTION");
                  _PRGDESCRIPTION = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PRGDESCRIPTION");
                  OnPRGDESCRIPTIONChanged();
              }
            }
        }
        private string _PRGDESCRIPTION;
        partial void OnGetPRGDESCRIPTION(ref string value);
        partial void OnPRGDESCRIPTIONChanging(ref string value);
        partial void OnPRGDESCRIPTIONChanged();
    
        /// <summary>
        /// There are no comments for PRGCREATIONDT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.DateTime PRGCREATIONDT
        {
            get
            {
                global::System.DateTime value = _PRGCREATIONDT;
                OnGetPRGCREATIONDT(ref value);
                return value;
            }
            set
            {
                if (_PRGCREATIONDT != value)
                {
                  OnPRGCREATIONDTChanging(ref value);
                  ReportPropertyChanging("PRGCREATIONDT");
                  _PRGCREATIONDT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRGCREATIONDT");
                  OnPRGCREATIONDTChanged();
              }
            }
        }
        private global::System.DateTime _PRGCREATIONDT;
        partial void OnGetPRGCREATIONDT(ref global::System.DateTime value);
        partial void OnPRGCREATIONDTChanging(ref global::System.DateTime value);
        partial void OnPRGCREATIONDTChanged();
    
        /// <summary>
        /// There are no comments for PRGHORIZONSTARTDT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.DateTime PRGHORIZONSTARTDT
        {
            get
            {
                global::System.DateTime value = _PRGHORIZONSTARTDT;
                OnGetPRGHORIZONSTARTDT(ref value);
                return value;
            }
            set
            {
                if (_PRGHORIZONSTARTDT != value)
                {
                  OnPRGHORIZONSTARTDTChanging(ref value);
                  ReportPropertyChanging("PRGHORIZONSTARTDT");
                  _PRGHORIZONSTARTDT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRGHORIZONSTARTDT");
                  OnPRGHORIZONSTARTDTChanged();
              }
            }
        }
        private global::System.DateTime _PRGHORIZONSTARTDT;
        partial void OnGetPRGHORIZONSTARTDT(ref global::System.DateTime value);
        partial void OnPRGHORIZONSTARTDTChanging(ref global::System.DateTime value);
        partial void OnPRGHORIZONSTARTDTChanged();
    
        /// <summary>
        /// There are no comments for PRGHORIZONDAYS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int PRGHORIZONDAYS
        {
            get
            {
                int value = _PRGHORIZONDAYS;
                OnGetPRGHORIZONDAYS(ref value);
                return value;
            }
            set
            {
                if (_PRGHORIZONDAYS != value)
                {
                  OnPRGHORIZONDAYSChanging(ref value);
                  ReportPropertyChanging("PRGHORIZONDAYS");
                  _PRGHORIZONDAYS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRGHORIZONDAYS");
                  OnPRGHORIZONDAYSChanged();
              }
            }
        }
        private int _PRGHORIZONDAYS;
        partial void OnGetPRGHORIZONDAYS(ref int value);
        partial void OnPRGHORIZONDAYSChanging(ref int value);
        partial void OnPRGHORIZONDAYSChanged();
    
        /// <summary>
        /// There are no comments for TURNOVERDAYS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int TURNOVERDAYS
        {
            get
            {
                int value = _TURNOVERDAYS;
                OnGetTURNOVERDAYS(ref value);
                return value;
            }
            set
            {
                if (_TURNOVERDAYS != value)
                {
                  OnTURNOVERDAYSChanging(ref value);
                  ReportPropertyChanging("TURNOVERDAYS");
                  _TURNOVERDAYS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TURNOVERDAYS");
                  OnTURNOVERDAYSChanged();
              }
            }
        }
        private int _TURNOVERDAYS;
        partial void OnGetTURNOVERDAYS(ref int value);
        partial void OnTURNOVERDAYSChanging(ref int value);
        partial void OnTURNOVERDAYSChanged();
    
        /// <summary>
        /// There are no comments for OPTCRITERIACODE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int OPTCRITERIACODE
        {
            get
            {
                int value = _OPTCRITERIACODE;
                OnGetOPTCRITERIACODE(ref value);
                return value;
            }
            set
            {
                if (_OPTCRITERIACODE != value)
                {
                  OnOPTCRITERIACODEChanging(ref value);
                  ReportPropertyChanging("OPTCRITERIACODE");
                  _OPTCRITERIACODE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OPTCRITERIACODE");
                  OnOPTCRITERIACODEChanged();
              }
            }
        }
        private int _OPTCRITERIACODE;
        partial void OnGetOPTCRITERIACODE(ref int value);
        partial void OnOPTCRITERIACODEChanging(ref int value);
        partial void OnOPTCRITERIACODEChanged();
    
        /// <summary>
        /// There are no comments for OVERLAPPREPOPTION in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public bool OVERLAPPREPOPTION
        {
            get
            {
                bool value = _OVERLAPPREPOPTION;
                OnGetOVERLAPPREPOPTION(ref value);
                return value;
            }
            set
            {
                if (_OVERLAPPREPOPTION != value)
                {
                  OnOVERLAPPREPOPTIONChanging(ref value);
                  ReportPropertyChanging("OVERLAPPREPOPTION");
                  _OVERLAPPREPOPTION = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OVERLAPPREPOPTION");
                  OnOVERLAPPREPOPTIONChanged();
              }
            }
        }
        private bool _OVERLAPPREPOPTION;
        partial void OnGetOVERLAPPREPOPTION(ref bool value);
        partial void OnOVERLAPPREPOPTIONChanging(ref bool value);
        partial void OnOVERLAPPREPOPTIONChanged();
    
        /// <summary>
        /// There are no comments for PASSMATERIALS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<short> PASSMATERIALS
        {
            get
            {
                global::System.Nullable<short> value = _PASSMATERIALS;
                OnGetPASSMATERIALS(ref value);
                return value;
            }
            set
            {
                if (_PASSMATERIALS != value)
                {
                  OnPASSMATERIALSChanging(ref value);
                  ReportPropertyChanging("PASSMATERIALS");
                  _PASSMATERIALS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PASSMATERIALS");
                  OnPASSMATERIALSChanged();
              }
            }
        }
        private global::System.Nullable<short> _PASSMATERIALS;
        partial void OnGetPASSMATERIALS(ref global::System.Nullable<short> value);
        partial void OnPASSMATERIALSChanging(ref global::System.Nullable<short> value);
        partial void OnPASSMATERIALSChanged();
    
        /// <summary>
        /// There are no comments for AGGRCAPACITYUNIT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string AGGRCAPACITYUNIT
        {
            get
            {
                string value = _AGGRCAPACITYUNIT;
                OnGetAGGRCAPACITYUNIT(ref value);
                return value;
            }
            set
            {
                if (_AGGRCAPACITYUNIT != value)
                {
                  OnAGGRCAPACITYUNITChanging(ref value);
                  ReportPropertyChanging("AGGRCAPACITYUNIT");
                  _AGGRCAPACITYUNIT = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AGGRCAPACITYUNIT");
                  OnAGGRCAPACITYUNITChanged();
              }
            }
        }
        private string _AGGRCAPACITYUNIT;
        partial void OnGetAGGRCAPACITYUNIT(ref string value);
        partial void OnAGGRCAPACITYUNITChanging(ref string value);
        partial void OnAGGRCAPACITYUNITChanged();
    
        /// <summary>
        /// There are no comments for OPTTIMEOUT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> OPTTIMEOUT
        {
            get
            {
                global::System.Nullable<int> value = _OPTTIMEOUT;
                OnGetOPTTIMEOUT(ref value);
                return value;
            }
            set
            {
                if (_OPTTIMEOUT != value)
                {
                  OnOPTTIMEOUTChanging(ref value);
                  ReportPropertyChanging("OPTTIMEOUT");
                  _OPTTIMEOUT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("OPTTIMEOUT");
                  OnOPTTIMEOUTChanged();
              }
            }
        }
        private global::System.Nullable<int> _OPTTIMEOUT;
        partial void OnGetOPTTIMEOUT(ref global::System.Nullable<int> value);
        partial void OnOPTTIMEOUTChanging(ref global::System.Nullable<int> value);
        partial void OnOPTTIMEOUTChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            PRGCONFIGURATION obj = new PRGCONFIGURATION();
            obj.PRGNUMBER = PRGNUMBER;
            obj.PRGDESCRIPTION = PRGDESCRIPTION;
            obj.PRGCREATIONDT = PRGCREATIONDT;
            obj.PRGHORIZONSTARTDT = PRGHORIZONSTARTDT;
            obj.PRGHORIZONDAYS = PRGHORIZONDAYS;
            obj.TURNOVERDAYS = TURNOVERDAYS;
            obj.OPTCRITERIACODE = OPTCRITERIACODE;
            obj.OVERLAPPREPOPTION = OVERLAPPREPOPTION;
            obj.PASSMATERIALS = PASSMATERIALS;
            obj.AGGRCAPACITYUNIT = AGGRCAPACITYUNIT;
            obj.OPTTIMEOUT = OPTTIMEOUT;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          PRGCONFIGURATION toCompare = obj as PRGCONFIGURATION;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.PRGNUMBER, toCompare.PRGNUMBER))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + PRGNUMBER.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
