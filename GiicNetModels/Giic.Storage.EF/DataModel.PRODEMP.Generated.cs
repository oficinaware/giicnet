//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.PRODEMP in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NRREG
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="PRODEMP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PRODEMP : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new PRODEMP object.
        /// </summary>
        /// <param name="nRREG">Initial value of NRREG.</param>
        /// <param name="oRDFAB">Initial value of ORDFAB.</param>
        /// <param name="lOTE">Initial value of LOTE.</param>
        /// <param name="sEQ">Initial value of SEQ.</param>
        /// <param name="sEQGAMA">Initial value of SEQGAMA.</param>
        public static PRODEMP CreatePRODEMP(global::System.Guid nRREG, string oRDFAB, int lOTE, int sEQ, int sEQGAMA)
        {
            PRODEMP pRODEMP = new PRODEMP();
            pRODEMP.NRREG = nRREG;
            pRODEMP.ORDFAB = oRDFAB;
            pRODEMP.LOTE = lOTE;
            pRODEMP.SEQ = sEQ;
            pRODEMP.SEQGAMA = sEQGAMA;
            return pRODEMP;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NRREG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.Guid NRREG
        {
            get
            {
                global::System.Guid value = _NRREG;
                OnGetNRREG(ref value);
                return value;
            }
            set
            {
                if (_NRREG != value)
                {
                  OnNRREGChanging(ref value);
                  ReportPropertyChanging("NRREG");
                  _NRREG = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRREG");
                  OnNRREGChanged();
              }
            }
        }
        private global::System.Guid _NRREG;
        partial void OnGetNRREG(ref global::System.Guid value);
        partial void OnNRREGChanging(ref global::System.Guid value);
        partial void OnNRREGChanged();
    
        /// <summary>
        /// There are no comments for ORDFAB in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ORDFAB
        {
            get
            {
                string value = _ORDFAB;
                OnGetORDFAB(ref value);
                return value;
            }
            set
            {
                if (_ORDFAB != value)
                {
                  OnORDFABChanging(ref value);
                  ReportPropertyChanging("ORDFAB");
                  _ORDFAB = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ORDFAB");
                  OnORDFABChanged();
              }
            }
        }
        private string _ORDFAB;
        partial void OnGetORDFAB(ref string value);
        partial void OnORDFABChanging(ref string value);
        partial void OnORDFABChanged();
    
        /// <summary>
        /// There are no comments for LOTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int LOTE
        {
            get
            {
                int value = _LOTE;
                OnGetLOTE(ref value);
                return value;
            }
            set
            {
                if (_LOTE != value)
                {
                  OnLOTEChanging(ref value);
                  ReportPropertyChanging("LOTE");
                  _LOTE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LOTE");
                  OnLOTEChanged();
              }
            }
        }
        private int _LOTE = 0;
        partial void OnGetLOTE(ref int value);
        partial void OnLOTEChanging(ref int value);
        partial void OnLOTEChanged();
    
        /// <summary>
        /// There are no comments for SEQ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SEQ
        {
            get
            {
                int value = _SEQ;
                OnGetSEQ(ref value);
                return value;
            }
            set
            {
                if (_SEQ != value)
                {
                  OnSEQChanging(ref value);
                  ReportPropertyChanging("SEQ");
                  _SEQ = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEQ");
                  OnSEQChanged();
              }
            }
        }
        private int _SEQ;
        partial void OnGetSEQ(ref int value);
        partial void OnSEQChanging(ref int value);
        partial void OnSEQChanged();
    
        /// <summary>
        /// There are no comments for SEQGAMA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SEQGAMA
        {
            get
            {
                int value = _SEQGAMA;
                OnGetSEQGAMA(ref value);
                return value;
            }
            set
            {
                if (_SEQGAMA != value)
                {
                  OnSEQGAMAChanging(ref value);
                  ReportPropertyChanging("SEQGAMA");
                  _SEQGAMA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEQGAMA");
                  OnSEQGAMAChanged();
              }
            }
        }
        private int _SEQGAMA;
        partial void OnGetSEQGAMA(ref int value);
        partial void OnSEQGAMAChanging(ref int value);
        partial void OnSEQGAMAChanged();
    
        /// <summary>
        /// There are no comments for CODROTA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string CODROTA
        {
            get
            {
                string value = _CODROTA;
                OnGetCODROTA(ref value);
                return value;
            }
            set
            {
                if (_CODROTA != value)
                {
                  OnCODROTAChanging(ref value);
                  ReportPropertyChanging("CODROTA");
                  _CODROTA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CODROTA");
                  OnCODROTAChanged();
              }
            }
        }
        private string _CODROTA;
        partial void OnGetCODROTA(ref string value);
        partial void OnCODROTAChanging(ref string value);
        partial void OnCODROTAChanged();
    
        /// <summary>
        /// There are no comments for IDOPC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string IDOPC
        {
            get
            {
                string value = _IDOPC;
                OnGetIDOPC(ref value);
                return value;
            }
            set
            {
                if (_IDOPC != value)
                {
                  OnIDOPCChanging(ref value);
                  ReportPropertyChanging("IDOPC");
                  _IDOPC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IDOPC");
                  OnIDOPCChanged();
              }
            }
        }
        private string _IDOPC;
        partial void OnGetIDOPC(ref string value);
        partial void OnIDOPCChanging(ref string value);
        partial void OnIDOPCChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for MODELO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string MODELO
        {
            get
            {
                string value = _MODELO;
                OnGetMODELO(ref value);
                return value;
            }
            set
            {
                if (_MODELO != value)
                {
                  OnMODELOChanging(ref value);
                  ReportPropertyChanging("MODELO");
                  _MODELO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MODELO");
                  OnMODELOChanged();
              }
            }
        }
        private string _MODELO;
        partial void OnGetMODELO(ref string value);
        partial void OnMODELOChanging(ref string value);
        partial void OnMODELOChanged();
    
        /// <summary>
        /// There are no comments for VARIANTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string VARIANTE
        {
            get
            {
                string value = _VARIANTE;
                OnGetVARIANTE(ref value);
                return value;
            }
            set
            {
                if (_VARIANTE != value)
                {
                  OnVARIANTEChanging(ref value);
                  ReportPropertyChanging("VARIANTE");
                  _VARIANTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VARIANTE");
                  OnVARIANTEChanged();
              }
            }
        }
        private string _VARIANTE;
        partial void OnGetVARIANTE(ref string value);
        partial void OnVARIANTEChanging(ref string value);
        partial void OnVARIANTEChanged();
    
        /// <summary>
        /// There are no comments for ITAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ITAM
        {
            get
            {
                global::System.Nullable<int> value = _ITAM;
                OnGetITAM(ref value);
                return value;
            }
            set
            {
                if (_ITAM != value)
                {
                  OnITAMChanging(ref value);
                  ReportPropertyChanging("ITAM");
                  _ITAM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ITAM");
                  OnITAMChanged();
              }
            }
        }
        private global::System.Nullable<int> _ITAM;
        partial void OnGetITAM(ref global::System.Nullable<int> value);
        partial void OnITAMChanging(ref global::System.Nullable<int> value);
        partial void OnITAMChanged();
    
        /// <summary>
        /// There are no comments for TAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string TAM
        {
            get
            {
                string value = _TAM;
                OnGetTAM(ref value);
                return value;
            }
            set
            {
                if (_TAM != value)
                {
                  OnTAMChanging(ref value);
                  ReportPropertyChanging("TAM");
                  _TAM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TAM");
                  OnTAMChanged();
              }
            }
        }
        private string _TAM;
        partial void OnGetTAM(ref string value);
        partial void OnTAMChanging(ref string value);
        partial void OnTAMChanged();
    
        /// <summary>
        /// There are no comments for QT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> QT
        {
            get
            {
                global::System.Nullable<int> value = _QT;
                OnGetQT(ref value);
                return value;
            }
            set
            {
                if (_QT != value)
                {
                  OnQTChanging(ref value);
                  ReportPropertyChanging("QT");
                  _QT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QT");
                  OnQTChanged();
              }
            }
        }
        private global::System.Nullable<int> _QT;
        partial void OnGetQT(ref global::System.Nullable<int> value);
        partial void OnQTChanging(ref global::System.Nullable<int> value);
        partial void OnQTChanged();
    
        /// <summary>
        /// There are no comments for TEMPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> TEMPO
        {
            get
            {
                global::System.Nullable<decimal> value = _TEMPO;
                OnGetTEMPO(ref value);
                return value;
            }
            set
            {
                if (_TEMPO != value)
                {
                  OnTEMPOChanging(ref value);
                  ReportPropertyChanging("TEMPO");
                  _TEMPO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TEMPO");
                  OnTEMPOChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _TEMPO;
        partial void OnGetTEMPO(ref global::System.Nullable<decimal> value);
        partial void OnTEMPOChanging(ref global::System.Nullable<decimal> value);
        partial void OnTEMPOChanged();
    
        /// <summary>
        /// There are no comments for SECCAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string SECCAO
        {
            get
            {
                string value = _SECCAO;
                OnGetSECCAO(ref value);
                return value;
            }
            set
            {
                if (_SECCAO != value)
                {
                  OnSECCAOChanging(ref value);
                  ReportPropertyChanging("SECCAO");
                  _SECCAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SECCAO");
                  OnSECCAOChanged();
              }
            }
        }
        private string _SECCAO;
        partial void OnGetSECCAO(ref string value);
        partial void OnSECCAOChanging(ref string value);
        partial void OnSECCAOChanged();
    
        /// <summary>
        /// There are no comments for OPERACAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string OPERACAO
        {
            get
            {
                string value = _OPERACAO;
                OnGetOPERACAO(ref value);
                return value;
            }
            set
            {
                if (_OPERACAO != value)
                {
                  OnOPERACAOChanging(ref value);
                  ReportPropertyChanging("OPERACAO");
                  _OPERACAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OPERACAO");
                  OnOPERACAOChanged();
              }
            }
        }
        private string _OPERACAO;
        partial void OnGetOPERACAO(ref string value);
        partial void OnOPERACAOChanging(ref string value);
        partial void OnOPERACAOChanged();
    
        /// <summary>
        /// There are no comments for IDOP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string IDOP
        {
            get
            {
                string value = _IDOP;
                OnGetIDOP(ref value);
                return value;
            }
            set
            {
                if (_IDOP != value)
                {
                  OnIDOPChanging(ref value);
                  ReportPropertyChanging("IDOP");
                  _IDOP = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IDOP");
                  OnIDOPChanged();
              }
            }
        }
        private string _IDOP;
        partial void OnGetIDOP(ref string value);
        partial void OnIDOPChanging(ref string value);
        partial void OnIDOPChanged();
    
        /// <summary>
        /// There are no comments for DATAMOV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DATAMOV
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DATAMOV;
                OnGetDATAMOV(ref value);
                return value;
            }
            set
            {
                if (_DATAMOV != value)
                {
                  OnDATAMOVChanging(ref value);
                  ReportPropertyChanging("DATAMOV");
                  _DATAMOV = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATAMOV");
                  OnDATAMOVChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DATAMOV;
        partial void OnGetDATAMOV(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAMOVChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAMOVChanged();
    
        /// <summary>
        /// There are no comments for DATAREG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DATAREG
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DATAREG;
                OnGetDATAREG(ref value);
                return value;
            }
            set
            {
                if (_DATAREG != value)
                {
                  OnDATAREGChanging(ref value);
                  ReportPropertyChanging("DATAREG");
                  _DATAREG = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATAREG");
                  OnDATAREGChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DATAREG = DateTime.Now;
        partial void OnGetDATAREG(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAREGChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAREGChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            PRODEMP obj = new PRODEMP();
            obj.NRREG = NRREG;
            obj.ORDFAB = ORDFAB;
            obj.LOTE = LOTE;
            obj.SEQ = SEQ;
            obj.SEQGAMA = SEQGAMA;
            obj.CODROTA = CODROTA;
            obj.IDOPC = IDOPC;
            obj.DESCRICAO = DESCRICAO;
            obj.MODELO = MODELO;
            obj.VARIANTE = VARIANTE;
            obj.ITAM = ITAM;
            obj.TAM = TAM;
            obj.QT = QT;
            obj.TEMPO = TEMPO;
            obj.SECCAO = SECCAO;
            obj.OPERACAO = OPERACAO;
            obj.IDOP = IDOP;
            obj.DATAMOV = DATAMOV;
            obj.DATAREG = DATAREG;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          PRODEMP toCompare = obj as PRODEMP;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.NRREG, toCompare.NRREG))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + NRREG.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
