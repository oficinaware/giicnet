//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.SB_ERROS in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="SB_ERROS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SB_ERROS : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new SB_ERROS object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        public static SB_ERROS CreateSB_ERROS(long iD)
        {
            SB_ERROS sB_ERROS = new SB_ERROS();
            sB_ERROS.ID = iD;
            return sB_ERROS;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public long ID
        {
            get
            {
                long value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private long _ID;
        partial void OnGetID(ref long value);
        partial void OnIDChanging(ref long value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for ERRMSG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(80)]
        public string ERRMSG
        {
            get
            {
                string value = _ERRMSG;
                OnGetERRMSG(ref value);
                return value;
            }
            set
            {
                if (_ERRMSG != value)
                {
                  OnERRMSGChanging(ref value);
                  ReportPropertyChanging("ERRMSG");
                  _ERRMSG = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ERRMSG");
                  OnERRMSGChanged();
              }
            }
        }
        private string _ERRMSG;
        partial void OnGetERRMSG(ref string value);
        partial void OnERRMSGChanging(ref string value);
        partial void OnERRMSGChanged();
    
        /// <summary>
        /// There are no comments for data in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> data
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _data;
                OnGetdata(ref value);
                return value;
            }
            set
            {
                if (_data != value)
                {
                  OndataChanging(ref value);
                  ReportPropertyChanging("data");
                  _data = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("data");
                  OndataChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _data = DateTime.Now;
        partial void OnGetdata(ref global::System.Nullable<System.DateTime> value);
        partial void OndataChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OndataChanged();
    
        /// <summary>
        /// There are no comments for NRREG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.Guid> NRREG
        {
            get
            {
                global::System.Nullable<System.Guid> value = _NRREG;
                OnGetNRREG(ref value);
                return value;
            }
            set
            {
                if (_NRREG != value)
                {
                  OnNRREGChanging(ref value);
                  ReportPropertyChanging("NRREG");
                  _NRREG = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRREG");
                  OnNRREGChanged();
              }
            }
        }
        private global::System.Nullable<System.Guid> _NRREG;
        partial void OnGetNRREG(ref global::System.Nullable<System.Guid> value);
        partial void OnNRREGChanging(ref global::System.Nullable<System.Guid> value);
        partial void OnNRREGChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            SB_ERROS obj = new SB_ERROS();
            obj.ID = ID;
            obj.ERRMSG = ERRMSG;
            obj.data = data;
            obj.NRREG = NRREG;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          SB_ERROS toCompare = obj as SB_ERROS;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.ID, toCompare.ID))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + ID.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
