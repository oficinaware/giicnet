//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.STKLOT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ARTIGO
    /// CARTAZ
    /// CODCOR
    /// REFLOTE
    /// IDLOTE
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="STKLOT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STKLOT : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new STKLOT object.
        /// </summary>
        /// <param name="aRTIGO">Initial value of ARTIGO.</param>
        /// <param name="cARTAZ">Initial value of CARTAZ.</param>
        /// <param name="cODCOR">Initial value of CODCOR.</param>
        /// <param name="rEFLOTE">Initial value of REFLOTE.</param>
        /// <param name="iDLOTE">Initial value of IDLOTE.</param>
        public static STKLOT CreateSTKLOT(string aRTIGO, string cARTAZ, string cODCOR, string rEFLOTE, int iDLOTE)
        {
            STKLOT sTKLOT = new STKLOT();
            sTKLOT.ARTIGO = aRTIGO;
            sTKLOT.CARTAZ = cARTAZ;
            sTKLOT.CODCOR = cODCOR;
            sTKLOT.REFLOTE = rEFLOTE;
            sTKLOT.IDLOTE = iDLOTE;
            return sTKLOT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ARTIGO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ARTIGO
        {
            get
            {
                string value = _ARTIGO;
                OnGetARTIGO(ref value);
                return value;
            }
            set
            {
                if (_ARTIGO != value)
                {
                  OnARTIGOChanging(ref value);
                  ReportPropertyChanging("ARTIGO");
                  _ARTIGO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ARTIGO");
                  OnARTIGOChanged();
              }
            }
        }
        private string _ARTIGO;
        partial void OnGetARTIGO(ref string value);
        partial void OnARTIGOChanging(ref string value);
        partial void OnARTIGOChanged();
    
        /// <summary>
        /// There are no comments for CARTAZ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CARTAZ
        {
            get
            {
                string value = _CARTAZ;
                OnGetCARTAZ(ref value);
                return value;
            }
            set
            {
                if (_CARTAZ != value)
                {
                  OnCARTAZChanging(ref value);
                  ReportPropertyChanging("CARTAZ");
                  _CARTAZ = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CARTAZ");
                  OnCARTAZChanged();
              }
            }
        }
        private string _CARTAZ = @"space(5)";
        partial void OnGetCARTAZ(ref string value);
        partial void OnCARTAZChanging(ref string value);
        partial void OnCARTAZChanged();
    
        /// <summary>
        /// There are no comments for CODCOR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CODCOR
        {
            get
            {
                string value = _CODCOR;
                OnGetCODCOR(ref value);
                return value;
            }
            set
            {
                if (_CODCOR != value)
                {
                  OnCODCORChanging(ref value);
                  ReportPropertyChanging("CODCOR");
                  _CODCOR = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CODCOR");
                  OnCODCORChanged();
              }
            }
        }
        private string _CODCOR = @"space(3)";
        partial void OnGetCODCOR(ref string value);
        partial void OnCODCORChanging(ref string value);
        partial void OnCODCORChanged();
    
        /// <summary>
        /// There are no comments for REFLOTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string REFLOTE
        {
            get
            {
                string value = _REFLOTE;
                OnGetREFLOTE(ref value);
                return value;
            }
            set
            {
                if (_REFLOTE != value)
                {
                  OnREFLOTEChanging(ref value);
                  ReportPropertyChanging("REFLOTE");
                  _REFLOTE = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("REFLOTE");
                  OnREFLOTEChanged();
              }
            }
        }
        private string _REFLOTE;
        partial void OnGetREFLOTE(ref string value);
        partial void OnREFLOTEChanging(ref string value);
        partial void OnREFLOTEChanged();
    
        /// <summary>
        /// There are no comments for IDLOTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int IDLOTE
        {
            get
            {
                int value = _IDLOTE;
                OnGetIDLOTE(ref value);
                return value;
            }
            set
            {
                if (_IDLOTE != value)
                {
                  OnIDLOTEChanging(ref value);
                  ReportPropertyChanging("IDLOTE");
                  _IDLOTE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IDLOTE");
                  OnIDLOTEChanged();
              }
            }
        }
        private int _IDLOTE;
        partial void OnGetIDLOTE(ref int value);
        partial void OnIDLOTEChanging(ref int value);
        partial void OnIDLOTEChanged();
    
        /// <summary>
        /// There are no comments for DATAREG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DATAREG
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DATAREG;
                OnGetDATAREG(ref value);
                return value;
            }
            set
            {
                if (_DATAREG != value)
                {
                  OnDATAREGChanging(ref value);
                  ReportPropertyChanging("DATAREG");
                  _DATAREG = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATAREG");
                  OnDATAREGChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DATAREG;
        partial void OnGetDATAREG(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAREGChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATAREGChanged();
    
        /// <summary>
        /// There are no comments for LOTEFORN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string LOTEFORN
        {
            get
            {
                string value = _LOTEFORN;
                OnGetLOTEFORN(ref value);
                return value;
            }
            set
            {
                if (_LOTEFORN != value)
                {
                  OnLOTEFORNChanging(ref value);
                  ReportPropertyChanging("LOTEFORN");
                  _LOTEFORN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LOTEFORN");
                  OnLOTEFORNChanged();
              }
            }
        }
        private string _LOTEFORN;
        partial void OnGetLOTEFORN(ref string value);
        partial void OnLOTEFORNChanging(ref string value);
        partial void OnLOTEFORNChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            STKLOT obj = new STKLOT();
            obj.ARTIGO = ARTIGO;
            obj.CARTAZ = CARTAZ;
            obj.CODCOR = CODCOR;
            obj.REFLOTE = REFLOTE;
            obj.IDLOTE = IDLOTE;
            obj.DATAREG = DATAREG;
            obj.LOTEFORN = LOTEFORN;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          STKLOT toCompare = obj as STKLOT;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.ARTIGO, toCompare.ARTIGO))
            return false;
          if (!Object.Equals(this.CARTAZ, toCompare.CARTAZ))
            return false;
          if (!Object.Equals(this.CODCOR, toCompare.CODCOR))
            return false;
          if (!Object.Equals(this.REFLOTE, toCompare.REFLOTE))
            return false;
          if (!Object.Equals(this.IDLOTE, toCompare.IDLOTE))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + ARTIGO.GetHashCode();
          hashCode = (hashCode * 7) + CARTAZ.GetHashCode();
          hashCode = (hashCode * 7) + CODCOR.GetHashCode();
          hashCode = (hashCode * 7) + REFLOTE.GetHashCode();
          hashCode = (hashCode * 7) + IDLOTE.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
