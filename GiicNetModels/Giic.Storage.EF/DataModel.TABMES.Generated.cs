//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.TABMES in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NRMES
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="TABMES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TABMES : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new TABMES object.
        /// </summary>
        /// <param name="nRMES">Initial value of NRMES.</param>
        /// <param name="dESCMES">Initial value of DESCMES.</param>
        public static TABMES CreateTABMES(int nRMES, string dESCMES)
        {
            TABMES tABMES = new TABMES();
            tABMES.NRMES = nRMES;
            tABMES.DESCMES = dESCMES;
            return tABMES;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NRMES in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int NRMES
        {
            get
            {
                int value = _NRMES;
                OnGetNRMES(ref value);
                return value;
            }
            set
            {
                if (_NRMES != value)
                {
                  OnNRMESChanging(ref value);
                  ReportPropertyChanging("NRMES");
                  _NRMES = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRMES");
                  OnNRMESChanged();
              }
            }
        }
        private int _NRMES;
        partial void OnGetNRMES(ref int value);
        partial void OnNRMESChanging(ref int value);
        partial void OnNRMESChanged();
    
        /// <summary>
        /// There are no comments for DESCMES in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string DESCMES
        {
            get
            {
                string value = _DESCMES;
                OnGetDESCMES(ref value);
                return value;
            }
            set
            {
                if (_DESCMES != value)
                {
                  OnDESCMESChanging(ref value);
                  ReportPropertyChanging("DESCMES");
                  _DESCMES = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("DESCMES");
                  OnDESCMESChanged();
              }
            }
        }
        private string _DESCMES;
        partial void OnGetDESCMES(ref string value);
        partial void OnDESCMESChanging(ref string value);
        partial void OnDESCMESChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            TABMES obj = new TABMES();
            obj.NRMES = NRMES;
            obj.DESCMES = DESCMES;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          TABMES toCompare = obj as TABMES;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.NRMES, toCompare.NRMES))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + NRMES.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
