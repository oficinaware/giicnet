//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.TABML in the schema.
    /// </summary>
    /// <KeyProperties>
    /// nrreg
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="TABML")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TABML : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new TABML object.
        /// </summary>
        /// <param name="nrreg">Initial value of nrreg.</param>
        public static TABML CreateTABML(int nrreg)
        {
            TABML tABML = new TABML();
            tABML.nrreg = nrreg;
            return tABML;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for nrreg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int nrreg
        {
            get
            {
                int value = _nrreg;
                OnGetnrreg(ref value);
                return value;
            }
            set
            {
                if (_nrreg != value)
                {
                  OnnrregChanging(ref value);
                  ReportPropertyChanging("nrreg");
                  _nrreg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("nrreg");
                  OnnrregChanged();
              }
            }
        }
        private int _nrreg;
        partial void OnGetnrreg(ref int value);
        partial void OnnrregChanging(ref int value);
        partial void OnnrregChanged();
    
        /// <summary>
        /// There are no comments for DOCT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<double> DOCT
        {
            get
            {
                global::System.Nullable<double> value = _DOCT;
                OnGetDOCT(ref value);
                return value;
            }
            set
            {
                if (_DOCT != value)
                {
                  OnDOCTChanging(ref value);
                  ReportPropertyChanging("DOCT");
                  _DOCT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DOCT");
                  OnDOCTChanged();
              }
            }
        }
        private global::System.Nullable<double> _DOCT;
        partial void OnGetDOCT(ref global::System.Nullable<double> value);
        partial void OnDOCTChanging(ref global::System.Nullable<double> value);
        partial void OnDOCTChanged();
    
        /// <summary>
        /// There are no comments for AOCT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<double> AOCT
        {
            get
            {
                global::System.Nullable<double> value = _AOCT;
                OnGetAOCT(ref value);
                return value;
            }
            set
            {
                if (_AOCT != value)
                {
                  OnAOCTChanging(ref value);
                  ReportPropertyChanging("AOCT");
                  _AOCT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AOCT");
                  OnAOCTChanged();
              }
            }
        }
        private global::System.Nullable<double> _AOCT;
        partial void OnGetAOCT(ref global::System.Nullable<double> value);
        partial void OnAOCTChanging(ref global::System.Nullable<double> value);
        partial void OnAOCTChanged();
    
        /// <summary>
        /// There are no comments for PERC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<double> PERC
        {
            get
            {
                global::System.Nullable<double> value = _PERC;
                OnGetPERC(ref value);
                return value;
            }
            set
            {
                if (_PERC != value)
                {
                  OnPERCChanging(ref value);
                  ReportPropertyChanging("PERC");
                  _PERC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PERC");
                  OnPERCChanged();
              }
            }
        }
        private global::System.Nullable<double> _PERC;
        partial void OnGetPERC(ref global::System.Nullable<double> value);
        partial void OnPERCChanging(ref global::System.Nullable<double> value);
        partial void OnPERCChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            TABML obj = new TABML();
            obj.nrreg = nrreg;
            obj.DOCT = DOCT;
            obj.AOCT = AOCT;
            obj.PERC = PERC;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          TABML toCompare = obj as TABML;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.nrreg, toCompare.nrreg))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + nrreg.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
