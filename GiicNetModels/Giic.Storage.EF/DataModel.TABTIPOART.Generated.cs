//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.TABTIPOART in the schema.
    /// </summary>
    /// <KeyProperties>
    /// TIPO
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="TABTIPOART")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TABTIPOART : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new TABTIPOART object.
        /// </summary>
        /// <param name="tIPO">Initial value of TIPO.</param>
        public static TABTIPOART CreateTABTIPOART(string tIPO)
        {
            TABTIPOART tABTIPOART = new TABTIPOART();
            tABTIPOART.TIPO = tIPO;
            return tABTIPOART;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for TIPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string TIPO
        {
            get
            {
                string value = _TIPO;
                OnGetTIPO(ref value);
                return value;
            }
            set
            {
                if (_TIPO != value)
                {
                  OnTIPOChanging(ref value);
                  ReportPropertyChanging("TIPO");
                  _TIPO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TIPO");
                  OnTIPOChanged();
              }
            }
        }
        private string _TIPO;
        partial void OnGetTIPO(ref string value);
        partial void OnTIPOChanging(ref string value);
        partial void OnTIPOChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for CTBCONTA_3D in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string CTBCONTA_3D
        {
            get
            {
                string value = _CTBCONTA_3D;
                OnGetCTBCONTA_3D(ref value);
                return value;
            }
            set
            {
                if (_CTBCONTA_3D != value)
                {
                  OnCTBCONTA_3DChanging(ref value);
                  ReportPropertyChanging("CTBCONTA_3D");
                  _CTBCONTA_3D = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CTBCONTA_3D");
                  OnCTBCONTA_3DChanged();
              }
            }
        }
        private string _CTBCONTA_3D;
        partial void OnGetCTBCONTA_3D(ref string value);
        partial void OnCTBCONTA_3DChanging(ref string value);
        partial void OnCTBCONTA_3DChanged();
    
        /// <summary>
        /// There are no comments for CTBCONTA_3C in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string CTBCONTA_3C
        {
            get
            {
                string value = _CTBCONTA_3C;
                OnGetCTBCONTA_3C(ref value);
                return value;
            }
            set
            {
                if (_CTBCONTA_3C != value)
                {
                  OnCTBCONTA_3CChanging(ref value);
                  ReportPropertyChanging("CTBCONTA_3C");
                  _CTBCONTA_3C = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CTBCONTA_3C");
                  OnCTBCONTA_3CChanged();
              }
            }
        }
        private string _CTBCONTA_3C;
        partial void OnGetCTBCONTA_3C(ref string value);
        partial void OnCTBCONTA_3CChanging(ref string value);
        partial void OnCTBCONTA_3CChanged();
    
        /// <summary>
        /// There are no comments for CTBCONTA_2D in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string CTBCONTA_2D
        {
            get
            {
                string value = _CTBCONTA_2D;
                OnGetCTBCONTA_2D(ref value);
                return value;
            }
            set
            {
                if (_CTBCONTA_2D != value)
                {
                  OnCTBCONTA_2DChanging(ref value);
                  ReportPropertyChanging("CTBCONTA_2D");
                  _CTBCONTA_2D = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CTBCONTA_2D");
                  OnCTBCONTA_2DChanged();
              }
            }
        }
        private string _CTBCONTA_2D;
        partial void OnGetCTBCONTA_2D(ref string value);
        partial void OnCTBCONTA_2DChanging(ref string value);
        partial void OnCTBCONTA_2DChanged();
    
        /// <summary>
        /// There are no comments for CTBCONTA_2C in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string CTBCONTA_2C
        {
            get
            {
                string value = _CTBCONTA_2C;
                OnGetCTBCONTA_2C(ref value);
                return value;
            }
            set
            {
                if (_CTBCONTA_2C != value)
                {
                  OnCTBCONTA_2CChanging(ref value);
                  ReportPropertyChanging("CTBCONTA_2C");
                  _CTBCONTA_2C = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CTBCONTA_2C");
                  OnCTBCONTA_2CChanged();
              }
            }
        }
        private string _CTBCONTA_2C;
        partial void OnGetCTBCONTA_2C(ref string value);
        partial void OnCTBCONTA_2CChanging(ref string value);
        partial void OnCTBCONTA_2CChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            TABTIPOART obj = new TABTIPOART();
            obj.TIPO = TIPO;
            obj.DESCRICAO = DESCRICAO;
            obj.CTBCONTA_3D = CTBCONTA_3D;
            obj.CTBCONTA_3C = CTBCONTA_3C;
            obj.CTBCONTA_2D = CTBCONTA_2D;
            obj.CTBCONTA_2C = CTBCONTA_2C;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          TABTIPOART toCompare = obj as TABTIPOART;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.TIPO, toCompare.TIPO))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + TIPO.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
