//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.TAB_CODETIQ in the schema.
    /// </summary>
    /// <KeyProperties>
    /// CODETIQ
    /// ITEM
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="TAB_CODETIQ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TAB_CODETIQ : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new TAB_CODETIQ object.
        /// </summary>
        /// <param name="cODETIQ">Initial value of CODETIQ.</param>
        /// <param name="iTEM">Initial value of ITEM.</param>
        public static TAB_CODETIQ CreateTAB_CODETIQ(string cODETIQ, short iTEM)
        {
            TAB_CODETIQ tAB_CODETIQ = new TAB_CODETIQ();
            tAB_CODETIQ.CODETIQ = cODETIQ;
            tAB_CODETIQ.ITEM = iTEM;
            return tAB_CODETIQ;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for CODETIQ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CODETIQ
        {
            get
            {
                string value = _CODETIQ;
                OnGetCODETIQ(ref value);
                return value;
            }
            set
            {
                if (_CODETIQ != value)
                {
                  OnCODETIQChanging(ref value);
                  ReportPropertyChanging("CODETIQ");
                  _CODETIQ = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CODETIQ");
                  OnCODETIQChanged();
              }
            }
        }
        private string _CODETIQ;
        partial void OnGetCODETIQ(ref string value);
        partial void OnCODETIQChanging(ref string value);
        partial void OnCODETIQChanged();
    
        /// <summary>
        /// There are no comments for ITEM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public short ITEM
        {
            get
            {
                short value = _ITEM;
                OnGetITEM(ref value);
                return value;
            }
            set
            {
                if (_ITEM != value)
                {
                  OnITEMChanging(ref value);
                  ReportPropertyChanging("ITEM");
                  _ITEM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ITEM");
                  OnITEMChanged();
              }
            }
        }
        private short _ITEM;
        partial void OnGetITEM(ref short value);
        partial void OnITEMChanging(ref short value);
        partial void OnITEMChanged();
    
        /// <summary>
        /// There are no comments for TITULO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string TITULO
        {
            get
            {
                string value = _TITULO;
                OnGetTITULO(ref value);
                return value;
            }
            set
            {
                if (_TITULO != value)
                {
                  OnTITULOChanging(ref value);
                  ReportPropertyChanging("TITULO");
                  _TITULO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TITULO");
                  OnTITULOChanged();
              }
            }
        }
        private string _TITULO;
        partial void OnGetTITULO(ref string value);
        partial void OnTITULOChanging(ref string value);
        partial void OnTITULOChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for IMAGEM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(150)]
        public string IMAGEM
        {
            get
            {
                string value = _IMAGEM;
                OnGetIMAGEM(ref value);
                return value;
            }
            set
            {
                if (_IMAGEM != value)
                {
                  OnIMAGEMChanging(ref value);
                  ReportPropertyChanging("IMAGEM");
                  _IMAGEM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IMAGEM");
                  OnIMAGEMChanged();
              }
            }
        }
        private string _IMAGEM;
        partial void OnGetIMAGEM(ref string value);
        partial void OnIMAGEMChanging(ref string value);
        partial void OnIMAGEMChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            TAB_CODETIQ obj = new TAB_CODETIQ();
            obj.CODETIQ = CODETIQ;
            obj.ITEM = ITEM;
            obj.TITULO = TITULO;
            obj.DESCRICAO = DESCRICAO;
            obj.IMAGEM = IMAGEM;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          TAB_CODETIQ toCompare = obj as TAB_CODETIQ;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.CODETIQ, toCompare.CODETIQ))
            return false;
          if (!Object.Equals(this.ITEM, toCompare.ITEM))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + CODETIQ.GetHashCode();
          hashCode = (hashCode * 7) + ITEM.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
