//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.TAB_PICT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// COD_PICT
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="TAB_PICT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TAB_PICT : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new TAB_PICT object.
        /// </summary>
        /// <param name="cOD_PICT">Initial value of COD_PICT.</param>
        public static TAB_PICT CreateTAB_PICT(string cOD_PICT)
        {
            TAB_PICT tAB_PICT = new TAB_PICT();
            tAB_PICT.COD_PICT = cOD_PICT;
            return tAB_PICT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for COD_PICT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string COD_PICT
        {
            get
            {
                string value = _COD_PICT;
                OnGetCOD_PICT(ref value);
                return value;
            }
            set
            {
                if (_COD_PICT != value)
                {
                  OnCOD_PICTChanging(ref value);
                  ReportPropertyChanging("COD_PICT");
                  _COD_PICT = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("COD_PICT");
                  OnCOD_PICTChanged();
              }
            }
        }
        private string _COD_PICT;
        partial void OnGetCOD_PICT(ref string value);
        partial void OnCOD_PICTChanging(ref string value);
        partial void OnCOD_PICTChanged();
    
        /// <summary>
        /// There are no comments for NOME_PICT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string NOME_PICT
        {
            get
            {
                string value = _NOME_PICT;
                OnGetNOME_PICT(ref value);
                return value;
            }
            set
            {
                if (_NOME_PICT != value)
                {
                  OnNOME_PICTChanging(ref value);
                  ReportPropertyChanging("NOME_PICT");
                  _NOME_PICT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NOME_PICT");
                  OnNOME_PICTChanged();
              }
            }
        }
        private string _NOME_PICT;
        partial void OnGetNOME_PICT(ref string value);
        partial void OnNOME_PICTChanging(ref string value);
        partial void OnNOME_PICTChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            TAB_PICT obj = new TAB_PICT();
            obj.COD_PICT = COD_PICT;
            obj.NOME_PICT = NOME_PICT;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          TAB_PICT toCompare = obj as TAB_PICT;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.COD_PICT, toCompare.COD_PICT))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + COD_PICT.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
