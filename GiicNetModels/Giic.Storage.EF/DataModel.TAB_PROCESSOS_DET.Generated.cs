//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.TAB_PROCESSOS_DET in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NR_PROCESSO
    /// SEQ
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="TAB_PROCESSOS_DET")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TAB_PROCESSOS_DET : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new TAB_PROCESSOS_DET object.
        /// </summary>
        /// <param name="nR_PROCESSO">Initial value of NR_PROCESSO.</param>
        /// <param name="sEQ">Initial value of SEQ.</param>
        public static TAB_PROCESSOS_DET CreateTAB_PROCESSOS_DET(int nR_PROCESSO, int sEQ)
        {
            TAB_PROCESSOS_DET tAB_PROCESSOS_DET = new TAB_PROCESSOS_DET();
            tAB_PROCESSOS_DET.NR_PROCESSO = nR_PROCESSO;
            tAB_PROCESSOS_DET.SEQ = sEQ;
            return tAB_PROCESSOS_DET;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NR_PROCESSO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int NR_PROCESSO
        {
            get
            {
                int value = _NR_PROCESSO;
                OnGetNR_PROCESSO(ref value);
                return value;
            }
            set
            {
                if (_NR_PROCESSO != value)
                {
                  OnNR_PROCESSOChanging(ref value);
                  ReportPropertyChanging("NR_PROCESSO");
                  _NR_PROCESSO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NR_PROCESSO");
                  OnNR_PROCESSOChanged();
              }
            }
        }
        private int _NR_PROCESSO;
        partial void OnGetNR_PROCESSO(ref int value);
        partial void OnNR_PROCESSOChanging(ref int value);
        partial void OnNR_PROCESSOChanged();
    
        /// <summary>
        /// There are no comments for SEQ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SEQ
        {
            get
            {
                int value = _SEQ;
                OnGetSEQ(ref value);
                return value;
            }
            set
            {
                if (_SEQ != value)
                {
                  OnSEQChanging(ref value);
                  ReportPropertyChanging("SEQ");
                  _SEQ = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEQ");
                  OnSEQChanged();
              }
            }
        }
        private int _SEQ;
        partial void OnGetSEQ(ref int value);
        partial void OnSEQChanging(ref int value);
        partial void OnSEQChanged();
    
        /// <summary>
        /// There are no comments for PECA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string PECA
        {
            get
            {
                string value = _PECA;
                OnGetPECA(ref value);
                return value;
            }
            set
            {
                if (_PECA != value)
                {
                  OnPECAChanging(ref value);
                  ReportPropertyChanging("PECA");
                  _PECA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PECA");
                  OnPECAChanged();
              }
            }
        }
        private string _PECA;
        partial void OnGetPECA(ref string value);
        partial void OnPECAChanging(ref string value);
        partial void OnPECAChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for EXECUTADO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> EXECUTADO
        {
            get
            {
                global::System.Nullable<bool> value = _EXECUTADO;
                OnGetEXECUTADO(ref value);
                return value;
            }
            set
            {
                if (_EXECUTADO != value)
                {
                  OnEXECUTADOChanging(ref value);
                  ReportPropertyChanging("EXECUTADO");
                  _EXECUTADO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EXECUTADO");
                  OnEXECUTADOChanged();
              }
            }
        }
        private global::System.Nullable<bool> _EXECUTADO;
        partial void OnGetEXECUTADO(ref global::System.Nullable<bool> value);
        partial void OnEXECUTADOChanging(ref global::System.Nullable<bool> value);
        partial void OnEXECUTADOChanged();
    
        /// <summary>
        /// There are no comments for DATA_EXEC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DATA_EXEC
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DATA_EXEC;
                OnGetDATA_EXEC(ref value);
                return value;
            }
            set
            {
                if (_DATA_EXEC != value)
                {
                  OnDATA_EXECChanging(ref value);
                  ReportPropertyChanging("DATA_EXEC");
                  _DATA_EXEC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATA_EXEC");
                  OnDATA_EXECChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DATA_EXEC;
        partial void OnGetDATA_EXEC(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATA_EXECChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATA_EXECChanged();
    
        /// <summary>
        /// There are no comments for DATA_PLAN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DATA_PLAN
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DATA_PLAN;
                OnGetDATA_PLAN(ref value);
                return value;
            }
            set
            {
                if (_DATA_PLAN != value)
                {
                  OnDATA_PLANChanging(ref value);
                  ReportPropertyChanging("DATA_PLAN");
                  _DATA_PLAN = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DATA_PLAN");
                  OnDATA_PLANChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DATA_PLAN;
        partial void OnGetDATA_PLAN(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATA_PLANChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDATA_PLANChanged();
    
        /// <summary>
        /// There are no comments for UTENTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string UTENTE
        {
            get
            {
                string value = _UTENTE;
                OnGetUTENTE(ref value);
                return value;
            }
            set
            {
                if (_UTENTE != value)
                {
                  OnUTENTEChanging(ref value);
                  ReportPropertyChanging("UTENTE");
                  _UTENTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UTENTE");
                  OnUTENTEChanged();
              }
            }
        }
        private string _UTENTE;
        partial void OnGetUTENTE(ref string value);
        partial void OnUTENTEChanging(ref string value);
        partial void OnUTENTEChanged();
    
        /// <summary>
        /// There are no comments for COMENT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string COMENT
        {
            get
            {
                string value = _COMENT;
                OnGetCOMENT(ref value);
                return value;
            }
            set
            {
                if (_COMENT != value)
                {
                  OnCOMENTChanging(ref value);
                  ReportPropertyChanging("COMENT");
                  _COMENT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("COMENT");
                  OnCOMENTChanged();
              }
            }
        }
        private string _COMENT;
        partial void OnGetCOMENT(ref string value);
        partial void OnCOMENTChanging(ref string value);
        partial void OnCOMENTChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            TAB_PROCESSOS_DET obj = new TAB_PROCESSOS_DET();
            obj.NR_PROCESSO = NR_PROCESSO;
            obj.SEQ = SEQ;
            obj.PECA = PECA;
            obj.DESCRICAO = DESCRICAO;
            obj.EXECUTADO = EXECUTADO;
            obj.DATA_EXEC = DATA_EXEC;
            obj.DATA_PLAN = DATA_PLAN;
            obj.UTENTE = UTENTE;
            obj.COMENT = COMENT;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          TAB_PROCESSOS_DET toCompare = obj as TAB_PROCESSOS_DET;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.NR_PROCESSO, toCompare.NR_PROCESSO))
            return false;
          if (!Object.Equals(this.SEQ, toCompare.SEQ))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + NR_PROCESSO.GetHashCode();
          hashCode = (hashCode * 7) + SEQ.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
