//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WKORC_NIVEL in the schema.
    /// </summary>
    /// <KeyProperties>
    /// spid
    /// TIPOFT
    /// MODELO
    /// VARIANTE
    /// SEQ
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WKORC_NIVEL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WKORC_NIVEL : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WKORC_NIVEL object.
        /// </summary>
        /// <param name="spid">Initial value of spid.</param>
        /// <param name="tIPOFT">Initial value of TIPOFT.</param>
        /// <param name="mODELO">Initial value of MODELO.</param>
        /// <param name="vARIANTE">Initial value of VARIANTE.</param>
        /// <param name="sEQ">Initial value of SEQ.</param>
        public static WKORC_NIVEL CreateWKORC_NIVEL(int spid, string tIPOFT, string mODELO, string vARIANTE, int sEQ)
        {
            WKORC_NIVEL wKORC_NIVEL = new WKORC_NIVEL();
            wKORC_NIVEL.spid = spid;
            wKORC_NIVEL.TIPOFT = tIPOFT;
            wKORC_NIVEL.MODELO = mODELO;
            wKORC_NIVEL.VARIANTE = vARIANTE;
            wKORC_NIVEL.SEQ = sEQ;
            return wKORC_NIVEL;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for spid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int spid
        {
            get
            {
                int value = _spid;
                OnGetspid(ref value);
                return value;
            }
            set
            {
                if (_spid != value)
                {
                  OnspidChanging(ref value);
                  ReportPropertyChanging("spid");
                  _spid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("spid");
                  OnspidChanged();
              }
            }
        }
        private int _spid;
        partial void OnGetspid(ref int value);
        partial void OnspidChanging(ref int value);
        partial void OnspidChanged();
    
        /// <summary>
        /// There are no comments for TIPOFT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string TIPOFT
        {
            get
            {
                string value = _TIPOFT;
                OnGetTIPOFT(ref value);
                return value;
            }
            set
            {
                if (_TIPOFT != value)
                {
                  OnTIPOFTChanging(ref value);
                  ReportPropertyChanging("TIPOFT");
                  _TIPOFT = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TIPOFT");
                  OnTIPOFTChanged();
              }
            }
        }
        private string _TIPOFT;
        partial void OnGetTIPOFT(ref string value);
        partial void OnTIPOFTChanging(ref string value);
        partial void OnTIPOFTChanged();
    
        /// <summary>
        /// There are no comments for MODELO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string MODELO
        {
            get
            {
                string value = _MODELO;
                OnGetMODELO(ref value);
                return value;
            }
            set
            {
                if (_MODELO != value)
                {
                  OnMODELOChanging(ref value);
                  ReportPropertyChanging("MODELO");
                  _MODELO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("MODELO");
                  OnMODELOChanged();
              }
            }
        }
        private string _MODELO;
        partial void OnGetMODELO(ref string value);
        partial void OnMODELOChanging(ref string value);
        partial void OnMODELOChanged();
    
        /// <summary>
        /// There are no comments for VARIANTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string VARIANTE
        {
            get
            {
                string value = _VARIANTE;
                OnGetVARIANTE(ref value);
                return value;
            }
            set
            {
                if (_VARIANTE != value)
                {
                  OnVARIANTEChanging(ref value);
                  ReportPropertyChanging("VARIANTE");
                  _VARIANTE = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("VARIANTE");
                  OnVARIANTEChanged();
              }
            }
        }
        private string _VARIANTE;
        partial void OnGetVARIANTE(ref string value);
        partial void OnVARIANTEChanging(ref string value);
        partial void OnVARIANTEChanged();
    
        /// <summary>
        /// There are no comments for SEQ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SEQ
        {
            get
            {
                int value = _SEQ;
                OnGetSEQ(ref value);
                return value;
            }
            set
            {
                if (_SEQ != value)
                {
                  OnSEQChanging(ref value);
                  ReportPropertyChanging("SEQ");
                  _SEQ = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEQ");
                  OnSEQChanged();
              }
            }
        }
        private int _SEQ;
        partial void OnGetSEQ(ref int value);
        partial void OnSEQChanging(ref int value);
        partial void OnSEQChanged();
    
        /// <summary>
        /// There are no comments for keymod in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string keymod
        {
            get
            {
                string value = _keymod;
                OnGetkeymod(ref value);
                return value;
            }
            set
            {
                if (_keymod != value)
                {
                  OnkeymodChanging(ref value);
                  ReportPropertyChanging("keymod");
                  _keymod = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("keymod");
                  OnkeymodChanged();
              }
            }
        }
        private string _keymod;
        partial void OnGetkeymod(ref string value);
        partial void OnkeymodChanging(ref string value);
        partial void OnkeymodChanged();
    
        /// <summary>
        /// There are no comments for FAMILIA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string FAMILIA
        {
            get
            {
                string value = _FAMILIA;
                OnGetFAMILIA(ref value);
                return value;
            }
            set
            {
                if (_FAMILIA != value)
                {
                  OnFAMILIAChanging(ref value);
                  ReportPropertyChanging("FAMILIA");
                  _FAMILIA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FAMILIA");
                  OnFAMILIAChanged();
              }
            }
        }
        private string _FAMILIA;
        partial void OnGetFAMILIA(ref string value);
        partial void OnFAMILIAChanging(ref string value);
        partial void OnFAMILIAChanged();
    
        /// <summary>
        /// There are no comments for OPERACAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string OPERACAO
        {
            get
            {
                string value = _OPERACAO;
                OnGetOPERACAO(ref value);
                return value;
            }
            set
            {
                if (_OPERACAO != value)
                {
                  OnOPERACAOChanging(ref value);
                  ReportPropertyChanging("OPERACAO");
                  _OPERACAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OPERACAO");
                  OnOPERACAOChanged();
              }
            }
        }
        private string _OPERACAO;
        partial void OnGetOPERACAO(ref string value);
        partial void OnOPERACAOChanging(ref string value);
        partial void OnOPERACAOChanged();
    
        /// <summary>
        /// There are no comments for ARTIGO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string ARTIGO
        {
            get
            {
                string value = _ARTIGO;
                OnGetARTIGO(ref value);
                return value;
            }
            set
            {
                if (_ARTIGO != value)
                {
                  OnARTIGOChanging(ref value);
                  ReportPropertyChanging("ARTIGO");
                  _ARTIGO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ARTIGO");
                  OnARTIGOChanged();
              }
            }
        }
        private string _ARTIGO;
        partial void OnGetARTIGO(ref string value);
        partial void OnARTIGOChanging(ref string value);
        partial void OnARTIGOChanged();
    
        /// <summary>
        /// There are no comments for CARTAZ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string CARTAZ
        {
            get
            {
                string value = _CARTAZ;
                OnGetCARTAZ(ref value);
                return value;
            }
            set
            {
                if (_CARTAZ != value)
                {
                  OnCARTAZChanging(ref value);
                  ReportPropertyChanging("CARTAZ");
                  _CARTAZ = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CARTAZ");
                  OnCARTAZChanged();
              }
            }
        }
        private string _CARTAZ;
        partial void OnGetCARTAZ(ref string value);
        partial void OnCARTAZChanging(ref string value);
        partial void OnCARTAZChanged();
    
        /// <summary>
        /// There are no comments for CODCOR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string CODCOR
        {
            get
            {
                string value = _CODCOR;
                OnGetCODCOR(ref value);
                return value;
            }
            set
            {
                if (_CODCOR != value)
                {
                  OnCODCORChanging(ref value);
                  ReportPropertyChanging("CODCOR");
                  _CODCOR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CODCOR");
                  OnCODCORChanged();
              }
            }
        }
        private string _CODCOR;
        partial void OnGetCODCOR(ref string value);
        partial void OnCODCORChanging(ref string value);
        partial void OnCODCORChanged();
    
        /// <summary>
        /// There are no comments for TAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string TAM
        {
            get
            {
                string value = _TAM;
                OnGetTAM(ref value);
                return value;
            }
            set
            {
                if (_TAM != value)
                {
                  OnTAMChanging(ref value);
                  ReportPropertyChanging("TAM");
                  _TAM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TAM");
                  OnTAMChanged();
              }
            }
        }
        private string _TAM;
        partial void OnGetTAM(ref string value);
        partial void OnTAMChanging(ref string value);
        partial void OnTAMChanged();
    
        /// <summary>
        /// There are no comments for CONSUMO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> CONSUMO
        {
            get
            {
                global::System.Nullable<decimal> value = _CONSUMO;
                OnGetCONSUMO(ref value);
                return value;
            }
            set
            {
                if (_CONSUMO != value)
                {
                  OnCONSUMOChanging(ref value);
                  ReportPropertyChanging("CONSUMO");
                  _CONSUMO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CONSUMO");
                  OnCONSUMOChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _CONSUMO;
        partial void OnGetCONSUMO(ref global::System.Nullable<decimal> value);
        partial void OnCONSUMOChanging(ref global::System.Nullable<decimal> value);
        partial void OnCONSUMOChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for UNMED in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string UNMED
        {
            get
            {
                string value = _UNMED;
                OnGetUNMED(ref value);
                return value;
            }
            set
            {
                if (_UNMED != value)
                {
                  OnUNMEDChanging(ref value);
                  ReportPropertyChanging("UNMED");
                  _UNMED = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UNMED");
                  OnUNMEDChanged();
              }
            }
        }
        private string _UNMED;
        partial void OnGetUNMED(ref string value);
        partial void OnUNMEDChanging(ref string value);
        partial void OnUNMEDChanged();
    
        /// <summary>
        /// There are no comments for preco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> preco
        {
            get
            {
                global::System.Nullable<decimal> value = _preco;
                OnGetpreco(ref value);
                return value;
            }
            set
            {
                if (_preco != value)
                {
                  OnprecoChanging(ref value);
                  ReportPropertyChanging("preco");
                  _preco = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("preco");
                  OnprecoChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _preco;
        partial void OnGetpreco(ref global::System.Nullable<decimal> value);
        partial void OnprecoChanging(ref global::System.Nullable<decimal> value);
        partial void OnprecoChanged();
    
        /// <summary>
        /// There are no comments for VL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> VL
        {
            get
            {
                global::System.Nullable<decimal> value = _VL;
                OnGetVL(ref value);
                return value;
            }
            set
            {
                if (_VL != value)
                {
                  OnVLChanging(ref value);
                  ReportPropertyChanging("VL");
                  _VL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VL");
                  OnVLChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _VL;
        partial void OnGetVL(ref global::System.Nullable<decimal> value);
        partial void OnVLChanging(ref global::System.Nullable<decimal> value);
        partial void OnVLChanged();
    
        /// <summary>
        /// There are no comments for TAMBASE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string TAMBASE
        {
            get
            {
                string value = _TAMBASE;
                OnGetTAMBASE(ref value);
                return value;
            }
            set
            {
                if (_TAMBASE != value)
                {
                  OnTAMBASEChanging(ref value);
                  ReportPropertyChanging("TAMBASE");
                  _TAMBASE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TAMBASE");
                  OnTAMBASEChanged();
              }
            }
        }
        private string _TAMBASE;
        partial void OnGetTAMBASE(ref string value);
        partial void OnTAMBASEChanging(ref string value);
        partial void OnTAMBASEChanged();
    
        /// <summary>
        /// There are no comments for DATAREVPRC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string DATAREVPRC
        {
            get
            {
                string value = _DATAREVPRC;
                OnGetDATAREVPRC(ref value);
                return value;
            }
            set
            {
                if (_DATAREVPRC != value)
                {
                  OnDATAREVPRCChanging(ref value);
                  ReportPropertyChanging("DATAREVPRC");
                  _DATAREVPRC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DATAREVPRC");
                  OnDATAREVPRCChanged();
              }
            }
        }
        private string _DATAREVPRC;
        partial void OnGetDATAREVPRC(ref string value);
        partial void OnDATAREVPRCChanging(ref string value);
        partial void OnDATAREVPRCChanged();
    
        /// <summary>
        /// There are no comments for SEQPAI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SEQPAI
        {
            get
            {
                global::System.Nullable<int> value = _SEQPAI;
                OnGetSEQPAI(ref value);
                return value;
            }
            set
            {
                if (_SEQPAI != value)
                {
                  OnSEQPAIChanging(ref value);
                  ReportPropertyChanging("SEQPAI");
                  _SEQPAI = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEQPAI");
                  OnSEQPAIChanged();
              }
            }
        }
        private global::System.Nullable<int> _SEQPAI;
        partial void OnGetSEQPAI(ref global::System.Nullable<int> value);
        partial void OnSEQPAIChanging(ref global::System.Nullable<int> value);
        partial void OnSEQPAIChanged();
    
        /// <summary>
        /// There are no comments for NIVEL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<short> NIVEL
        {
            get
            {
                global::System.Nullable<short> value = _NIVEL;
                OnGetNIVEL(ref value);
                return value;
            }
            set
            {
                if (_NIVEL != value)
                {
                  OnNIVELChanging(ref value);
                  ReportPropertyChanging("NIVEL");
                  _NIVEL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NIVEL");
                  OnNIVELChanged();
              }
            }
        }
        private global::System.Nullable<short> _NIVEL;
        partial void OnGetNIVEL(ref global::System.Nullable<short> value);
        partial void OnNIVELChanging(ref global::System.Nullable<short> value);
        partial void OnNIVELChanged();
    
        /// <summary>
        /// There are no comments for SEQOP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SEQOP
        {
            get
            {
                global::System.Nullable<int> value = _SEQOP;
                OnGetSEQOP(ref value);
                return value;
            }
            set
            {
                if (_SEQOP != value)
                {
                  OnSEQOPChanging(ref value);
                  ReportPropertyChanging("SEQOP");
                  _SEQOP = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEQOP");
                  OnSEQOPChanged();
              }
            }
        }
        private global::System.Nullable<int> _SEQOP;
        partial void OnGetSEQOP(ref global::System.Nullable<int> value);
        partial void OnSEQOPChanging(ref global::System.Nullable<int> value);
        partial void OnSEQOPChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WKORC_NIVEL obj = new WKORC_NIVEL();
            obj.spid = spid;
            obj.TIPOFT = TIPOFT;
            obj.MODELO = MODELO;
            obj.VARIANTE = VARIANTE;
            obj.SEQ = SEQ;
            obj.keymod = keymod;
            obj.FAMILIA = FAMILIA;
            obj.OPERACAO = OPERACAO;
            obj.ARTIGO = ARTIGO;
            obj.CARTAZ = CARTAZ;
            obj.CODCOR = CODCOR;
            obj.TAM = TAM;
            obj.CONSUMO = CONSUMO;
            obj.DESCRICAO = DESCRICAO;
            obj.UNMED = UNMED;
            obj.preco = preco;
            obj.VL = VL;
            obj.TAMBASE = TAMBASE;
            obj.DATAREVPRC = DATAREVPRC;
            obj.SEQPAI = SEQPAI;
            obj.NIVEL = NIVEL;
            obj.SEQOP = SEQOP;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WKORC_NIVEL toCompare = obj as WKORC_NIVEL;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.spid, toCompare.spid))
            return false;
          if (!Object.Equals(this.TIPOFT, toCompare.TIPOFT))
            return false;
          if (!Object.Equals(this.MODELO, toCompare.MODELO))
            return false;
          if (!Object.Equals(this.VARIANTE, toCompare.VARIANTE))
            return false;
          if (!Object.Equals(this.SEQ, toCompare.SEQ))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + spid.GetHashCode();
          hashCode = (hashCode * 7) + TIPOFT.GetHashCode();
          hashCode = (hashCode * 7) + MODELO.GetHashCode();
          hashCode = (hashCode * 7) + VARIANTE.GetHashCode();
          hashCode = (hashCode * 7) + SEQ.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
