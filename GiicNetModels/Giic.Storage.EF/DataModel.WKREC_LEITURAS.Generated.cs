//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WKREC_LEITURAS in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SPID
    /// IDLEITURA
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WKREC_LEITURAS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WKREC_LEITURAS : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WKREC_LEITURAS object.
        /// </summary>
        /// <param name="sPID">Initial value of SPID.</param>
        /// <param name="iDLEITURA">Initial value of IDLEITURA.</param>
        /// <param name="nRENCO">Initial value of NRENCO.</param>
        public static WKREC_LEITURAS CreateWKREC_LEITURAS(int sPID, int iDLEITURA, int nRENCO)
        {
            WKREC_LEITURAS wKREC_LEITURAS = new WKREC_LEITURAS();
            wKREC_LEITURAS.SPID = sPID;
            wKREC_LEITURAS.IDLEITURA = iDLEITURA;
            wKREC_LEITURAS.NRENCO = nRENCO;
            return wKREC_LEITURAS;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SPID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SPID
        {
            get
            {
                int value = _SPID;
                OnGetSPID(ref value);
                return value;
            }
            set
            {
                if (_SPID != value)
                {
                  OnSPIDChanging(ref value);
                  ReportPropertyChanging("SPID");
                  _SPID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SPID");
                  OnSPIDChanged();
              }
            }
        }
        private int _SPID;
        partial void OnGetSPID(ref int value);
        partial void OnSPIDChanging(ref int value);
        partial void OnSPIDChanged();
    
        /// <summary>
        /// There are no comments for IDLEITURA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int IDLEITURA
        {
            get
            {
                int value = _IDLEITURA;
                OnGetIDLEITURA(ref value);
                return value;
            }
            set
            {
                if (_IDLEITURA != value)
                {
                  OnIDLEITURAChanging(ref value);
                  ReportPropertyChanging("IDLEITURA");
                  _IDLEITURA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IDLEITURA");
                  OnIDLEITURAChanged();
              }
            }
        }
        private int _IDLEITURA;
        partial void OnGetIDLEITURA(ref int value);
        partial void OnIDLEITURAChanging(ref int value);
        partial void OnIDLEITURAChanged();
    
        /// <summary>
        /// There are no comments for NRENCO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int NRENCO
        {
            get
            {
                int value = _NRENCO;
                OnGetNRENCO(ref value);
                return value;
            }
            set
            {
                if (_NRENCO != value)
                {
                  OnNRENCOChanging(ref value);
                  ReportPropertyChanging("NRENCO");
                  _NRENCO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRENCO");
                  OnNRENCOChanged();
              }
            }
        }
        private int _NRENCO;
        partial void OnGetNRENCO(ref int value);
        partial void OnNRENCOChanging(ref int value);
        partial void OnNRENCOChanged();
    
        /// <summary>
        /// There are no comments for LNENCO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LNENCO
        {
            get
            {
                global::System.Nullable<int> value = _LNENCO;
                OnGetLNENCO(ref value);
                return value;
            }
            set
            {
                if (_LNENCO != value)
                {
                  OnLNENCOChanging(ref value);
                  ReportPropertyChanging("LNENCO");
                  _LNENCO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LNENCO");
                  OnLNENCOChanged();
              }
            }
        }
        private global::System.Nullable<int> _LNENCO;
        partial void OnGetLNENCO(ref global::System.Nullable<int> value);
        partial void OnLNENCOChanging(ref global::System.Nullable<int> value);
        partial void OnLNENCOChanged();
    
        /// <summary>
        /// There are no comments for SEQEMB in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SEQEMB
        {
            get
            {
                global::System.Nullable<int> value = _SEQEMB;
                OnGetSEQEMB(ref value);
                return value;
            }
            set
            {
                if (_SEQEMB != value)
                {
                  OnSEQEMBChanging(ref value);
                  ReportPropertyChanging("SEQEMB");
                  _SEQEMB = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SEQEMB");
                  OnSEQEMBChanged();
              }
            }
        }
        private global::System.Nullable<int> _SEQEMB = 0;
        partial void OnGetSEQEMB(ref global::System.Nullable<int> value);
        partial void OnSEQEMBChanging(ref global::System.Nullable<int> value);
        partial void OnSEQEMBChanged();
    
        /// <summary>
        /// There are no comments for Artigo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string Artigo
        {
            get
            {
                string value = _Artigo;
                OnGetArtigo(ref value);
                return value;
            }
            set
            {
                if (_Artigo != value)
                {
                  OnArtigoChanging(ref value);
                  ReportPropertyChanging("Artigo");
                  _Artigo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Artigo");
                  OnArtigoChanged();
              }
            }
        }
        private string _Artigo;
        partial void OnGetArtigo(ref string value);
        partial void OnArtigoChanging(ref string value);
        partial void OnArtigoChanged();
    
        /// <summary>
        /// There are no comments for Tam in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string Tam
        {
            get
            {
                string value = _Tam;
                OnGetTam(ref value);
                return value;
            }
            set
            {
                if (_Tam != value)
                {
                  OnTamChanging(ref value);
                  ReportPropertyChanging("Tam");
                  _Tam = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tam");
                  OnTamChanged();
              }
            }
        }
        private string _Tam = @"space(4)";
        partial void OnGetTam(ref string value);
        partial void OnTamChanging(ref string value);
        partial void OnTamChanged();
    
        /// <summary>
        /// There are no comments for ITAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ITAM
        {
            get
            {
                global::System.Nullable<int> value = _ITAM;
                OnGetITAM(ref value);
                return value;
            }
            set
            {
                if (_ITAM != value)
                {
                  OnITAMChanging(ref value);
                  ReportPropertyChanging("ITAM");
                  _ITAM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ITAM");
                  OnITAMChanged();
              }
            }
        }
        private global::System.Nullable<int> _ITAM = 0;
        partial void OnGetITAM(ref global::System.Nullable<int> value);
        partial void OnITAMChanging(ref global::System.Nullable<int> value);
        partial void OnITAMChanged();
    
        /// <summary>
        /// There are no comments for Cartaz in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string Cartaz
        {
            get
            {
                string value = _Cartaz;
                OnGetCartaz(ref value);
                return value;
            }
            set
            {
                if (_Cartaz != value)
                {
                  OnCartazChanging(ref value);
                  ReportPropertyChanging("Cartaz");
                  _Cartaz = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Cartaz");
                  OnCartazChanged();
              }
            }
        }
        private string _Cartaz = @"space(5)";
        partial void OnGetCartaz(ref string value);
        partial void OnCartazChanging(ref string value);
        partial void OnCartazChanged();
    
        /// <summary>
        /// There are no comments for CodCor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string CodCor
        {
            get
            {
                string value = _CodCor;
                OnGetCodCor(ref value);
                return value;
            }
            set
            {
                if (_CodCor != value)
                {
                  OnCodCorChanging(ref value);
                  ReportPropertyChanging("CodCor");
                  _CodCor = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CodCor");
                  OnCodCorChanged();
              }
            }
        }
        private string _CodCor = @"space(3)";
        partial void OnGetCodCor(ref string value);
        partial void OnCodCorChanging(ref string value);
        partial void OnCodCorChanged();
    
        /// <summary>
        /// There are no comments for IdLote in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> IdLote
        {
            get
            {
                global::System.Nullable<int> value = _IdLote;
                OnGetIdLote(ref value);
                return value;
            }
            set
            {
                if (_IdLote != value)
                {
                  OnIdLoteChanging(ref value);
                  ReportPropertyChanging("IdLote");
                  _IdLote = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdLote");
                  OnIdLoteChanged();
              }
            }
        }
        private global::System.Nullable<int> _IdLote = 0;
        partial void OnGetIdLote(ref global::System.Nullable<int> value);
        partial void OnIdLoteChanging(ref global::System.Nullable<int> value);
        partial void OnIdLoteChanged();
    
        /// <summary>
        /// There are no comments for RefLote in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string RefLote
        {
            get
            {
                string value = _RefLote;
                OnGetRefLote(ref value);
                return value;
            }
            set
            {
                if (_RefLote != value)
                {
                  OnRefLoteChanging(ref value);
                  ReportPropertyChanging("RefLote");
                  _RefLote = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RefLote");
                  OnRefLoteChanged();
              }
            }
        }
        private string _RefLote = @"";
        partial void OnGetRefLote(ref string value);
        partial void OnRefLoteChanging(ref string value);
        partial void OnRefLoteChanged();
    
        /// <summary>
        /// There are no comments for LoteForn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string LoteForn
        {
            get
            {
                string value = _LoteForn;
                OnGetLoteForn(ref value);
                return value;
            }
            set
            {
                if (_LoteForn != value)
                {
                  OnLoteFornChanging(ref value);
                  ReportPropertyChanging("LoteForn");
                  _LoteForn = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LoteForn");
                  OnLoteFornChanged();
              }
            }
        }
        private string _LoteForn;
        partial void OnGetLoteForn(ref string value);
        partial void OnLoteFornChanging(ref string value);
        partial void OnLoteFornChanged();
    
        /// <summary>
        /// There are no comments for IdLocal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string IdLocal
        {
            get
            {
                string value = _IdLocal;
                OnGetIdLocal(ref value);
                return value;
            }
            set
            {
                if (_IdLocal != value)
                {
                  OnIdLocalChanging(ref value);
                  ReportPropertyChanging("IdLocal");
                  _IdLocal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IdLocal");
                  OnIdLocalChanged();
              }
            }
        }
        private string _IdLocal = @"";
        partial void OnGetIdLocal(ref string value);
        partial void OnIdLocalChanging(ref string value);
        partial void OnIdLocalChanged();
    
        /// <summary>
        /// There are no comments for TipoDoc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string TipoDoc
        {
            get
            {
                string value = _TipoDoc;
                OnGetTipoDoc(ref value);
                return value;
            }
            set
            {
                if (_TipoDoc != value)
                {
                  OnTipoDocChanging(ref value);
                  ReportPropertyChanging("TipoDoc");
                  _TipoDoc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TipoDoc");
                  OnTipoDocChanged();
              }
            }
        }
        private string _TipoDoc;
        partial void OnGetTipoDoc(ref string value);
        partial void OnTipoDocChanging(ref string value);
        partial void OnTipoDocChanged();
    
        /// <summary>
        /// There are no comments for DataDoc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DataDoc
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DataDoc;
                OnGetDataDoc(ref value);
                return value;
            }
            set
            {
                if (_DataDoc != value)
                {
                  OnDataDocChanging(ref value);
                  ReportPropertyChanging("DataDoc");
                  _DataDoc = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DataDoc");
                  OnDataDocChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DataDoc;
        partial void OnGetDataDoc(ref global::System.Nullable<System.DateTime> value);
        partial void OnDataDocChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDataDocChanged();
    
        /// <summary>
        /// There are no comments for IDForn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string IDForn
        {
            get
            {
                string value = _IDForn;
                OnGetIDForn(ref value);
                return value;
            }
            set
            {
                if (_IDForn != value)
                {
                  OnIDFornChanging(ref value);
                  ReportPropertyChanging("IDForn");
                  _IDForn = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IDForn");
                  OnIDFornChanged();
              }
            }
        }
        private string _IDForn;
        partial void OnGetIDForn(ref string value);
        partial void OnIDFornChanging(ref string value);
        partial void OnIDFornChanged();
    
        /// <summary>
        /// There are no comments for DocForn in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string DocForn
        {
            get
            {
                string value = _DocForn;
                OnGetDocForn(ref value);
                return value;
            }
            set
            {
                if (_DocForn != value)
                {
                  OnDocFornChanging(ref value);
                  ReportPropertyChanging("DocForn");
                  _DocForn = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DocForn");
                  OnDocFornChanged();
              }
            }
        }
        private string _DocForn;
        partial void OnGetDocForn(ref string value);
        partial void OnDocFornChanging(ref string value);
        partial void OnDocFornChanged();
    
        /// <summary>
        /// There are no comments for QT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> QT
        {
            get
            {
                global::System.Nullable<decimal> value = _QT;
                OnGetQT(ref value);
                return value;
            }
            set
            {
                if (_QT != value)
                {
                  OnQTChanging(ref value);
                  ReportPropertyChanging("QT");
                  _QT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QT");
                  OnQTChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _QT = 0m;
        partial void OnGetQT(ref global::System.Nullable<decimal> value);
        partial void OnQTChanging(ref global::System.Nullable<decimal> value);
        partial void OnQTChanged();
    
        /// <summary>
        /// There are no comments for CBART in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string CBART
        {
            get
            {
                string value = _CBART;
                OnGetCBART(ref value);
                return value;
            }
            set
            {
                if (_CBART != value)
                {
                  OnCBARTChanging(ref value);
                  ReportPropertyChanging("CBART");
                  _CBART = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CBART");
                  OnCBARTChanged();
              }
            }
        }
        private string _CBART;
        partial void OnGetCBART(ref string value);
        partial void OnCBARTChanging(ref string value);
        partial void OnCBARTChanged();
    
        /// <summary>
        /// There are no comments for CBLEITURA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string CBLEITURA
        {
            get
            {
                string value = _CBLEITURA;
                OnGetCBLEITURA(ref value);
                return value;
            }
            set
            {
                if (_CBLEITURA != value)
                {
                  OnCBLEITURAChanging(ref value);
                  ReportPropertyChanging("CBLEITURA");
                  _CBLEITURA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CBLEITURA");
                  OnCBLEITURAChanged();
              }
            }
        }
        private string _CBLEITURA;
        partial void OnGetCBLEITURA(ref string value);
        partial void OnCBLEITURAChanging(ref string value);
        partial void OnCBLEITURAChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WKREC_LEITURAS obj = new WKREC_LEITURAS();
            obj.SPID = SPID;
            obj.IDLEITURA = IDLEITURA;
            obj.NRENCO = NRENCO;
            obj.LNENCO = LNENCO;
            obj.SEQEMB = SEQEMB;
            obj.Artigo = Artigo;
            obj.Tam = Tam;
            obj.ITAM = ITAM;
            obj.Cartaz = Cartaz;
            obj.CodCor = CodCor;
            obj.IdLote = IdLote;
            obj.RefLote = RefLote;
            obj.LoteForn = LoteForn;
            obj.IdLocal = IdLocal;
            obj.TipoDoc = TipoDoc;
            obj.DataDoc = DataDoc;
            obj.IDForn = IDForn;
            obj.DocForn = DocForn;
            obj.QT = QT;
            obj.CBART = CBART;
            obj.CBLEITURA = CBLEITURA;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WKREC_LEITURAS toCompare = obj as WKREC_LEITURAS;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.SPID, toCompare.SPID))
            return false;
          if (!Object.Equals(this.IDLEITURA, toCompare.IDLEITURA))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + SPID.GetHashCode();
          hashCode = (hashCode * 7) + IDLEITURA.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
