//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WKSALDO_MOV in the schema.
    /// </summary>
    /// <KeyProperties>
    /// NRREG
    /// SPID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WKSALDO_MOV")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WKSALDO_MOV : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WKSALDO_MOV object.
        /// </summary>
        /// <param name="nRREG">Initial value of NRREG.</param>
        /// <param name="sPID">Initial value of SPID.</param>
        /// <param name="aRMORIG">Initial value of ARMORIG.</param>
        /// <param name="aRTIGO">Initial value of ARTIGO.</param>
        /// <param name="cARTAZ">Initial value of CARTAZ.</param>
        /// <param name="cODCOR">Initial value of CODCOR.</param>
        /// <param name="xTAM">Initial value of XTAM.</param>
        /// <param name="dTMOV">Initial value of DTMOV.</param>
        /// <param name="sINAL">Initial value of SINAL.</param>
        /// <param name="cODMOV">Initial value of CODMOV.</param>
        /// <param name="nRDOCI">Initial value of NRDOCI.</param>
        /// <param name="lNDOC">Initial value of LNDOC.</param>
        public static WKSALDO_MOV CreateWKSALDO_MOV(global::System.Guid nRREG, int sPID, string aRMORIG, string aRTIGO, string cARTAZ, string cODCOR, string xTAM, global::System.DateTime dTMOV, string sINAL, string cODMOV, string nRDOCI, int lNDOC)
        {
            WKSALDO_MOV wKSALDO_MOV = new WKSALDO_MOV();
            wKSALDO_MOV.NRREG = nRREG;
            wKSALDO_MOV.SPID = sPID;
            wKSALDO_MOV.ARMORIG = aRMORIG;
            wKSALDO_MOV.ARTIGO = aRTIGO;
            wKSALDO_MOV.CARTAZ = cARTAZ;
            wKSALDO_MOV.CODCOR = cODCOR;
            wKSALDO_MOV.XTAM = xTAM;
            wKSALDO_MOV.DTMOV = dTMOV;
            wKSALDO_MOV.SINAL = sINAL;
            wKSALDO_MOV.CODMOV = cODMOV;
            wKSALDO_MOV.NRDOCI = nRDOCI;
            wKSALDO_MOV.LNDOC = lNDOC;
            return wKSALDO_MOV;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NRREG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.Guid NRREG
        {
            get
            {
                global::System.Guid value = _NRREG;
                OnGetNRREG(ref value);
                return value;
            }
            set
            {
                if (_NRREG != value)
                {
                  OnNRREGChanging(ref value);
                  ReportPropertyChanging("NRREG");
                  _NRREG = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NRREG");
                  OnNRREGChanged();
              }
            }
        }
        private global::System.Guid _NRREG;
        partial void OnGetNRREG(ref global::System.Guid value);
        partial void OnNRREGChanging(ref global::System.Guid value);
        partial void OnNRREGChanged();
    
        /// <summary>
        /// There are no comments for SPID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SPID
        {
            get
            {
                int value = _SPID;
                OnGetSPID(ref value);
                return value;
            }
            set
            {
                if (_SPID != value)
                {
                  OnSPIDChanging(ref value);
                  ReportPropertyChanging("SPID");
                  _SPID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SPID");
                  OnSPIDChanged();
              }
            }
        }
        private int _SPID;
        partial void OnGetSPID(ref int value);
        partial void OnSPIDChanging(ref int value);
        partial void OnSPIDChanged();
    
        /// <summary>
        /// There are no comments for ARMORIG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ARMORIG
        {
            get
            {
                string value = _ARMORIG;
                OnGetARMORIG(ref value);
                return value;
            }
            set
            {
                if (_ARMORIG != value)
                {
                  OnARMORIGChanging(ref value);
                  ReportPropertyChanging("ARMORIG");
                  _ARMORIG = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ARMORIG");
                  OnARMORIGChanged();
              }
            }
        }
        private string _ARMORIG;
        partial void OnGetARMORIG(ref string value);
        partial void OnARMORIGChanging(ref string value);
        partial void OnARMORIGChanged();
    
        /// <summary>
        /// There are no comments for ARTIGO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ARTIGO
        {
            get
            {
                string value = _ARTIGO;
                OnGetARTIGO(ref value);
                return value;
            }
            set
            {
                if (_ARTIGO != value)
                {
                  OnARTIGOChanging(ref value);
                  ReportPropertyChanging("ARTIGO");
                  _ARTIGO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ARTIGO");
                  OnARTIGOChanged();
              }
            }
        }
        private string _ARTIGO;
        partial void OnGetARTIGO(ref string value);
        partial void OnARTIGOChanging(ref string value);
        partial void OnARTIGOChanged();
    
        /// <summary>
        /// There are no comments for CARTAZ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CARTAZ
        {
            get
            {
                string value = _CARTAZ;
                OnGetCARTAZ(ref value);
                return value;
            }
            set
            {
                if (_CARTAZ != value)
                {
                  OnCARTAZChanging(ref value);
                  ReportPropertyChanging("CARTAZ");
                  _CARTAZ = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CARTAZ");
                  OnCARTAZChanged();
              }
            }
        }
        private string _CARTAZ = @"space((5))";
        partial void OnGetCARTAZ(ref string value);
        partial void OnCARTAZChanging(ref string value);
        partial void OnCARTAZChanged();
    
        /// <summary>
        /// There are no comments for CODCOR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CODCOR
        {
            get
            {
                string value = _CODCOR;
                OnGetCODCOR(ref value);
                return value;
            }
            set
            {
                if (_CODCOR != value)
                {
                  OnCODCORChanging(ref value);
                  ReportPropertyChanging("CODCOR");
                  _CODCOR = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CODCOR");
                  OnCODCORChanged();
              }
            }
        }
        private string _CODCOR = @"space((3))";
        partial void OnGetCODCOR(ref string value);
        partial void OnCODCORChanging(ref string value);
        partial void OnCODCORChanged();
    
        /// <summary>
        /// There are no comments for XTAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string XTAM
        {
            get
            {
                string value = _XTAM;
                OnGetXTAM(ref value);
                return value;
            }
            set
            {
                if (_XTAM != value)
                {
                  OnXTAMChanging(ref value);
                  ReportPropertyChanging("XTAM");
                  _XTAM = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("XTAM");
                  OnXTAMChanged();
              }
            }
        }
        private string _XTAM = @"space((4))";
        partial void OnGetXTAM(ref string value);
        partial void OnXTAMChanging(ref string value);
        partial void OnXTAMChanged();
    
        /// <summary>
        /// There are no comments for DTMOV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.DateTime DTMOV
        {
            get
            {
                global::System.DateTime value = _DTMOV;
                OnGetDTMOV(ref value);
                return value;
            }
            set
            {
                if (_DTMOV != value)
                {
                  OnDTMOVChanging(ref value);
                  ReportPropertyChanging("DTMOV");
                  _DTMOV = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DTMOV");
                  OnDTMOVChanged();
              }
            }
        }
        private global::System.DateTime _DTMOV;
        partial void OnGetDTMOV(ref global::System.DateTime value);
        partial void OnDTMOVChanging(ref global::System.DateTime value);
        partial void OnDTMOVChanged();
    
        /// <summary>
        /// There are no comments for SINAL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string SINAL
        {
            get
            {
                string value = _SINAL;
                OnGetSINAL(ref value);
                return value;
            }
            set
            {
                if (_SINAL != value)
                {
                  OnSINALChanging(ref value);
                  ReportPropertyChanging("SINAL");
                  _SINAL = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SINAL");
                  OnSINALChanged();
              }
            }
        }
        private string _SINAL;
        partial void OnGetSINAL(ref string value);
        partial void OnSINALChanging(ref string value);
        partial void OnSINALChanged();
    
        /// <summary>
        /// There are no comments for CODMOV in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CODMOV
        {
            get
            {
                string value = _CODMOV;
                OnGetCODMOV(ref value);
                return value;
            }
            set
            {
                if (_CODMOV != value)
                {
                  OnCODMOVChanging(ref value);
                  ReportPropertyChanging("CODMOV");
                  _CODMOV = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CODMOV");
                  OnCODMOVChanged();
              }
            }
        }
        private string _CODMOV;
        partial void OnGetCODMOV(ref string value);
        partial void OnCODMOVChanging(ref string value);
        partial void OnCODMOVChanged();
    
        /// <summary>
        /// There are no comments for NRDOCI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string NRDOCI
        {
            get
            {
                string value = _NRDOCI;
                OnGetNRDOCI(ref value);
                return value;
            }
            set
            {
                if (_NRDOCI != value)
                {
                  OnNRDOCIChanging(ref value);
                  ReportPropertyChanging("NRDOCI");
                  _NRDOCI = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NRDOCI");
                  OnNRDOCIChanged();
              }
            }
        }
        private string _NRDOCI;
        partial void OnGetNRDOCI(ref string value);
        partial void OnNRDOCIChanging(ref string value);
        partial void OnNRDOCIChanged();
    
        /// <summary>
        /// There are no comments for LNDOC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int LNDOC
        {
            get
            {
                int value = _LNDOC;
                OnGetLNDOC(ref value);
                return value;
            }
            set
            {
                if (_LNDOC != value)
                {
                  OnLNDOCChanging(ref value);
                  ReportPropertyChanging("LNDOC");
                  _LNDOC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LNDOC");
                  OnLNDOCChanged();
              }
            }
        }
        private int _LNDOC;
        partial void OnGetLNDOC(ref int value);
        partial void OnLNDOCChanging(ref int value);
        partial void OnLNDOCChanged();
    
        /// <summary>
        /// There are no comments for NRDOCE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string NRDOCE
        {
            get
            {
                string value = _NRDOCE;
                OnGetNRDOCE(ref value);
                return value;
            }
            set
            {
                if (_NRDOCE != value)
                {
                  OnNRDOCEChanging(ref value);
                  ReportPropertyChanging("NRDOCE");
                  _NRDOCE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NRDOCE");
                  OnNRDOCEChanged();
              }
            }
        }
        private string _NRDOCE;
        partial void OnGetNRDOCE(ref string value);
        partial void OnNRDOCEChanging(ref string value);
        partial void OnNRDOCEChanged();
    
        /// <summary>
        /// There are no comments for DESCRICAO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string DESCRICAO
        {
            get
            {
                string value = _DESCRICAO;
                OnGetDESCRICAO(ref value);
                return value;
            }
            set
            {
                if (_DESCRICAO != value)
                {
                  OnDESCRICAOChanging(ref value);
                  ReportPropertyChanging("DESCRICAO");
                  _DESCRICAO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DESCRICAO");
                  OnDESCRICAOChanged();
              }
            }
        }
        private string _DESCRICAO;
        partial void OnGetDESCRICAO(ref string value);
        partial void OnDESCRICAOChanging(ref string value);
        partial void OnDESCRICAOChanged();
    
        /// <summary>
        /// There are no comments for UNMED in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string UNMED
        {
            get
            {
                string value = _UNMED;
                OnGetUNMED(ref value);
                return value;
            }
            set
            {
                if (_UNMED != value)
                {
                  OnUNMEDChanging(ref value);
                  ReportPropertyChanging("UNMED");
                  _UNMED = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UNMED");
                  OnUNMEDChanged();
              }
            }
        }
        private string _UNMED;
        partial void OnGetUNMED(ref string value);
        partial void OnUNMEDChanging(ref string value);
        partial void OnUNMEDChanged();
    
        /// <summary>
        /// There are no comments for IDLOTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> IDLOTE
        {
            get
            {
                global::System.Nullable<int> value = _IDLOTE;
                OnGetIDLOTE(ref value);
                return value;
            }
            set
            {
                if (_IDLOTE != value)
                {
                  OnIDLOTEChanging(ref value);
                  ReportPropertyChanging("IDLOTE");
                  _IDLOTE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IDLOTE");
                  OnIDLOTEChanged();
              }
            }
        }
        private global::System.Nullable<int> _IDLOTE = 0;
        partial void OnGetIDLOTE(ref global::System.Nullable<int> value);
        partial void OnIDLOTEChanging(ref global::System.Nullable<int> value);
        partial void OnIDLOTEChanged();
    
        /// <summary>
        /// There are no comments for IDLOCAL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string IDLOCAL
        {
            get
            {
                string value = _IDLOCAL;
                OnGetIDLOCAL(ref value);
                return value;
            }
            set
            {
                if (_IDLOCAL != value)
                {
                  OnIDLOCALChanging(ref value);
                  ReportPropertyChanging("IDLOCAL");
                  _IDLOCAL = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("IDLOCAL");
                  OnIDLOCALChanged();
              }
            }
        }
        private string _IDLOCAL = @"";
        partial void OnGetIDLOCAL(ref string value);
        partial void OnIDLOCALChanging(ref string value);
        partial void OnIDLOCALChanged();
    
        /// <summary>
        /// There are no comments for DescMov in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string DescMov
        {
            get
            {
                string value = _DescMov;
                OnGetDescMov(ref value);
                return value;
            }
            set
            {
                if (_DescMov != value)
                {
                  OnDescMovChanging(ref value);
                  ReportPropertyChanging("DescMov");
                  _DescMov = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DescMov");
                  OnDescMovChanged();
              }
            }
        }
        private string _DescMov;
        partial void OnGetDescMov(ref string value);
        partial void OnDescMovChanging(ref string value);
        partial void OnDescMovChanged();
    
        /// <summary>
        /// There are no comments for TERCEIRO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public string TERCEIRO
        {
            get
            {
                string value = _TERCEIRO;
                OnGetTERCEIRO(ref value);
                return value;
            }
            set
            {
                if (_TERCEIRO != value)
                {
                  OnTERCEIROChanging(ref value);
                  ReportPropertyChanging("TERCEIRO");
                  _TERCEIRO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TERCEIRO");
                  OnTERCEIROChanged();
              }
            }
        }
        private string _TERCEIRO;
        partial void OnGetTERCEIRO(ref string value);
        partial void OnTERCEIROChanging(ref string value);
        partial void OnTERCEIROChanged();
    
        /// <summary>
        /// There are no comments for ENTID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        public string ENTID
        {
            get
            {
                string value = _ENTID;
                OnGetENTID(ref value);
                return value;
            }
            set
            {
                if (_ENTID != value)
                {
                  OnENTIDChanging(ref value);
                  ReportPropertyChanging("ENTID");
                  _ENTID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ENTID");
                  OnENTIDChanged();
              }
            }
        }
        private string _ENTID;
        partial void OnGetENTID(ref string value);
        partial void OnENTIDChanging(ref string value);
        partial void OnENTIDChanged();
    
        /// <summary>
        /// There are no comments for NOME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string NOME
        {
            get
            {
                string value = _NOME;
                OnGetNOME(ref value);
                return value;
            }
            set
            {
                if (_NOME != value)
                {
                  OnNOMEChanging(ref value);
                  ReportPropertyChanging("NOME");
                  _NOME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NOME");
                  OnNOMEChanged();
              }
            }
        }
        private string _NOME;
        partial void OnGetNOME(ref string value);
        partial void OnNOMEChanging(ref string value);
        partial void OnNOMEChanged();
    
        /// <summary>
        /// There are no comments for QT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> QT
        {
            get
            {
                global::System.Nullable<decimal> value = _QT;
                OnGetQT(ref value);
                return value;
            }
            set
            {
                if (_QT != value)
                {
                  OnQTChanging(ref value);
                  ReportPropertyChanging("QT");
                  _QT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("QT");
                  OnQTChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _QT;
        partial void OnGetQT(ref global::System.Nullable<decimal> value);
        partial void OnQTChanging(ref global::System.Nullable<decimal> value);
        partial void OnQTChanged();
    
        /// <summary>
        /// There are no comments for VALOR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> VALOR
        {
            get
            {
                global::System.Nullable<decimal> value = _VALOR;
                OnGetVALOR(ref value);
                return value;
            }
            set
            {
                if (_VALOR != value)
                {
                  OnVALORChanging(ref value);
                  ReportPropertyChanging("VALOR");
                  _VALOR = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("VALOR");
                  OnVALORChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _VALOR;
        partial void OnGetVALOR(ref global::System.Nullable<decimal> value);
        partial void OnVALORChanging(ref global::System.Nullable<decimal> value);
        partial void OnVALORChanged();
    
        /// <summary>
        /// There are no comments for SALDO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> SALDO
        {
            get
            {
                global::System.Nullable<decimal> value = _SALDO;
                OnGetSALDO(ref value);
                return value;
            }
            set
            {
                if (_SALDO != value)
                {
                  OnSALDOChanging(ref value);
                  ReportPropertyChanging("SALDO");
                  _SALDO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SALDO");
                  OnSALDOChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _SALDO;
        partial void OnGetSALDO(ref global::System.Nullable<decimal> value);
        partial void OnSALDOChanging(ref global::System.Nullable<decimal> value);
        partial void OnSALDOChanged();
    
        /// <summary>
        /// There are no comments for ID_NAME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string ID_NAME
        {
            get
            {
                string value = _ID_NAME;
                OnGetID_NAME(ref value);
                return value;
            }
            set
            {
                if (_ID_NAME != value)
                {
                  OnID_NAMEChanging(ref value);
                  ReportPropertyChanging("ID_NAME");
                  _ID_NAME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ID_NAME");
                  OnID_NAMEChanged();
              }
            }
        }
        private string _ID_NAME;
        partial void OnGetID_NAME(ref string value);
        partial void OnID_NAMEChanging(ref string value);
        partial void OnID_NAMEChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WKSALDO_MOV obj = new WKSALDO_MOV();
            obj.NRREG = NRREG;
            obj.SPID = SPID;
            obj.ARMORIG = ARMORIG;
            obj.ARTIGO = ARTIGO;
            obj.CARTAZ = CARTAZ;
            obj.CODCOR = CODCOR;
            obj.XTAM = XTAM;
            obj.DTMOV = DTMOV;
            obj.SINAL = SINAL;
            obj.CODMOV = CODMOV;
            obj.NRDOCI = NRDOCI;
            obj.LNDOC = LNDOC;
            obj.NRDOCE = NRDOCE;
            obj.DESCRICAO = DESCRICAO;
            obj.UNMED = UNMED;
            obj.IDLOTE = IDLOTE;
            obj.IDLOCAL = IDLOCAL;
            obj.DescMov = DescMov;
            obj.TERCEIRO = TERCEIRO;
            obj.ENTID = ENTID;
            obj.NOME = NOME;
            obj.QT = QT;
            obj.VALOR = VALOR;
            obj.SALDO = SALDO;
            obj.ID_NAME = ID_NAME;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WKSALDO_MOV toCompare = obj as WKSALDO_MOV;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.NRREG, toCompare.NRREG))
            return false;
          if (!Object.Equals(this.SPID, toCompare.SPID))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + NRREG.GetHashCode();
          hashCode = (hashCode * 7) + SPID.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
