//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WK_CAT_PAIS in the schema.
    /// </summary>
    /// <KeyProperties>
    /// REF
    /// VARIANTE
    /// INDICE
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WK_CAT_PAIS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WK_CAT_PAIS : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WK_CAT_PAIS object.
        /// </summary>
        /// <param name="rEF">Initial value of REF.</param>
        /// <param name="vARIANTE">Initial value of VARIANTE.</param>
        /// <param name="iNDICE">Initial value of INDICE.</param>
        public static WK_CAT_PAIS CreateWK_CAT_PAIS(string rEF, string vARIANTE, int iNDICE)
        {
            WK_CAT_PAIS wK_CAT_PAIS = new WK_CAT_PAIS();
            wK_CAT_PAIS.REF = rEF;
            wK_CAT_PAIS.VARIANTE = vARIANTE;
            wK_CAT_PAIS.INDICE = iNDICE;
            return wK_CAT_PAIS;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for REF in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string REF
        {
            get
            {
                string value = _REF;
                OnGetREF(ref value);
                return value;
            }
            set
            {
                if (_REF != value)
                {
                  OnREFChanging(ref value);
                  ReportPropertyChanging("REF");
                  _REF = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("REF");
                  OnREFChanged();
              }
            }
        }
        private string _REF;
        partial void OnGetREF(ref string value);
        partial void OnREFChanging(ref string value);
        partial void OnREFChanged();
    
        /// <summary>
        /// There are no comments for VARIANTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string VARIANTE
        {
            get
            {
                string value = _VARIANTE;
                OnGetVARIANTE(ref value);
                return value;
            }
            set
            {
                if (_VARIANTE != value)
                {
                  OnVARIANTEChanging(ref value);
                  ReportPropertyChanging("VARIANTE");
                  _VARIANTE = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("VARIANTE");
                  OnVARIANTEChanged();
              }
            }
        }
        private string _VARIANTE;
        partial void OnGetVARIANTE(ref string value);
        partial void OnVARIANTEChanging(ref string value);
        partial void OnVARIANTEChanged();
    
        /// <summary>
        /// There are no comments for INDICE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int INDICE
        {
            get
            {
                int value = _INDICE;
                OnGetINDICE(ref value);
                return value;
            }
            set
            {
                if (_INDICE != value)
                {
                  OnINDICEChanging(ref value);
                  ReportPropertyChanging("INDICE");
                  _INDICE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("INDICE");
                  OnINDICEChanged();
              }
            }
        }
        private int _INDICE;
        partial void OnGetINDICE(ref int value);
        partial void OnINDICEChanging(ref int value);
        partial void OnINDICEChanged();
    
        /// <summary>
        /// There are no comments for TAM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string TAM
        {
            get
            {
                string value = _TAM;
                OnGetTAM(ref value);
                return value;
            }
            set
            {
                if (_TAM != value)
                {
                  OnTAMChanging(ref value);
                  ReportPropertyChanging("TAM");
                  _TAM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TAM");
                  OnTAMChanged();
              }
            }
        }
        private string _TAM;
        partial void OnGetTAM(ref string value);
        partial void OnTAMChanging(ref string value);
        partial void OnTAMChanged();
    
        /// <summary>
        /// There are no comments for COR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string COR
        {
            get
            {
                string value = _COR;
                OnGetCOR(ref value);
                return value;
            }
            set
            {
                if (_COR != value)
                {
                  OnCORChanging(ref value);
                  ReportPropertyChanging("COR");
                  _COR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("COR");
                  OnCORChanged();
              }
            }
        }
        private string _COR;
        partial void OnGetCOR(ref string value);
        partial void OnCORChanging(ref string value);
        partial void OnCORChanged();
    
        /// <summary>
        /// There are no comments for MARCA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string MARCA
        {
            get
            {
                string value = _MARCA;
                OnGetMARCA(ref value);
                return value;
            }
            set
            {
                if (_MARCA != value)
                {
                  OnMARCAChanging(ref value);
                  ReportPropertyChanging("MARCA");
                  _MARCA = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MARCA");
                  OnMARCAChanged();
              }
            }
        }
        private string _MARCA;
        partial void OnGetMARCA(ref string value);
        partial void OnMARCAChanging(ref string value);
        partial void OnMARCAChanged();
    
        /// <summary>
        /// There are no comments for COMP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string COMP
        {
            get
            {
                string value = _COMP;
                OnGetCOMP(ref value);
                return value;
            }
            set
            {
                if (_COMP != value)
                {
                  OnCOMPChanging(ref value);
                  ReportPropertyChanging("COMP");
                  _COMP = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("COMP");
                  OnCOMPChanged();
              }
            }
        }
        private string _COMP;
        partial void OnGetCOMP(ref string value);
        partial void OnCOMPChanging(ref string value);
        partial void OnCOMPChanged();
    
        /// <summary>
        /// There are no comments for LARG in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string LARG
        {
            get
            {
                string value = _LARG;
                OnGetLARG(ref value);
                return value;
            }
            set
            {
                if (_LARG != value)
                {
                  OnLARGChanging(ref value);
                  ReportPropertyChanging("LARG");
                  _LARG = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("LARG");
                  OnLARGChanged();
              }
            }
        }
        private string _LARG;
        partial void OnGetLARG(ref string value);
        partial void OnLARGChanging(ref string value);
        partial void OnLARGChanged();
    
        /// <summary>
        /// There are no comments for VOL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string VOL
        {
            get
            {
                string value = _VOL;
                OnGetVOL(ref value);
                return value;
            }
            set
            {
                if (_VOL != value)
                {
                  OnVOLChanging(ref value);
                  ReportPropertyChanging("VOL");
                  _VOL = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VOL");
                  OnVOLChanged();
              }
            }
        }
        private string _VOL;
        partial void OnGetVOL(ref string value);
        partial void OnVOLChanging(ref string value);
        partial void OnVOLChanged();
    
        /// <summary>
        /// There are no comments for PT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> PT
        {
            get
            {
                global::System.Nullable<float> value = _PT;
                OnGetPT(ref value);
                return value;
            }
            set
            {
                if (_PT != value)
                {
                  OnPTChanging(ref value);
                  ReportPropertyChanging("PT");
                  _PT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PT");
                  OnPTChanged();
              }
            }
        }
        private global::System.Nullable<float> _PT;
        partial void OnGetPT(ref global::System.Nullable<float> value);
        partial void OnPTChanging(ref global::System.Nullable<float> value);
        partial void OnPTChanged();
    
        /// <summary>
        /// There are no comments for ES in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> ES
        {
            get
            {
                global::System.Nullable<float> value = _ES;
                OnGetES(ref value);
                return value;
            }
            set
            {
                if (_ES != value)
                {
                  OnESChanging(ref value);
                  ReportPropertyChanging("ES");
                  _ES = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ES");
                  OnESChanged();
              }
            }
        }
        private global::System.Nullable<float> _ES;
        partial void OnGetES(ref global::System.Nullable<float> value);
        partial void OnESChanging(ref global::System.Nullable<float> value);
        partial void OnESChanged();
    
        /// <summary>
        /// There are no comments for IT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> IT
        {
            get
            {
                global::System.Nullable<float> value = _IT;
                OnGetIT(ref value);
                return value;
            }
            set
            {
                if (_IT != value)
                {
                  OnITChanging(ref value);
                  ReportPropertyChanging("IT");
                  _IT = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IT");
                  OnITChanged();
              }
            }
        }
        private global::System.Nullable<float> _IT;
        partial void OnGetIT(ref global::System.Nullable<float> value);
        partial void OnITChanging(ref global::System.Nullable<float> value);
        partial void OnITChanged();
    
        /// <summary>
        /// There are no comments for DE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> DE
        {
            get
            {
                global::System.Nullable<float> value = _DE;
                OnGetDE(ref value);
                return value;
            }
            set
            {
                if (_DE != value)
                {
                  OnDEChanging(ref value);
                  ReportPropertyChanging("DE");
                  _DE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DE");
                  OnDEChanged();
              }
            }
        }
        private global::System.Nullable<float> _DE;
        partial void OnGetDE(ref global::System.Nullable<float> value);
        partial void OnDEChanging(ref global::System.Nullable<float> value);
        partial void OnDEChanged();
    
        /// <summary>
        /// There are no comments for FR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> FR
        {
            get
            {
                global::System.Nullable<float> value = _FR;
                OnGetFR(ref value);
                return value;
            }
            set
            {
                if (_FR != value)
                {
                  OnFRChanging(ref value);
                  ReportPropertyChanging("FR");
                  _FR = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FR");
                  OnFRChanged();
              }
            }
        }
        private global::System.Nullable<float> _FR;
        partial void OnGetFR(ref global::System.Nullable<float> value);
        partial void OnFRChanging(ref global::System.Nullable<float> value);
        partial void OnFRChanged();
    
        /// <summary>
        /// There are no comments for DK in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> DK
        {
            get
            {
                global::System.Nullable<float> value = _DK;
                OnGetDK(ref value);
                return value;
            }
            set
            {
                if (_DK != value)
                {
                  OnDKChanging(ref value);
                  ReportPropertyChanging("DK");
                  _DK = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DK");
                  OnDKChanged();
              }
            }
        }
        private global::System.Nullable<float> _DK;
        partial void OnGetDK(ref global::System.Nullable<float> value);
        partial void OnDKChanging(ref global::System.Nullable<float> value);
        partial void OnDKChanged();
    
        /// <summary>
        /// There are no comments for NO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> NO
        {
            get
            {
                global::System.Nullable<float> value = _NO;
                OnGetNO(ref value);
                return value;
            }
            set
            {
                if (_NO != value)
                {
                  OnNOChanging(ref value);
                  ReportPropertyChanging("NO");
                  _NO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NO");
                  OnNOChanged();
              }
            }
        }
        private global::System.Nullable<float> _NO;
        partial void OnGetNO(ref global::System.Nullable<float> value);
        partial void OnNOChanging(ref global::System.Nullable<float> value);
        partial void OnNOChanged();
    
        /// <summary>
        /// There are no comments for SE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> SE
        {
            get
            {
                global::System.Nullable<float> value = _SE;
                OnGetSE(ref value);
                return value;
            }
            set
            {
                if (_SE != value)
                {
                  OnSEChanging(ref value);
                  ReportPropertyChanging("SE");
                  _SE = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SE");
                  OnSEChanged();
              }
            }
        }
        private global::System.Nullable<float> _SE;
        partial void OnGetSE(ref global::System.Nullable<float> value);
        partial void OnSEChanging(ref global::System.Nullable<float> value);
        partial void OnSEChanged();
    
        /// <summary>
        /// There are no comments for GB in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> GB
        {
            get
            {
                global::System.Nullable<float> value = _GB;
                OnGetGB(ref value);
                return value;
            }
            set
            {
                if (_GB != value)
                {
                  OnGBChanging(ref value);
                  ReportPropertyChanging("GB");
                  _GB = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("GB");
                  OnGBChanged();
              }
            }
        }
        private global::System.Nullable<float> _GB;
        partial void OnGetGB(ref global::System.Nullable<float> value);
        partial void OnGBChanging(ref global::System.Nullable<float> value);
        partial void OnGBChanged();
    
        /// <summary>
        /// There are no comments for CH in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> CH
        {
            get
            {
                global::System.Nullable<float> value = _CH;
                OnGetCH(ref value);
                return value;
            }
            set
            {
                if (_CH != value)
                {
                  OnCHChanging(ref value);
                  ReportPropertyChanging("CH");
                  _CH = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CH");
                  OnCHChanged();
              }
            }
        }
        private global::System.Nullable<float> _CH;
        partial void OnGetCH(ref global::System.Nullable<float> value);
        partial void OnCHChanging(ref global::System.Nullable<float> value);
        partial void OnCHChanged();
    
        /// <summary>
        /// There are no comments for PL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> PL
        {
            get
            {
                global::System.Nullable<float> value = _PL;
                OnGetPL(ref value);
                return value;
            }
            set
            {
                if (_PL != value)
                {
                  OnPLChanging(ref value);
                  ReportPropertyChanging("PL");
                  _PL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PL");
                  OnPLChanged();
              }
            }
        }
        private global::System.Nullable<float> _PL;
        partial void OnGetPL(ref global::System.Nullable<float> value);
        partial void OnPLChanging(ref global::System.Nullable<float> value);
        partial void OnPLChanged();
    
        /// <summary>
        /// There are no comments for CA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> CA
        {
            get
            {
                global::System.Nullable<float> value = _CA;
                OnGetCA(ref value);
                return value;
            }
            set
            {
                if (_CA != value)
                {
                  OnCAChanging(ref value);
                  ReportPropertyChanging("CA");
                  _CA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CA");
                  OnCAChanged();
              }
            }
        }
        private global::System.Nullable<float> _CA;
        partial void OnGetCA(ref global::System.Nullable<float> value);
        partial void OnCAChanging(ref global::System.Nullable<float> value);
        partial void OnCAChanged();
    
        /// <summary>
        /// There are no comments for RU in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> RU
        {
            get
            {
                global::System.Nullable<float> value = _RU;
                OnGetRU(ref value);
                return value;
            }
            set
            {
                if (_RU != value)
                {
                  OnRUChanging(ref value);
                  ReportPropertyChanging("RU");
                  _RU = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("RU");
                  OnRUChanged();
              }
            }
        }
        private global::System.Nullable<float> _RU;
        partial void OnGetRU(ref global::System.Nullable<float> value);
        partial void OnRUChanging(ref global::System.Nullable<float> value);
        partial void OnRUChanged();
    
        /// <summary>
        /// There are no comments for US in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> US
        {
            get
            {
                global::System.Nullable<float> value = _US;
                OnGetUS(ref value);
                return value;
            }
            set
            {
                if (_US != value)
                {
                  OnUSChanging(ref value);
                  ReportPropertyChanging("US");
                  _US = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("US");
                  OnUSChanged();
              }
            }
        }
        private global::System.Nullable<float> _US;
        partial void OnGetUS(ref global::System.Nullable<float> value);
        partial void OnUSChanging(ref global::System.Nullable<float> value);
        partial void OnUSChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WK_CAT_PAIS obj = new WK_CAT_PAIS();
            obj.REF = REF;
            obj.VARIANTE = VARIANTE;
            obj.INDICE = INDICE;
            obj.TAM = TAM;
            obj.COR = COR;
            obj.MARCA = MARCA;
            obj.COMP = COMP;
            obj.LARG = LARG;
            obj.VOL = VOL;
            obj.PT = PT;
            obj.ES = ES;
            obj.IT = IT;
            obj.DE = DE;
            obj.FR = FR;
            obj.DK = DK;
            obj.NO = NO;
            obj.SE = SE;
            obj.GB = GB;
            obj.CH = CH;
            obj.PL = PL;
            obj.CA = CA;
            obj.RU = RU;
            obj.US = US;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WK_CAT_PAIS toCompare = obj as WK_CAT_PAIS;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.REF, toCompare.REF))
            return false;
          if (!Object.Equals(this.VARIANTE, toCompare.VARIANTE))
            return false;
          if (!Object.Equals(this.INDICE, toCompare.INDICE))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + REF.GetHashCode();
          hashCode = (hashCode * 7) + VARIANTE.GetHashCode();
          hashCode = (hashCode * 7) + INDICE.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
