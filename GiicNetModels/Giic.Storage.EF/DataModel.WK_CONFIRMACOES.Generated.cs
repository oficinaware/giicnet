//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WK_CONFIRMACOES in the schema.
    /// </summary>
    /// <KeyProperties>
    /// spid
    /// nrenco
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WK_CONFIRMACOES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WK_CONFIRMACOES : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WK_CONFIRMACOES object.
        /// </summary>
        /// <param name="spid">Initial value of spid.</param>
        /// <param name="nrenco">Initial value of nrenco.</param>
        public static WK_CONFIRMACOES CreateWK_CONFIRMACOES(int spid, string nrenco)
        {
            WK_CONFIRMACOES wK_CONFIRMACOES = new WK_CONFIRMACOES();
            wK_CONFIRMACOES.spid = spid;
            wK_CONFIRMACOES.nrenco = nrenco;
            return wK_CONFIRMACOES;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for spid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int spid
        {
            get
            {
                int value = _spid;
                OnGetspid(ref value);
                return value;
            }
            set
            {
                if (_spid != value)
                {
                  OnspidChanging(ref value);
                  ReportPropertyChanging("spid");
                  _spid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("spid");
                  OnspidChanged();
              }
            }
        }
        private int _spid;
        partial void OnGetspid(ref int value);
        partial void OnspidChanging(ref int value);
        partial void OnspidChanged();
    
        /// <summary>
        /// There are no comments for nrenco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string nrenco
        {
            get
            {
                string value = _nrenco;
                OnGetnrenco(ref value);
                return value;
            }
            set
            {
                if (_nrenco != value)
                {
                  OnnrencoChanging(ref value);
                  ReportPropertyChanging("nrenco");
                  _nrenco = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("nrenco");
                  OnnrencoChanged();
              }
            }
        }
        private string _nrenco;
        partial void OnGetnrenco(ref string value);
        partial void OnnrencoChanging(ref string value);
        partial void OnnrencoChanged();
    
        /// <summary>
        /// There are no comments for encocli in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string encocli
        {
            get
            {
                string value = _encocli;
                OnGetencocli(ref value);
                return value;
            }
            set
            {
                if (_encocli != value)
                {
                  OnencocliChanging(ref value);
                  ReportPropertyChanging("encocli");
                  _encocli = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("encocli");
                  OnencocliChanged();
              }
            }
        }
        private string _encocli;
        partial void OnGetencocli(ref string value);
        partial void OnencocliChanging(ref string value);
        partial void OnencocliChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WK_CONFIRMACOES obj = new WK_CONFIRMACOES();
            obj.spid = spid;
            obj.nrenco = nrenco;
            obj.encocli = encocli;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WK_CONFIRMACOES toCompare = obj as WK_CONFIRMACOES;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.spid, toCompare.spid))
            return false;
          if (!Object.Equals(this.nrenco, toCompare.nrenco))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + spid.GetHashCode();
          hashCode = (hashCode * 7) + nrenco.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
