//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WK_EMCURSO in the schema.
    /// </summary>
    /// <KeyProperties>
    /// nrreg
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WK_EMCURSO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WK_EMCURSO : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WK_EMCURSO object.
        /// </summary>
        /// <param name="nrreg">Initial value of nrreg.</param>
        /// <param name="spid">Initial value of spid.</param>
        /// <param name="ordfab">Initial value of ordfab.</param>
        /// <param name="seq">Initial value of seq.</param>
        public static WK_EMCURSO CreateWK_EMCURSO(global::System.Guid nrreg, int spid, string ordfab, int seq)
        {
            WK_EMCURSO wK_EMCURSO = new WK_EMCURSO();
            wK_EMCURSO.nrreg = nrreg;
            wK_EMCURSO.spid = spid;
            wK_EMCURSO.ordfab = ordfab;
            wK_EMCURSO.seq = seq;
            return wK_EMCURSO;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for nrreg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public global::System.Guid nrreg
        {
            get
            {
                global::System.Guid value = _nrreg;
                OnGetnrreg(ref value);
                return value;
            }
            set
            {
                if (_nrreg != value)
                {
                  OnnrregChanging(ref value);
                  ReportPropertyChanging("nrreg");
                  _nrreg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("nrreg");
                  OnnrregChanged();
              }
            }
        }
        private global::System.Guid _nrreg;
        partial void OnGetnrreg(ref global::System.Guid value);
        partial void OnnrregChanging(ref global::System.Guid value);
        partial void OnnrregChanged();
    
        /// <summary>
        /// There are no comments for spid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int spid
        {
            get
            {
                int value = _spid;
                OnGetspid(ref value);
                return value;
            }
            set
            {
                if (_spid != value)
                {
                  OnspidChanging(ref value);
                  ReportPropertyChanging("spid");
                  _spid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("spid");
                  OnspidChanged();
              }
            }
        }
        private int _spid;
        partial void OnGetspid(ref int value);
        partial void OnspidChanging(ref int value);
        partial void OnspidChanged();
    
        /// <summary>
        /// There are no comments for ordfab in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ordfab
        {
            get
            {
                string value = _ordfab;
                OnGetordfab(ref value);
                return value;
            }
            set
            {
                if (_ordfab != value)
                {
                  OnordfabChanging(ref value);
                  ReportPropertyChanging("ordfab");
                  _ordfab = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ordfab");
                  OnordfabChanged();
              }
            }
        }
        private string _ordfab;
        partial void OnGetordfab(ref string value);
        partial void OnordfabChanging(ref string value);
        partial void OnordfabChanged();
    
        /// <summary>
        /// There are no comments for seq in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int seq
        {
            get
            {
                int value = _seq;
                OnGetseq(ref value);
                return value;
            }
            set
            {
                if (_seq != value)
                {
                  OnseqChanging(ref value);
                  ReportPropertyChanging("seq");
                  _seq = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("seq");
                  OnseqChanged();
              }
            }
        }
        private int _seq;
        partial void OnGetseq(ref int value);
        partial void OnseqChanging(ref int value);
        partial void OnseqChanged();
    
        /// <summary>
        /// There are no comments for operacao in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string operacao
        {
            get
            {
                string value = _operacao;
                OnGetoperacao(ref value);
                return value;
            }
            set
            {
                if (_operacao != value)
                {
                  OnoperacaoChanging(ref value);
                  ReportPropertyChanging("operacao");
                  _operacao = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("operacao");
                  OnoperacaoChanged();
              }
            }
        }
        private string _operacao;
        partial void OnGetoperacao(ref string value);
        partial void OnoperacaoChanging(ref string value);
        partial void OnoperacaoChanged();
    
        /// <summary>
        /// There are no comments for tipomov in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public string tipomov
        {
            get
            {
                string value = _tipomov;
                OnGettipomov(ref value);
                return value;
            }
            set
            {
                if (_tipomov != value)
                {
                  OntipomovChanging(ref value);
                  ReportPropertyChanging("tipomov");
                  _tipomov = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("tipomov");
                  OntipomovChanged();
              }
            }
        }
        private string _tipomov;
        partial void OnGettipomov(ref string value);
        partial void OntipomovChanging(ref string value);
        partial void OntipomovChanged();
    
        /// <summary>
        /// There are no comments for data_mov in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> data_mov
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _data_mov;
                OnGetdata_mov(ref value);
                return value;
            }
            set
            {
                if (_data_mov != value)
                {
                  Ondata_movChanging(ref value);
                  ReportPropertyChanging("data_mov");
                  _data_mov = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("data_mov");
                  Ondata_movChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _data_mov;
        partial void OnGetdata_mov(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_movChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_movChanged();
    
        /// <summary>
        /// There are no comments for seccao in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string seccao
        {
            get
            {
                string value = _seccao;
                OnGetseccao(ref value);
                return value;
            }
            set
            {
                if (_seccao != value)
                {
                  OnseccaoChanging(ref value);
                  ReportPropertyChanging("seccao");
                  _seccao = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("seccao");
                  OnseccaoChanged();
              }
            }
        }
        private string _seccao;
        partial void OnGetseccao(ref string value);
        partial void OnseccaoChanging(ref string value);
        partial void OnseccaoChanged();
    
        /// <summary>
        /// There are no comments for qt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> qt
        {
            get
            {
                global::System.Nullable<int> value = _qt;
                OnGetqt(ref value);
                return value;
            }
            set
            {
                if (_qt != value)
                {
                  OnqtChanging(ref value);
                  ReportPropertyChanging("qt");
                  _qt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("qt");
                  OnqtChanged();
              }
            }
        }
        private global::System.Nullable<int> _qt;
        partial void OnGetqt(ref global::System.Nullable<int> value);
        partial void OnqtChanging(ref global::System.Nullable<int> value);
        partial void OnqtChanged();
    
        /// <summary>
        /// There are no comments for tempo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<double> tempo
        {
            get
            {
                global::System.Nullable<double> value = _tempo;
                OnGettempo(ref value);
                return value;
            }
            set
            {
                if (_tempo != value)
                {
                  OntempoChanging(ref value);
                  ReportPropertyChanging("tempo");
                  _tempo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("tempo");
                  OntempoChanged();
              }
            }
        }
        private global::System.Nullable<double> _tempo;
        partial void OnGettempo(ref global::System.Nullable<double> value);
        partial void OntempoChanging(ref global::System.Nullable<double> value);
        partial void OntempoChanged();
    
        /// <summary>
        /// There are no comments for preco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> preco
        {
            get
            {
                global::System.Nullable<decimal> value = _preco;
                OnGetpreco(ref value);
                return value;
            }
            set
            {
                if (_preco != value)
                {
                  OnprecoChanging(ref value);
                  ReportPropertyChanging("preco");
                  _preco = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("preco");
                  OnprecoChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _preco;
        partial void OnGetpreco(ref global::System.Nullable<decimal> value);
        partial void OnprecoChanging(ref global::System.Nullable<decimal> value);
        partial void OnprecoChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WK_EMCURSO obj = new WK_EMCURSO();
            obj.nrreg = nrreg;
            obj.spid = spid;
            obj.ordfab = ordfab;
            obj.seq = seq;
            obj.operacao = operacao;
            obj.tipomov = tipomov;
            obj.data_mov = data_mov;
            obj.seccao = seccao;
            obj.qt = qt;
            obj.tempo = tempo;
            obj.preco = preco;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WK_EMCURSO toCompare = obj as WK_EMCURSO;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.nrreg, toCompare.nrreg))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + nrreg.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
