//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WK_PLN_FORN in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SPID
    /// LIN
    /// CDFORN
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WK_PLN_FORN")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WK_PLN_FORN : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WK_PLN_FORN object.
        /// </summary>
        /// <param name="sPID">Initial value of SPID.</param>
        /// <param name="lIN">Initial value of LIN.</param>
        /// <param name="cDFORN">Initial value of CDFORN.</param>
        public static WK_PLN_FORN CreateWK_PLN_FORN(int sPID, int lIN, string cDFORN)
        {
            WK_PLN_FORN wK_PLN_FORN = new WK_PLN_FORN();
            wK_PLN_FORN.SPID = sPID;
            wK_PLN_FORN.LIN = lIN;
            wK_PLN_FORN.CDFORN = cDFORN;
            return wK_PLN_FORN;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SPID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SPID
        {
            get
            {
                int value = _SPID;
                OnGetSPID(ref value);
                return value;
            }
            set
            {
                if (_SPID != value)
                {
                  OnSPIDChanging(ref value);
                  ReportPropertyChanging("SPID");
                  _SPID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SPID");
                  OnSPIDChanged();
              }
            }
        }
        private int _SPID;
        partial void OnGetSPID(ref int value);
        partial void OnSPIDChanging(ref int value);
        partial void OnSPIDChanged();
    
        /// <summary>
        /// There are no comments for LIN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int LIN
        {
            get
            {
                int value = _LIN;
                OnGetLIN(ref value);
                return value;
            }
            set
            {
                if (_LIN != value)
                {
                  OnLINChanging(ref value);
                  ReportPropertyChanging("LIN");
                  _LIN = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LIN");
                  OnLINChanged();
              }
            }
        }
        private int _LIN;
        partial void OnGetLIN(ref int value);
        partial void OnLINChanging(ref int value);
        partial void OnLINChanged();
    
        /// <summary>
        /// There are no comments for CDFORN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CDFORN
        {
            get
            {
                string value = _CDFORN;
                OnGetCDFORN(ref value);
                return value;
            }
            set
            {
                if (_CDFORN != value)
                {
                  OnCDFORNChanging(ref value);
                  ReportPropertyChanging("CDFORN");
                  _CDFORN = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CDFORN");
                  OnCDFORNChanged();
              }
            }
        }
        private string _CDFORN;
        partial void OnGetCDFORN(ref string value);
        partial void OnCDFORNChanging(ref string value);
        partial void OnCDFORNChanged();
    
        /// <summary>
        /// There are no comments for NOME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string NOME
        {
            get
            {
                string value = _NOME;
                OnGetNOME(ref value);
                return value;
            }
            set
            {
                if (_NOME != value)
                {
                  OnNOMEChanging(ref value);
                  ReportPropertyChanging("NOME");
                  _NOME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NOME");
                  OnNOMEChanged();
              }
            }
        }
        private string _NOME;
        partial void OnGetNOME(ref string value);
        partial void OnNOMEChanging(ref string value);
        partial void OnNOMEChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WK_PLN_FORN obj = new WK_PLN_FORN();
            obj.SPID = SPID;
            obj.LIN = LIN;
            obj.CDFORN = CDFORN;
            obj.NOME = NOME;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WK_PLN_FORN toCompare = obj as WK_PLN_FORN;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.SPID, toCompare.SPID))
            return false;
          if (!Object.Equals(this.LIN, toCompare.LIN))
            return false;
          if (!Object.Equals(this.CDFORN, toCompare.CDFORN))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + SPID.GetHashCode();
          hashCode = (hashCode * 7) + LIN.GetHashCode();
          hashCode = (hashCode * 7) + CDFORN.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
