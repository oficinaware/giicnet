//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WK_SAFT_PROCESSA_GT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// spid
    /// nrreg
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WK_SAFT_PROCESSA_GT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WK_SAFT_PROCESSA_GT : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WK_SAFT_PROCESSA_GT object.
        /// </summary>
        /// <param name="spid">Initial value of spid.</param>
        /// <param name="nrreg">Initial value of nrreg.</param>
        /// <param name="tipoReg">Initial value of TipoReg.</param>
        public static WK_SAFT_PROCESSA_GT CreateWK_SAFT_PROCESSA_GT(int spid, int nrreg, string tipoReg)
        {
            WK_SAFT_PROCESSA_GT wK_SAFT_PROCESSA_GT = new WK_SAFT_PROCESSA_GT();
            wK_SAFT_PROCESSA_GT.spid = spid;
            wK_SAFT_PROCESSA_GT.nrreg = nrreg;
            wK_SAFT_PROCESSA_GT.TipoReg = tipoReg;
            return wK_SAFT_PROCESSA_GT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for spid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int spid
        {
            get
            {
                int value = _spid;
                OnGetspid(ref value);
                return value;
            }
            set
            {
                if (_spid != value)
                {
                  OnspidChanging(ref value);
                  ReportPropertyChanging("spid");
                  _spid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("spid");
                  OnspidChanged();
              }
            }
        }
        private int _spid;
        partial void OnGetspid(ref int value);
        partial void OnspidChanging(ref int value);
        partial void OnspidChanged();
    
        /// <summary>
        /// There are no comments for nrreg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int nrreg
        {
            get
            {
                int value = _nrreg;
                OnGetnrreg(ref value);
                return value;
            }
            set
            {
                if (_nrreg != value)
                {
                  OnnrregChanging(ref value);
                  ReportPropertyChanging("nrreg");
                  _nrreg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("nrreg");
                  OnnrregChanged();
              }
            }
        }
        private int _nrreg;
        partial void OnGetnrreg(ref int value);
        partial void OnnrregChanging(ref int value);
        partial void OnnrregChanged();
    
        /// <summary>
        /// There are no comments for TipoReg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string TipoReg
        {
            get
            {
                string value = _TipoReg;
                OnGetTipoReg(ref value);
                return value;
            }
            set
            {
                if (_TipoReg != value)
                {
                  OnTipoRegChanging(ref value);
                  ReportPropertyChanging("TipoReg");
                  _TipoReg = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("TipoReg");
                  OnTipoRegChanged();
              }
            }
        }
        private string _TipoReg;
        partial void OnGetTipoReg(ref string value);
        partial void OnTipoRegChanging(ref string value);
        partial void OnTipoRegChanged();
    
        /// <summary>
        /// There are no comments for ErrorMessage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(200)]
        public string ErrorMessage
        {
            get
            {
                string value = _ErrorMessage;
                OnGetErrorMessage(ref value);
                return value;
            }
            set
            {
                if (_ErrorMessage != value)
                {
                  OnErrorMessageChanging(ref value);
                  ReportPropertyChanging("ErrorMessage");
                  _ErrorMessage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ErrorMessage");
                  OnErrorMessageChanged();
              }
            }
        }
        private string _ErrorMessage;
        partial void OnGetErrorMessage(ref string value);
        partial void OnErrorMessageChanging(ref string value);
        partial void OnErrorMessageChanged();
    
        /// <summary>
        /// There are no comments for LineNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LineNumber
        {
            get
            {
                global::System.Nullable<int> value = _LineNumber;
                OnGetLineNumber(ref value);
                return value;
            }
            set
            {
                if (_LineNumber != value)
                {
                  OnLineNumberChanging(ref value);
                  ReportPropertyChanging("LineNumber");
                  _LineNumber = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LineNumber");
                  OnLineNumberChanged();
              }
            }
        }
        private global::System.Nullable<int> _LineNumber;
        partial void OnGetLineNumber(ref global::System.Nullable<int> value);
        partial void OnLineNumberChanging(ref global::System.Nullable<int> value);
        partial void OnLineNumberChanged();
    
        /// <summary>
        /// There are no comments for DocumentNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string DocumentNumber
        {
            get
            {
                string value = _DocumentNumber;
                OnGetDocumentNumber(ref value);
                return value;
            }
            set
            {
                if (_DocumentNumber != value)
                {
                  OnDocumentNumberChanging(ref value);
                  ReportPropertyChanging("DocumentNumber");
                  _DocumentNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DocumentNumber");
                  OnDocumentNumberChanged();
              }
            }
        }
        private string _DocumentNumber;
        partial void OnGetDocumentNumber(ref string value);
        partial void OnDocumentNumberChanging(ref string value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// There are no comments for ATDocCodeID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(150)]
        public string ATDocCodeID
        {
            get
            {
                string value = _ATDocCodeID;
                OnGetATDocCodeID(ref value);
                return value;
            }
            set
            {
                if (_ATDocCodeID != value)
                {
                  OnATDocCodeIDChanging(ref value);
                  ReportPropertyChanging("ATDocCodeID");
                  _ATDocCodeID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ATDocCodeID");
                  OnATDocCodeIDChanged();
              }
            }
        }
        private string _ATDocCodeID;
        partial void OnGetATDocCodeID(ref string value);
        partial void OnATDocCodeIDChanging(ref string value);
        partial void OnATDocCodeIDChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WK_SAFT_PROCESSA_GT obj = new WK_SAFT_PROCESSA_GT();
            obj.spid = spid;
            obj.nrreg = nrreg;
            obj.TipoReg = TipoReg;
            obj.ErrorMessage = ErrorMessage;
            obj.LineNumber = LineNumber;
            obj.DocumentNumber = DocumentNumber;
            obj.ATDocCodeID = ATDocCodeID;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WK_SAFT_PROCESSA_GT toCompare = obj as WK_SAFT_PROCESSA_GT;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.spid, toCompare.spid))
            return false;
          if (!Object.Equals(this.nrreg, toCompare.nrreg))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + spid.GetHashCode();
          hashCode = (hashCode * 7) + nrreg.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
