//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.WK_SEGCLI in the schema.
    /// </summary>
    /// <KeyProperties>
    /// SPID
    /// CLIENTE
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="WK_SEGCLI")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WK_SEGCLI : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new WK_SEGCLI object.
        /// </summary>
        /// <param name="sPID">Initial value of SPID.</param>
        /// <param name="cLIENTE">Initial value of CLIENTE.</param>
        public static WK_SEGCLI CreateWK_SEGCLI(int sPID, string cLIENTE)
        {
            WK_SEGCLI wK_SEGCLI = new WK_SEGCLI();
            wK_SEGCLI.SPID = sPID;
            wK_SEGCLI.CLIENTE = cLIENTE;
            return wK_SEGCLI;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for SPID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int SPID
        {
            get
            {
                int value = _SPID;
                OnGetSPID(ref value);
                return value;
            }
            set
            {
                if (_SPID != value)
                {
                  OnSPIDChanging(ref value);
                  ReportPropertyChanging("SPID");
                  _SPID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SPID");
                  OnSPIDChanged();
              }
            }
        }
        private int _SPID;
        partial void OnGetSPID(ref int value);
        partial void OnSPIDChanging(ref int value);
        partial void OnSPIDChanged();
    
        /// <summary>
        /// There are no comments for CLIENTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string CLIENTE
        {
            get
            {
                string value = _CLIENTE;
                OnGetCLIENTE(ref value);
                return value;
            }
            set
            {
                if (_CLIENTE != value)
                {
                  OnCLIENTEChanging(ref value);
                  ReportPropertyChanging("CLIENTE");
                  _CLIENTE = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CLIENTE");
                  OnCLIENTEChanged();
              }
            }
        }
        private string _CLIENTE;
        partial void OnGetCLIENTE(ref string value);
        partial void OnCLIENTEChanging(ref string value);
        partial void OnCLIENTEChanged();
    
        /// <summary>
        /// There are no comments for NOME in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string NOME
        {
            get
            {
                string value = _NOME;
                OnGetNOME(ref value);
                return value;
            }
            set
            {
                if (_NOME != value)
                {
                  OnNOMEChanging(ref value);
                  ReportPropertyChanging("NOME");
                  _NOME = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NOME");
                  OnNOMEChanged();
              }
            }
        }
        private string _NOME;
        partial void OnGetNOME(ref string value);
        partial void OnNOMEChanging(ref string value);
        partial void OnNOMEChanged();
    
        /// <summary>
        /// There are no comments for CodSeg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string CodSeg
        {
            get
            {
                string value = _CodSeg;
                OnGetCodSeg(ref value);
                return value;
            }
            set
            {
                if (_CodSeg != value)
                {
                  OnCodSegChanging(ref value);
                  ReportPropertyChanging("CodSeg");
                  _CodSeg = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CodSeg");
                  OnCodSegChanged();
              }
            }
        }
        private string _CodSeg;
        partial void OnGetCodSeg(ref string value);
        partial void OnCodSegChanging(ref string value);
        partial void OnCodSegChanged();
    
        /// <summary>
        /// There are no comments for NomeSeguradora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string NomeSeguradora
        {
            get
            {
                string value = _NomeSeguradora;
                OnGetNomeSeguradora(ref value);
                return value;
            }
            set
            {
                if (_NomeSeguradora != value)
                {
                  OnNomeSeguradoraChanging(ref value);
                  ReportPropertyChanging("NomeSeguradora");
                  _NomeSeguradora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NomeSeguradora");
                  OnNomeSeguradoraChanged();
              }
            }
        }
        private string _NomeSeguradora;
        partial void OnGetNomeSeguradora(ref string value);
        partial void OnNomeSeguradoraChanging(ref string value);
        partial void OnNomeSeguradoraChanged();
    
        /// <summary>
        /// There are no comments for NrActa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string NrActa
        {
            get
            {
                string value = _NrActa;
                OnGetNrActa(ref value);
                return value;
            }
            set
            {
                if (_NrActa != value)
                {
                  OnNrActaChanging(ref value);
                  ReportPropertyChanging("NrActa");
                  _NrActa = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NrActa");
                  OnNrActaChanged();
              }
            }
        }
        private string _NrActa;
        partial void OnGetNrActa(ref string value);
        partial void OnNrActaChanging(ref string value);
        partial void OnNrActaChanged();
    
        /// <summary>
        /// There are no comments for NrApolice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string NrApolice
        {
            get
            {
                string value = _NrApolice;
                OnGetNrApolice(ref value);
                return value;
            }
            set
            {
                if (_NrApolice != value)
                {
                  OnNrApoliceChanging(ref value);
                  ReportPropertyChanging("NrApolice");
                  _NrApolice = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NrApolice");
                  OnNrApoliceChanged();
              }
            }
        }
        private string _NrApolice;
        partial void OnGetNrApolice(ref string value);
        partial void OnNrApoliceChanging(ref string value);
        partial void OnNrApoliceChanged();
    
        /// <summary>
        /// There are no comments for Plafond in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> Plafond
        {
            get
            {
                global::System.Nullable<decimal> value = _Plafond;
                OnGetPlafond(ref value);
                return value;
            }
            set
            {
                if (_Plafond != value)
                {
                  OnPlafondChanging(ref value);
                  ReportPropertyChanging("Plafond");
                  _Plafond = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Plafond");
                  OnPlafondChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _Plafond = 0m;
        partial void OnGetPlafond(ref global::System.Nullable<decimal> value);
        partial void OnPlafondChanging(ref global::System.Nullable<decimal> value);
        partial void OnPlafondChanged();
    
        /// <summary>
        /// There are no comments for PlafondSeg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> PlafondSeg
        {
            get
            {
                global::System.Nullable<decimal> value = _PlafondSeg;
                OnGetPlafondSeg(ref value);
                return value;
            }
            set
            {
                if (_PlafondSeg != value)
                {
                  OnPlafondSegChanging(ref value);
                  ReportPropertyChanging("PlafondSeg");
                  _PlafondSeg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PlafondSeg");
                  OnPlafondSegChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _PlafondSeg = 0m;
        partial void OnGetPlafondSeg(ref global::System.Nullable<decimal> value);
        partial void OnPlafondSegChanging(ref global::System.Nullable<decimal> value);
        partial void OnPlafondSegChanged();
    
        /// <summary>
        /// There are no comments for TOTALPFUTI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> TOTALPFUTI
        {
            get
            {
                global::System.Nullable<decimal> value = _TOTALPFUTI;
                OnGetTOTALPFUTI(ref value);
                return value;
            }
            set
            {
                if (_TOTALPFUTI != value)
                {
                  OnTOTALPFUTIChanging(ref value);
                  ReportPropertyChanging("TOTALPFUTI");
                  _TOTALPFUTI = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TOTALPFUTI");
                  OnTOTALPFUTIChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _TOTALPFUTI = 0m;
        partial void OnGetTOTALPFUTI(ref global::System.Nullable<decimal> value);
        partial void OnTOTALPFUTIChanging(ref global::System.Nullable<decimal> value);
        partial void OnTOTALPFUTIChanged();
    
        /// <summary>
        /// There are no comments for TOTCREDITO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> TOTCREDITO
        {
            get
            {
                global::System.Nullable<decimal> value = _TOTCREDITO;
                OnGetTOTCREDITO(ref value);
                return value;
            }
            set
            {
                if (_TOTCREDITO != value)
                {
                  OnTOTCREDITOChanging(ref value);
                  ReportPropertyChanging("TOTCREDITO");
                  _TOTCREDITO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TOTCREDITO");
                  OnTOTCREDITOChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _TOTCREDITO;
        partial void OnGetTOTCREDITO(ref global::System.Nullable<decimal> value);
        partial void OnTOTCREDITOChanging(ref global::System.Nullable<decimal> value);
        partial void OnTOTCREDITOChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            WK_SEGCLI obj = new WK_SEGCLI();
            obj.SPID = SPID;
            obj.CLIENTE = CLIENTE;
            obj.NOME = NOME;
            obj.CodSeg = CodSeg;
            obj.NomeSeguradora = NomeSeguradora;
            obj.NrActa = NrActa;
            obj.NrApolice = NrApolice;
            obj.Plafond = Plafond;
            obj.PlafondSeg = PlafondSeg;
            obj.TOTALPFUTI = TOTALPFUTI;
            obj.TOTCREDITO = TOTCREDITO;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          WK_SEGCLI toCompare = obj as WK_SEGCLI;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.SPID, toCompare.SPID))
            return false;
          if (!Object.Equals(this.CLIENTE, toCompare.CLIENTE))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + SPID.GetHashCode();
          hashCode = (hashCode * 7) + CLIENTE.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
