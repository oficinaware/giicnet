//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.cummlative in the schema.
    /// </summary>
    /// <KeyProperties>
    /// id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="cummlative")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cummlative : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new cummlative object.
        /// </summary>
        /// <param name="id">Initial value of id.</param>
        public static cummlative Createcummlative(int id)
        {
            cummlative cummlative = new cummlative();
            cummlative.id = id;
            return cummlative;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int id
        {
            get
            {
                int value = _id;
                OnGetid(ref value);
                return value;
            }
            set
            {
                if (_id != value)
                {
                  OnidChanging(ref value);
                  ReportPropertyChanging("id");
                  _id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("id");
                  OnidChanged();
              }
            }
        }
        private int _id;
        partial void OnGetid(ref int value);
        partial void OnidChanging(ref int value);
        partial void OnidChanged();
    
        /// <summary>
        /// There are no comments for val in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> val
        {
            get
            {
                global::System.Nullable<int> value = _val;
                OnGetval(ref value);
                return value;
            }
            set
            {
                if (_val != value)
                {
                  OnvalChanging(ref value);
                  ReportPropertyChanging("val");
                  _val = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("val");
                  OnvalChanged();
              }
            }
        }
        private global::System.Nullable<int> _val;
        partial void OnGetval(ref global::System.Nullable<int> value);
        partial void OnvalChanging(ref global::System.Nullable<int> value);
        partial void OnvalChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            cummlative obj = new cummlative();
            obj.id = id;
            obj.val = val;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          cummlative toCompare = obj as cummlative;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.id, toCompare.id))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + id.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
