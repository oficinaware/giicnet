//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.input_cxgcr in the schema.
    /// </summary>
    /// <KeyProperties>
    /// nrreg
    /// spid
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="input_cxgcr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class input_cxgcr : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new input_cxgcr object.
        /// </summary>
        /// <param name="nrreg">Initial value of nrreg.</param>
        /// <param name="spid">Initial value of spid.</param>
        /// <param name="arm">Initial value of arm.</param>
        /// <param name="codbarras">Initial value of codbarras.</param>
        /// <param name="qt">Initial value of qt.</param>
        public static input_cxgcr Createinput_cxgcr(int nrreg, int spid, string arm, string codbarras, int qt)
        {
            input_cxgcr input_cxgcr = new input_cxgcr();
            input_cxgcr.nrreg = nrreg;
            input_cxgcr.spid = spid;
            input_cxgcr.arm = arm;
            input_cxgcr.codbarras = codbarras;
            input_cxgcr.qt = qt;
            return input_cxgcr;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for nrreg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int nrreg
        {
            get
            {
                int value = _nrreg;
                OnGetnrreg(ref value);
                return value;
            }
            set
            {
                if (_nrreg != value)
                {
                  OnnrregChanging(ref value);
                  ReportPropertyChanging("nrreg");
                  _nrreg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("nrreg");
                  OnnrregChanged();
              }
            }
        }
        private int _nrreg;
        partial void OnGetnrreg(ref int value);
        partial void OnnrregChanging(ref int value);
        partial void OnnrregChanged();
    
        /// <summary>
        /// There are no comments for spid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int spid
        {
            get
            {
                int value = _spid;
                OnGetspid(ref value);
                return value;
            }
            set
            {
                if (_spid != value)
                {
                  OnspidChanging(ref value);
                  ReportPropertyChanging("spid");
                  _spid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("spid");
                  OnspidChanged();
              }
            }
        }
        private int _spid;
        partial void OnGetspid(ref int value);
        partial void OnspidChanging(ref int value);
        partial void OnspidChanged();
    
        /// <summary>
        /// There are no comments for arm in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string arm
        {
            get
            {
                string value = _arm;
                OnGetarm(ref value);
                return value;
            }
            set
            {
                if (_arm != value)
                {
                  OnarmChanging(ref value);
                  ReportPropertyChanging("arm");
                  _arm = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("arm");
                  OnarmChanged();
              }
            }
        }
        private string _arm;
        partial void OnGetarm(ref string value);
        partial void OnarmChanging(ref string value);
        partial void OnarmChanged();
    
        /// <summary>
        /// There are no comments for codbarras in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string codbarras
        {
            get
            {
                string value = _codbarras;
                OnGetcodbarras(ref value);
                return value;
            }
            set
            {
                if (_codbarras != value)
                {
                  OncodbarrasChanging(ref value);
                  ReportPropertyChanging("codbarras");
                  _codbarras = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("codbarras");
                  OncodbarrasChanged();
              }
            }
        }
        private string _codbarras;
        partial void OnGetcodbarras(ref string value);
        partial void OncodbarrasChanging(ref string value);
        partial void OncodbarrasChanged();
    
        /// <summary>
        /// There are no comments for qt in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public int qt
        {
            get
            {
                int value = _qt;
                OnGetqt(ref value);
                return value;
            }
            set
            {
                if (_qt != value)
                {
                  OnqtChanging(ref value);
                  ReportPropertyChanging("qt");
                  _qt = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("qt");
                  OnqtChanged();
              }
            }
        }
        private int _qt = 1;
        partial void OnGetqt(ref int value);
        partial void OnqtChanging(ref int value);
        partial void OnqtChanged();
    
        /// <summary>
        /// There are no comments for nrenco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string nrenco
        {
            get
            {
                string value = _nrenco;
                OnGetnrenco(ref value);
                return value;
            }
            set
            {
                if (_nrenco != value)
                {
                  OnnrencoChanging(ref value);
                  ReportPropertyChanging("nrenco");
                  _nrenco = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("nrenco");
                  OnnrencoChanged();
              }
            }
        }
        private string _nrenco;
        partial void OnGetnrenco(ref string value);
        partial void OnnrencoChanging(ref string value);
        partial void OnnrencoChanged();
    
        /// <summary>
        /// There are no comments for lnenco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> lnenco
        {
            get
            {
                global::System.Nullable<int> value = _lnenco;
                OnGetlnenco(ref value);
                return value;
            }
            set
            {
                if (_lnenco != value)
                {
                  OnlnencoChanging(ref value);
                  ReportPropertyChanging("lnenco");
                  _lnenco = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("lnenco");
                  OnlnencoChanged();
              }
            }
        }
        private global::System.Nullable<int> _lnenco;
        partial void OnGetlnenco(ref global::System.Nullable<int> value);
        partial void OnlnencoChanging(ref global::System.Nullable<int> value);
        partial void OnlnencoChanged();
    
        /// <summary>
        /// There are no comments for MODELO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string MODELO
        {
            get
            {
                string value = _MODELO;
                OnGetMODELO(ref value);
                return value;
            }
            set
            {
                if (_MODELO != value)
                {
                  OnMODELOChanging(ref value);
                  ReportPropertyChanging("MODELO");
                  _MODELO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MODELO");
                  OnMODELOChanged();
              }
            }
        }
        private string _MODELO;
        partial void OnGetMODELO(ref string value);
        partial void OnMODELOChanging(ref string value);
        partial void OnMODELOChanged();
    
        /// <summary>
        /// There are no comments for VARIANTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string VARIANTE
        {
            get
            {
                string value = _VARIANTE;
                OnGetVARIANTE(ref value);
                return value;
            }
            set
            {
                if (_VARIANTE != value)
                {
                  OnVARIANTEChanging(ref value);
                  ReportPropertyChanging("VARIANTE");
                  _VARIANTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("VARIANTE");
                  OnVARIANTEChanged();
              }
            }
        }
        private string _VARIANTE;
        partial void OnGetVARIANTE(ref string value);
        partial void OnVARIANTEChanging(ref string value);
        partial void OnVARIANTEChanged();
    
        /// <summary>
        /// There are no comments for COR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string COR
        {
            get
            {
                string value = _COR;
                OnGetCOR(ref value);
                return value;
            }
            set
            {
                if (_COR != value)
                {
                  OnCORChanging(ref value);
                  ReportPropertyChanging("COR");
                  _COR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("COR");
                  OnCORChanged();
              }
            }
        }
        private string _COR;
        partial void OnGetCOR(ref string value);
        partial void OnCORChanging(ref string value);
        partial void OnCORChanged();
    
        /// <summary>
        /// There are no comments for itam in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> itam
        {
            get
            {
                global::System.Nullable<int> value = _itam;
                OnGetitam(ref value);
                return value;
            }
            set
            {
                if (_itam != value)
                {
                  OnitamChanging(ref value);
                  ReportPropertyChanging("itam");
                  _itam = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("itam");
                  OnitamChanged();
              }
            }
        }
        private global::System.Nullable<int> _itam;
        partial void OnGetitam(ref global::System.Nullable<int> value);
        partial void OnitamChanging(ref global::System.Nullable<int> value);
        partial void OnitamChanged();
    
        /// <summary>
        /// There are no comments for tam in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string tam
        {
            get
            {
                string value = _tam;
                OnGettam(ref value);
                return value;
            }
            set
            {
                if (_tam != value)
                {
                  OntamChanging(ref value);
                  ReportPropertyChanging("tam");
                  _tam = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("tam");
                  OntamChanged();
              }
            }
        }
        private string _tam;
        partial void OnGettam(ref string value);
        partial void OntamChanging(ref string value);
        partial void OntamChanged();
    
        /// <summary>
        /// There are no comments for DataReg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DataReg
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DataReg;
                OnGetDataReg(ref value);
                return value;
            }
            set
            {
                if (_DataReg != value)
                {
                  OnDataRegChanging(ref value);
                  ReportPropertyChanging("DataReg");
                  _DataReg = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DataReg");
                  OnDataRegChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DataReg = DateTime.Now;
        partial void OnGetDataReg(ref global::System.Nullable<System.DateTime> value);
        partial void OnDataRegChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDataRegChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            input_cxgcr obj = new input_cxgcr();
            obj.nrreg = nrreg;
            obj.spid = spid;
            obj.arm = arm;
            obj.codbarras = codbarras;
            obj.qt = qt;
            obj.nrenco = nrenco;
            obj.lnenco = lnenco;
            obj.MODELO = MODELO;
            obj.VARIANTE = VARIANTE;
            obj.COR = COR;
            obj.itam = itam;
            obj.tam = tam;
            obj.DataReg = DataReg;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          input_cxgcr toCompare = obj as input_cxgcr;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.nrreg, toCompare.nrreg))
            return false;
          if (!Object.Equals(this.spid, toCompare.spid))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + nrreg.GetHashCode();
          hashCode = (hashCode * 7) + spid.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
