//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.planning_ec in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ordfab
    /// seq
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="planning_ec")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class planning_ec : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new planning_ec object.
        /// </summary>
        /// <param name="ordfab">Initial value of ordfab.</param>
        /// <param name="seq">Initial value of seq.</param>
        /// <param name="operacao">Initial value of operacao.</param>
        public static planning_ec Createplanning_ec(string ordfab, int seq, string operacao)
        {
            planning_ec planning_ec = new planning_ec();
            planning_ec.ordfab = ordfab;
            planning_ec.seq = seq;
            planning_ec.operacao = operacao;
            return planning_ec;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ordfab in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string ordfab
        {
            get
            {
                string value = _ordfab;
                OnGetordfab(ref value);
                return value;
            }
            set
            {
                if (_ordfab != value)
                {
                  OnordfabChanging(ref value);
                  ReportPropertyChanging("ordfab");
                  _ordfab = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ordfab");
                  OnordfabChanged();
              }
            }
        }
        private string _ordfab;
        partial void OnGetordfab(ref string value);
        partial void OnordfabChanging(ref string value);
        partial void OnordfabChanged();
    
        /// <summary>
        /// There are no comments for seq in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public int seq
        {
            get
            {
                int value = _seq;
                OnGetseq(ref value);
                return value;
            }
            set
            {
                if (_seq != value)
                {
                  OnseqChanging(ref value);
                  ReportPropertyChanging("seq");
                  _seq = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("seq");
                  OnseqChanged();
              }
            }
        }
        private int _seq;
        partial void OnGetseq(ref int value);
        partial void OnseqChanging(ref int value);
        partial void OnseqChanged();
    
        /// <summary>
        /// There are no comments for operacao in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string operacao
        {
            get
            {
                string value = _operacao;
                OnGetoperacao(ref value);
                return value;
            }
            set
            {
                if (_operacao != value)
                {
                  OnoperacaoChanging(ref value);
                  ReportPropertyChanging("operacao");
                  _operacao = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("operacao");
                  OnoperacaoChanged();
              }
            }
        }
        private string _operacao;
        partial void OnGetoperacao(ref string value);
        partial void OnoperacaoChanging(ref string value);
        partial void OnoperacaoChanged();
    
        /// <summary>
        /// There are no comments for seccao in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string seccao
        {
            get
            {
                string value = _seccao;
                OnGetseccao(ref value);
                return value;
            }
            set
            {
                if (_seccao != value)
                {
                  OnseccaoChanging(ref value);
                  ReportPropertyChanging("seccao");
                  _seccao = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("seccao");
                  OnseccaoChanged();
              }
            }
        }
        private string _seccao;
        partial void OnGetseccao(ref string value);
        partial void OnseccaoChanging(ref string value);
        partial void OnseccaoChanged();
    
        /// <summary>
        /// There are no comments for seq_pln in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> seq_pln
        {
            get
            {
                global::System.Nullable<int> value = _seq_pln;
                OnGetseq_pln(ref value);
                return value;
            }
            set
            {
                if (_seq_pln != value)
                {
                  Onseq_plnChanging(ref value);
                  ReportPropertyChanging("seq_pln");
                  _seq_pln = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("seq_pln");
                  Onseq_plnChanged();
              }
            }
        }
        private global::System.Nullable<int> _seq_pln;
        partial void OnGetseq_pln(ref global::System.Nullable<int> value);
        partial void Onseq_plnChanging(ref global::System.Nullable<int> value);
        partial void Onseq_plnChanged();
    
        /// <summary>
        /// There are no comments for data_pln in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> data_pln
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _data_pln;
                OnGetdata_pln(ref value);
                return value;
            }
            set
            {
                if (_data_pln != value)
                {
                  Ondata_plnChanging(ref value);
                  ReportPropertyChanging("data_pln");
                  _data_pln = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("data_pln");
                  Ondata_plnChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _data_pln;
        partial void OnGetdata_pln(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_plnChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_plnChanged();
    
        /// <summary>
        /// There are no comments for sem_pln in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string sem_pln
        {
            get
            {
                string value = _sem_pln;
                OnGetsem_pln(ref value);
                return value;
            }
            set
            {
                if (_sem_pln != value)
                {
                  Onsem_plnChanging(ref value);
                  ReportPropertyChanging("sem_pln");
                  _sem_pln = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("sem_pln");
                  Onsem_plnChanged();
              }
            }
        }
        private string _sem_pln;
        partial void OnGetsem_pln(ref string value);
        partial void Onsem_plnChanging(ref string value);
        partial void Onsem_plnChanged();
    
        /// <summary>
        /// There are no comments for plano_dia in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> plano_dia
        {
            get
            {
                global::System.Nullable<bool> value = _plano_dia;
                OnGetplano_dia(ref value);
                return value;
            }
            set
            {
                if (_plano_dia != value)
                {
                  Onplano_diaChanging(ref value);
                  ReportPropertyChanging("plano_dia");
                  _plano_dia = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("plano_dia");
                  Onplano_diaChanged();
              }
            }
        }
        private global::System.Nullable<bool> _plano_dia;
        partial void OnGetplano_dia(ref global::System.Nullable<bool> value);
        partial void Onplano_diaChanging(ref global::System.Nullable<bool> value);
        partial void Onplano_diaChanged();
    
        /// <summary>
        /// There are no comments for data_ini in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> data_ini
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _data_ini;
                OnGetdata_ini(ref value);
                return value;
            }
            set
            {
                if (_data_ini != value)
                {
                  Ondata_iniChanging(ref value);
                  ReportPropertyChanging("data_ini");
                  _data_ini = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("data_ini");
                  Ondata_iniChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _data_ini;
        partial void OnGetdata_ini(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_iniChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_iniChanged();
    
        /// <summary>
        /// There are no comments for data_fim in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> data_fim
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _data_fim;
                OnGetdata_fim(ref value);
                return value;
            }
            set
            {
                if (_data_fim != value)
                {
                  Ondata_fimChanging(ref value);
                  ReportPropertyChanging("data_fim");
                  _data_fim = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("data_fim");
                  Ondata_fimChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _data_fim;
        partial void OnGetdata_fim(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_fimChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ondata_fimChanged();
    
        /// <summary>
        /// There are no comments for codrota in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string codrota
        {
            get
            {
                string value = _codrota;
                OnGetcodrota(ref value);
                return value;
            }
            set
            {
                if (_codrota != value)
                {
                  OncodrotaChanging(ref value);
                  ReportPropertyChanging("codrota");
                  _codrota = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("codrota");
                  OncodrotaChanged();
              }
            }
        }
        private string _codrota;
        partial void OnGetcodrota(ref string value);
        partial void OncodrotaChanging(ref string value);
        partial void OncodrotaChanged();
    
        /// <summary>
        /// There are no comments for seccao_sug in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string seccao_sug
        {
            get
            {
                string value = _seccao_sug;
                OnGetseccao_sug(ref value);
                return value;
            }
            set
            {
                if (_seccao_sug != value)
                {
                  Onseccao_sugChanging(ref value);
                  ReportPropertyChanging("seccao_sug");
                  _seccao_sug = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("seccao_sug");
                  Onseccao_sugChanged();
              }
            }
        }
        private string _seccao_sug;
        partial void OnGetseccao_sug(ref string value);
        partial void Onseccao_sugChanging(ref string value);
        partial void Onseccao_sugChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            planning_ec obj = new planning_ec();
            obj.ordfab = ordfab;
            obj.seq = seq;
            obj.operacao = operacao;
            obj.seccao = seccao;
            obj.seq_pln = seq_pln;
            obj.data_pln = data_pln;
            obj.sem_pln = sem_pln;
            obj.plano_dia = plano_dia;
            obj.data_ini = data_ini;
            obj.data_fim = data_fim;
            obj.codrota = codrota;
            obj.seccao_sug = seccao_sug;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          planning_ec toCompare = obj as planning_ec;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.ordfab, toCompare.ordfab))
            return false;
          if (!Object.Equals(this.seq, toCompare.seq))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + ordfab.GetHashCode();
          hashCode = (hashCode * 7) + seq.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
