//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.tabStatusEnco in the schema.
    /// </summary>
    /// <KeyProperties>
    /// statusEnco
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="tabStatusEnco")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tabStatusEnco : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new tabStatusEnco object.
        /// </summary>
        /// <param name="statusEnco">Initial value of statusEnco.</param>
        /// <param name="descricao">Initial value of descricao.</param>
        public static tabStatusEnco CreatetabStatusEnco(string statusEnco, string descricao)
        {
            tabStatusEnco tabStatusEnco = new tabStatusEnco();
            tabStatusEnco.statusEnco = statusEnco;
            tabStatusEnco.descricao = descricao;
            return tabStatusEnco;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for statusEnco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string statusEnco
        {
            get
            {
                string value = _statusEnco;
                OnGetstatusEnco(ref value);
                return value;
            }
            set
            {
                if (_statusEnco != value)
                {
                  OnstatusEncoChanging(ref value);
                  ReportPropertyChanging("statusEnco");
                  _statusEnco = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("statusEnco");
                  OnstatusEncoChanged();
              }
            }
        }
        private string _statusEnco;
        partial void OnGetstatusEnco(ref string value);
        partial void OnstatusEncoChanging(ref string value);
        partial void OnstatusEncoChanged();
    
        /// <summary>
        /// There are no comments for descricao in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string descricao
        {
            get
            {
                string value = _descricao;
                OnGetdescricao(ref value);
                return value;
            }
            set
            {
                if (_descricao != value)
                {
                  OndescricaoChanging(ref value);
                  ReportPropertyChanging("descricao");
                  _descricao = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("descricao");
                  OndescricaoChanged();
              }
            }
        }
        private string _descricao;
        partial void OnGetdescricao(ref string value);
        partial void OndescricaoChanging(ref string value);
        partial void OndescricaoChanged();
    
        /// <summary>
        /// There are no comments for descricao_EN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        public string descricao_EN
        {
            get
            {
                string value = _descricao_EN;
                OnGetdescricao_EN(ref value);
                return value;
            }
            set
            {
                if (_descricao_EN != value)
                {
                  Ondescricao_ENChanging(ref value);
                  ReportPropertyChanging("descricao_EN");
                  _descricao_EN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("descricao_EN");
                  Ondescricao_ENChanged();
              }
            }
        }
        private string _descricao_EN;
        partial void OnGetdescricao_EN(ref string value);
        partial void Ondescricao_ENChanging(ref string value);
        partial void Ondescricao_ENChanged();
    
        /// <summary>
        /// There are no comments for descricao_ES in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(60)]
        public string descricao_ES
        {
            get
            {
                string value = _descricao_ES;
                OnGetdescricao_ES(ref value);
                return value;
            }
            set
            {
                if (_descricao_ES != value)
                {
                  Ondescricao_ESChanging(ref value);
                  ReportPropertyChanging("descricao_ES");
                  _descricao_ES = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("descricao_ES");
                  Ondescricao_ESChanged();
              }
            }
        }
        private string _descricao_ES;
        partial void OnGetdescricao_ES(ref string value);
        partial void Ondescricao_ESChanging(ref string value);
        partial void Ondescricao_ESChanged();
    
        /// <summary>
        /// There are no comments for web in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> web
        {
            get
            {
                global::System.Nullable<bool> value = _web;
                OnGetweb(ref value);
                return value;
            }
            set
            {
                if (_web != value)
                {
                  OnwebChanging(ref value);
                  ReportPropertyChanging("web");
                  _web = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("web");
                  OnwebChanged();
              }
            }
        }
        private global::System.Nullable<bool> _web;
        partial void OnGetweb(ref global::System.Nullable<bool> value);
        partial void OnwebChanging(ref global::System.Nullable<bool> value);
        partial void OnwebChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            tabStatusEnco obj = new tabStatusEnco();
            obj.statusEnco = statusEnco;
            obj.descricao = descricao;
            obj.descricao_EN = descricao_EN;
            obj.descricao_ES = descricao_ES;
            obj.web = web;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          tabStatusEnco toCompare = obj as tabStatusEnco;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.statusEnco, toCompare.statusEnco))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + statusEnco.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
