//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 08-11-2014 10:46:01
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace DataGiic_LiagoModel
{

    /// <summary>
    /// There are no comments for DataGiic_LiagoModel.tblEncoTemp in the schema.
    /// </summary>
    /// <KeyProperties>
    /// IDSessao
    /// Item
    /// Modelo
    /// Variante
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="DataGiic_LiagoModel", Name="tblEncoTemp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblEncoTemp : EntityObject, ICloneable    {
        #region Factory Method

        /// <summary>
        /// Create a new tblEncoTemp object.
        /// </summary>
        /// <param name="iDSessao">Initial value of IDSessao.</param>
        /// <param name="item">Initial value of Item.</param>
        /// <param name="modelo">Initial value of Modelo.</param>
        /// <param name="variante">Initial value of Variante.</param>
        /// <param name="confirmado">Initial value of Confirmado.</param>
        public static tblEncoTemp CreatetblEncoTemp(string iDSessao, short item, string modelo, string variante, bool confirmado)
        {
            tblEncoTemp tblEncoTemp = new tblEncoTemp();
            tblEncoTemp.IDSessao = iDSessao;
            tblEncoTemp.Item = item;
            tblEncoTemp.Modelo = modelo;
            tblEncoTemp.Variante = variante;
            tblEncoTemp.Confirmado = confirmado;
            return tblEncoTemp;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for IDSessao in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string IDSessao
        {
            get
            {
                string value = _IDSessao;
                OnGetIDSessao(ref value);
                return value;
            }
            set
            {
                if (_IDSessao != value)
                {
                  OnIDSessaoChanging(ref value);
                  ReportPropertyChanging("IDSessao");
                  _IDSessao = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("IDSessao");
                  OnIDSessaoChanged();
              }
            }
        }
        private string _IDSessao;
        partial void OnGetIDSessao(ref string value);
        partial void OnIDSessaoChanging(ref string value);
        partial void OnIDSessaoChanged();
    
        /// <summary>
        /// There are no comments for Item in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public short Item
        {
            get
            {
                short value = _Item;
                OnGetItem(ref value);
                return value;
            }
            set
            {
                if (_Item != value)
                {
                  OnItemChanging(ref value);
                  ReportPropertyChanging("Item");
                  _Item = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Item");
                  OnItemChanged();
              }
            }
        }
        private short _Item;
        partial void OnGetItem(ref short value);
        partial void OnItemChanging(ref short value);
        partial void OnItemChanged();
    
        /// <summary>
        /// There are no comments for Modelo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string Modelo
        {
            get
            {
                string value = _Modelo;
                OnGetModelo(ref value);
                return value;
            }
            set
            {
                if (_Modelo != value)
                {
                  OnModeloChanging(ref value);
                  ReportPropertyChanging("Modelo");
                  _Modelo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Modelo");
                  OnModeloChanged();
              }
            }
        }
        private string _Modelo;
        partial void OnGetModelo(ref string value);
        partial void OnModeloChanging(ref string value);
        partial void OnModeloChanged();
    
        /// <summary>
        /// There are no comments for Variante in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        [System.ComponentModel.DataAnnotations.Required()]
        public string Variante
        {
            get
            {
                string value = _Variante;
                OnGetVariante(ref value);
                return value;
            }
            set
            {
                if (_Variante != value)
                {
                  OnVarianteChanging(ref value);
                  ReportPropertyChanging("Variante");
                  _Variante = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Variante");
                  OnVarianteChanged();
              }
            }
        }
        private string _Variante;
        partial void OnGetVariante(ref string value);
        partial void OnVarianteChanging(ref string value);
        partial void OnVarianteChanged();
    
        /// <summary>
        /// There are no comments for Catalogo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string Catalogo
        {
            get
            {
                string value = _Catalogo;
                OnGetCatalogo(ref value);
                return value;
            }
            set
            {
                if (_Catalogo != value)
                {
                  OnCatalogoChanging(ref value);
                  ReportPropertyChanging("Catalogo");
                  _Catalogo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Catalogo");
                  OnCatalogoChanged();
              }
            }
        }
        private string _Catalogo = @"";
        partial void OnGetCatalogo(ref string value);
        partial void OnCatalogoChanging(ref string value);
        partial void OnCatalogoChanged();
    
        /// <summary>
        /// There are no comments for Confirmado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.Required()]
        public bool Confirmado
        {
            get
            {
                bool value = _Confirmado;
                OnGetConfirmado(ref value);
                return value;
            }
            set
            {
                if (_Confirmado != value)
                {
                  OnConfirmadoChanging(ref value);
                  ReportPropertyChanging("Confirmado");
                  _Confirmado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Confirmado");
                  OnConfirmadoChanged();
              }
            }
        }
        private bool _Confirmado;
        partial void OnGetConfirmado(ref bool value);
        partial void OnConfirmadoChanging(ref bool value);
        partial void OnConfirmadoChanged();
    
        /// <summary>
        /// There are no comments for NumEnco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string NumEnco
        {
            get
            {
                string value = _NumEnco;
                OnGetNumEnco(ref value);
                return value;
            }
            set
            {
                if (_NumEnco != value)
                {
                  OnNumEncoChanging(ref value);
                  ReportPropertyChanging("NumEnco");
                  _NumEnco = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NumEnco");
                  OnNumEncoChanged();
              }
            }
        }
        private string _NumEnco;
        partial void OnGetNumEnco(ref string value);
        partial void OnNumEncoChanging(ref string value);
        partial void OnNumEncoChanged();
    
        /// <summary>
        /// There are no comments for LnEnco in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LnEnco
        {
            get
            {
                global::System.Nullable<int> value = _LnEnco;
                OnGetLnEnco(ref value);
                return value;
            }
            set
            {
                if (_LnEnco != value)
                {
                  OnLnEncoChanging(ref value);
                  ReportPropertyChanging("LnEnco");
                  _LnEnco = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LnEnco");
                  OnLnEncoChanged();
              }
            }
        }
        private global::System.Nullable<int> _LnEnco;
        partial void OnGetLnEnco(ref global::System.Nullable<int> value);
        partial void OnLnEncoChanging(ref global::System.Nullable<int> value);
        partial void OnLnEncoChanged();

        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            tblEncoTemp obj = new tblEncoTemp();
            obj.IDSessao = IDSessao;
            obj.Item = Item;
            obj.Modelo = Modelo;
            obj.Variante = Variante;
            obj.Catalogo = Catalogo;
            obj.Confirmado = Confirmado;
            obj.NumEnco = NumEnco;
            obj.LnEnco = LnEnco;
            return obj;
        }

        #endregion
    
        #region Equals and GetHashCode methods

        public override bool Equals(object obj)
        {
          tblEncoTemp toCompare = obj as tblEncoTemp;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.IDSessao, toCompare.IDSessao))
            return false;
          if (!Object.Equals(this.Item, toCompare.Item))
            return false;
          if (!Object.Equals(this.Modelo, toCompare.Modelo))
            return false;
          if (!Object.Equals(this.Variante, toCompare.Variante))
            return false;
          
          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + IDSessao.GetHashCode();
          hashCode = (hashCode * 7) + Item.GetHashCode();
          hashCode = (hashCode * 7) + Modelo.GetHashCode();
          hashCode = (hashCode * 7) + Variante.GetHashCode();
          return hashCode;
        }

        #endregion
    }

}
